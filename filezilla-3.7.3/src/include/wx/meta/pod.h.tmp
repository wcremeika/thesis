
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx\meta\pod.h" 0
/////////////////////////////////////////////////////////////////////////////
// Name:        wx/meta/pod.h
// Purpose:     Test if a type is POD
// Author:      Vaclav Slavik, Jaakko Salli
// Created:     2010-06-14
// Copyright:   (c) wxWidgets team
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////

                       
                       

                   

//
// TODO: Use TR1 is_pod<> implementation where available. VC9 SP1 has it
//       in tr1 namespace, VC10 has it in std namespace. GCC 4.2 has it in
//       <tr1/type_traits>, while GCC 4.3 and later have it in <type_traits>.
//

// This macro declares something called "value" inside a class declaration.
//
// It has to be used because VC6 doesn't handle initialization of the static
// variables in the class declaration itself while BCC5.82 doesn't understand
// enums (it compiles the template fine but can't use it later)
                                                       
                                                                  
     
                                                                           
      

// Helper to decide if an object of type T is POD (Plain Old Data)
template<typename T>
struct wxIsPod
{
    static const bool value = false;
};

// Macro to add wxIsPod<T> specialization for given type that marks it
// as Plain Old Data:
                                                                                                                                                                                                                                                      





template<> struct wxIsPod<bool>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<unsigned char>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<signed char>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<unsigned int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<signed int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<unsigned short int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<signed short int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<signed long int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<unsigned long int>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<float>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<double>                             {                                                               static const bool value = true;                     };
template<> struct wxIsPod<long double>                             {                                                               static const bool value = true;                     };
                          
                            
      
                   
                                 
                                  
      

// Visual C++ 6.0 can't compile partial template specializations and as this is
// only an optimization, we can live with pointers not being recognized as
// POD types under VC6
                                                       

// pointers are Plain Old Data:
template<typename T>
struct wxIsPod<T*>
{
    static const bool value = true;
};

template<typename T>
struct wxIsPod<const T*>
{
    static const bool value = true;
};

       // !VC++ < 7

       // _WX_META_POD_H_
