
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx\stack.h" 0
///////////////////////////////////////////////////////////////////////////////
// Name:        wx/stack.h
// Purpose:     STL stack clone
// Author:      Lindsay Mathieson, Vadim Zeitlin
// Created:     30.07.2001
// Copyright:   (c) 2001 Lindsay Mathieson <lindsay@mathieson.org> (WX_DECLARE_STACK)
//                  2011 Vadim Zeitlin <vadim@wxwidgets.org>
// Licence:     wxWindows licence
///////////////////////////////////////////////////////////////////////////////

                    
                    

                     

                        

                
                          

      // !wxUSE_STD_CONTAINERS

// Notice that unlike std::stack, wxStack currently always uses wxVector and
// can't be used with any other underlying container type.
//
// Another difference is that comparison operators between stacks are not
// implemented (but they should be, see 23.2.3.3 of ISO/IEC 14882:1998).

template <typename T>
class wxStack
{
public:
    typedef wxVector<T> container_type;
    typedef typename container_type::size_type size_type;
    typedef typename container_type::value_type value_type;

    wxStack() { }
    explicit wxStack(const container_type& cont) : m_cont(cont) { }

    // Default copy ctor, assignment operator and dtor are ok.


    bool empty() const { return m_cont.empty(); }
    size_type size() const { return m_cont.size(); }

    value_type& top() { return m_cont.back(); }
    const value_type& top() const { return m_cont.back(); }

    void push(const value_type& val) { m_cont.push_back(val); }
    void pop() { m_cont.pop_back(); }

private:
    container_type m_cont;
};

       // wxUSE_STD_CONTAINERS/!wxUSE_STD_CONTAINERS


// Deprecated macro-based class for compatibility only, don't use any more.
                                                                                                                                                                                                                                                                                                                 























       // _WX_STACK_H_

