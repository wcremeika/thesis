
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\interface\listctrlex.h" 0
                        
                        

                           
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\interface\systemimagelist.h" 0
                             
                             

                
                     
                     
      

enum filetype
{
	file,
	dir,
	opened_dir
};

// Required wxImageList extension
class wxImageListEx : public wxImageList
{
public:
	wxImageListEx();
	wxImageListEx(int width, int height, const bool mask = true, int initialCount = 1);
	virtual ~wxImageListEx() {}

                
	                                                           
	                                                                 
	                    
      
};

class CSystemImageList
{
public:
	CSystemImageList(int size = -1);

	bool CreateSystemImageList(int size);
	virtual ~CSystemImageList();

	wxImageList* GetSystemImageList() { return m_pImageList; }

	int GetIconIndex(enum filetype type, const wxString& fileName = _T(""), bool physical = true, bool symlink = false);

                
	                          
      

protected:
	wxImageListEx *m_pImageList;

                 
	std::map<wxString, int> m_iconCache;
	std::map<wxString, int> m_iconSymlinkCache;
      
};

       //__SYSTEMIMAGELIST_H__

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\interface\listctrlex.h" 4
                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/dnd.h" 0
///////////////////////////////////////////////////////////////////////////////
// Name:        wx/dnd.h
// Purpose:     Drag and drop classes declarations
// Author:      Vadim Zeitlin, Robert Roebling
// Modified by:
// Created:     26.05.99
// Copyright:   (c) wxWidgets Team
// Licence:     wxWindows licence
///////////////////////////////////////////////////////////////////////////////

                       
                       

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 0
/*
 *  Name:        wx/defs.h
 *  Purpose:     Declarations/definitions common to all wx source files
 *  Author:      Julian Smart and others
 *  Modified by: Ryan Norton (Converted to C)
 *  Created:     01/02/97
 *  Copyright:   (c) Julian Smart
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                   
                   

/*
    NOTE: this symbol will be replaced with "WXWIN_COMPATIBILITY_3_0" as soon
          as the development branch for 3.1 is created
 */
                                             
                                             

/*  ---------------------------------------------------------------------------- */
/*  compiler and OS identification */
/*  ---------------------------------------------------------------------------- */

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/platform.h" 0
/**
* Name:        wx/platform.h
* Purpose:     define the OS and compiler identification macros
* Author:      Vadim Zeitlin
* Modified by:
* Created:     29.10.01 (extracted from wx/defs.h)
* Copyright:   (c) 1997-2001 Vadim Zeitlin
* Licence:     wxWindows licence
*/

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                       
                       

                      
                   
                               
                               
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                                
                 
                   
      
                 
                   
      
      

/*
    We use __WINDOWS__ as our main identification symbol for Microsoft Windows
    but it's actually not predefined directly by any commonly used compilers
    (only Watcom defines it itself and it's not supported any longer), so we
    define it ourselves if any of the following macros is defined:

    - MSVC _WIN32 (notice that this is also defined under Win64)
    - Borland __WIN32__
    - Our __WXMSW__ which selects Windows as platform automatically
 */
                                                               
                   
                   
                         
       /* Any standard symbol indicating Windows */

                   
              
          
                                                                            
                                                                           
                                                                             
           
              
                    

                 
                 
                       
       /* _WIN64 */

                        
                                                                   
                                                                                              
                 
      

                         
                   
      

              
              
      

             
             
      

                 
                 
      
       /* __WINDOWS__ */

/*
    Don't use widget toolkit specific code in non-GUI code in the library
    itself to ensure that the same base library is used for both MSW and GTK
    ports. But keep __WXMSW__ defined for (console) applications using
    wxWidgets for compatibility.
 */
                                                           
                
                
      
                
                
      
      

                                              

                
                
      

       /* __WXGTK__ && __WINDOWS__ */

/* detect MS SmartPhone */
                                  
                      
                      
      
                   
                   
      
      

/* detect PocketPC */
                                  
                    
                    
      
                   
                   
      
      

/* detect Standard WinCE SDK */
                                       
                             
                             
      
                   
                   
      
      

                                                                                         
                       
                     
                     
      
                         
                      
                      
      
      
                   
                   
      
      

                                                                   
                    
      

                                                                          
                      
      

                  
                     
                                      
      

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/compiler.h" 0
/*
 * Name:        wx/compiler.h
 * Purpose:     Compiler-specific macro definitions.
 * Author:      Vadim Zeitlin
 * Created:     2013-07-13 (extracted from wx/platform.h)
 * Copyright:   (c) 1997-2013 Vadim Zeitlin <vadim@wxwidgets.org>
 * Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                       
                       

/*
    Compiler detection and related helpers.
 */

/*
    Notice that Intel compiler can be used as Microsoft Visual C++ add-on and
    so we should define both __INTELC__ and __VISUALC__ for it.
*/
                       
                  
      

                     
      
                                                                            
                                                              
       
                            

      
                                                                              
                                                        
      
                      
      
                        
                    
                        
                    
                        
                    
                        
                    
                        
                    
                        
                     
                        
                     
                        
                     
     
       
      

                                                       
                    
                          
                     
                     
                          
                 
                             
                   
                     
              
                       
     
                    
      
        /* compiler */

/*
   Macros for checking compiler version.
*/

/*
   This macro can be used to test the gcc version and can be used like this:

#    if wxCHECK_GCC_VERSION(3, 1)
        ... we have gcc 3.1 or later ...
#    else
        ... no gcc at all or gcc < 3.1 ...
#    endif
*/
                                                
                                                                                                                                                      


     
                                                 
      

/*
   This macro can be used to test the Visual C++ version.
*/
                   
                                  
                                        
     
                                                      
                                                                                  
      

/**
    This is similar to wxCHECK_GCC_VERSION but for Sun CC compiler.
 */
                
      
                                                                               
       
                                                                                    
     
                                               
      

                   
                                       
                                             
                                                 
                                
     
                      
      
      

                                                                         
                                                                                            
                                                                                               
                                   
      

/*
   This macro can be used to check that the version of mingw32 compiler is
   at least maj.min
 */

/* Check for Mingw runtime version: */
                                                                        
                                                                                                                                                                                        



  
                                                                          
                                                                           
                                                                           
                                                                             
                                                                               
                  

                                                                          
                                                                           
                                                                          
   
                              
                             
                             
      
     
                             
                             
      
      
     
                                                       
      

       // _WX_COMPILER_H_

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/platform.h" 253

/*
   Include wx/setup.h for the Unix platform defines generated by configure and
   the library compilation options

   Note that it must be included before defining hardware symbols below as they
   could be already defined by configure but it must be included after defining
   the compiler macros above as msvc/wx/setup.h relies on them under Windows.
 */
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/setup.h" 0
/////////////////////////////////////////////////////////////////////////////
// Name:        msvc/wx/setup.h
// Purpose:     wrapper around the real wx/setup.h for Visual C++
// Author:      Vadim Zeitlin
// Modified by:
// Created:     2004-12-12
// Copyright:   (c) 2004 Vadim Zeitlin <vadim@wxwindows.org>
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////

                
          
      

// VC++ IDE predefines _DEBUG and _UNICODE for the new projects itself, but
// the other symbols (WXUSINGDLL, __WXUNIVERSAL__, ...) should be defined
// explicitly!

                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/version.h" 0
/*
 *  Name:        wx/version.h
 *  Purpose:     wxWidgets version numbers
 *  Author:      Julian Smart
 *  Modified by: Ryan Norton (Converted to C)
 *  Created:     29/01/98
 *  Copyright:   (c) 1998 Julian Smart
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                      
                      

                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/cpp.h" 0
/*
 *  Name:        wx/cpp.h
 *  Purpose:     Various preprocessor helpers
 *  Author:      Vadim Zeitlin
 *  Created:     2006-09-30
 *  Copyright:   (c) 2006 Vadim Zeitlin <vadim@wxwindows.org>
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                  
                  

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/compiler.h" 0
/*
 * Name:        wx/compiler.h
 * Purpose:     Compiler-specific macro definitions.
 * Author:      Vadim Zeitlin
 * Created:     2013-07-13 (extracted from wx/platform.h)
 * Copyright:   (c) 1997-2013 Vadim Zeitlin <vadim@wxwidgets.org>
 * Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                       
                       

  
                                           
   

  
                                                                             
                                                               
  
                       
                  
      

                     
      
                                                                            
                                                              
       
                            

      
                                                                              
                                                        
      
                      
      
                        
                    
                        
                    
                        
                    
                        
                    
                        
                    
                        
                     
                        
                     
                        
                     
     
       
      

                                                       
                    
                          
                     
                     
                          
                 
                             
                   
                     
              
                       
     
                    
      
                      

  
                                        
  

  
                                                                            

                                 
                                        
         
                                          
          
  
                                                
                                                                                                                                                      


     
                                                 
      

  
                                                         
  
                   
                                  
                                        
     
                                                      
                                                                                  
      

   
                                                                   
   
                
      
                                                                               
       
                                                                                    
     
                                               
      

                   
                                       
                                             
                                                 
                                
     
                      
      
      

                                                                         
                                                                                            
                                                                                               
                                   
      

  
                                                                          
                   
   

                                      
                                                                        
                                                                                                                                                                                        



  
                                                                          
                                                                           
                                                                           
                                                                             
                                                                               
                  

                                                                          
                                                                           
                                                                          
   
                              
                             
                             
      
     
                             
                             
      
      
     
                                                       
      

       // _WX_COMPILER_H_

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/cpp.h" 17    /* wxCHECK_XXX_VERSION() macros */

/* wxCONCAT works like preprocessor ## operator but also works with macros */
                                                

                                                    

                                                                

                                                                         

                                                                                 

                                                                                         

                                                                                                 

                                                                                                         

                                                                                                                 


/* wxSTRINGIZE works as the preprocessor # operator but also works with macros */
                                      
                                                         

/* a Unicode-friendly version of wxSTRINGIZE_T */
                                                             

/*
    Special workarounds for compilers with broken "##" operator. For all the
    other ones we can just use it directly.
 */
                                    
                                      
                                        
                                         
       /* wxCOMPILER_BROKEN_CONCAT_OPER */

/*
   Helper macros for wxMAKE_UNIQUE_NAME: normally this works by appending the
   current line number to the given identifier to reduce the probability of the
   conflict (it may still happen if this is used in the headers, hence you
   should avoid doing it or provide unique prefixes then) but we have to do it
   differently for VC++
  */
                                                 
      
                                                                          
                                                                             
                                                                             
                                                                             
              
       
                                                               
      /* normal compilers */
                                                            
      

/* Create a "unique" name with the given prefix */
                                                       

/*
   This macro can be passed as argument to another macro when you don't have
   anything to pass in fact.
 */
                                                                

/*
    Helpers for defining macros that expand into a single statement.

    The standatd solution is to use "do { ... } while (0)" statement but MSVC
    generates a C4127 "condition expression is constant" warning for it so we
    use something which is just complicated enough to not be recognized as a
    constant but still simple enough to be optimized away.

    Another solution would be to use __pragma() to temporarily disable C4127.

    Notice that wxASSERT_ARG_TYPE in wx/strvargarg.h relies on these macros
    creating some kind of a loop because it uses "break".
 */
                  
                                                            
                                                                             
                                   
     
                                         
                                                        
      

/*
    Define __WXFUNCTION__ which is like standard __FUNCTION__ but defined as
    NULL for the compilers which don't support the latter.
 */
                      
    /* TODO: add more compilers supporting __FUNCTION__ */
                        
          
                                                                      
                                                                      
          
                                     
                                                                                                                   


                                           
         
        /* still define __WXFUNCTION__ to avoid #ifdefs elsewhere */
                                     
          
       /* __WXFUNCTION__ already defined */


/* Auto-detect variadic macros support unless explicitly disabled. */
                                                                    
    /* Any C99 or C++11 compiler should have them. */
                                                                                                                              

                                    
                                  
                                    
                                    
                                    
                                     
                                    
          
       /* !HAVE_VARIADIC_MACROS */



                           
  
                                                                                    
                                                                          
                                                             

                                                                 

                                                     



                                       

                                                                                      
                                                                                                              
  
                                                                                                  
                                                              
                                                                       
                                                          

                                                    
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           

                                                                        


                                                                                                               


     
                                                                                    
       /* HAVE_VARIADIC_MACROS */

       /* _WX_CPP_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/version.h" 18    /* for wxSTRINGIZE */

/*  the constants below must be changed with each new version */
/*  ---------------------------------------------------------------------------- */

/*
    Don't forget to update WX_CURRENT, WX_REVISION and WX_AGE in
    build/bakefiles/version.bkl and regenerate the makefiles when you change
    this!
 */

/*  NB: this file is parsed by automatic tools so don't change its format! */
                              
                              
                              
                              
                                                 

/*  nothing to update below this line when updating the version */
/*  ---------------------------------------------------------------------------- */

/* Users can pre-define wxABI_VERSION to a lower value in their
 * makefile/project settings to compile code that will be binary compatible
 * with earlier versions of the ABI within the same minor version (between
 * minor versions binary compatibility breaks anyway). The default is the
 * version of wxWidgets being used. A single number with two decimal digits
 * for each component, e.g. 20601 for 2.6.1 */
                     
                                                                              
      

/*  helpers for wxVERSION_NUM_XXX */
                                                                                       

                                                                                                   


                                                                                               

                                                                                                                     


/*  these are used by src/msw/version.rc and should always be ASCII, not Unicode */
                                                                                                        

                                                                                                                


/* those are Unicode-friendly */
                                                                                                            

                                                                                                                    


/*  some more defines, not really sure if they're [still] useful */
                                                                                                  
                            
                                                                                                                         

/*  check if the current version is at least major.minor.release */
                                                                                                                                                                                                                                                




/* the same but check the subrelease also */
                                                                                                                                                                                                                                                                                               






       /*  _WX_VERSION_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/setup.h" 33
                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/cpp.h" 0
/*
 *  Name:        wx/cpp.h
 *  Purpose:     Various preprocessor helpers
 *  Author:      Vadim Zeitlin
 *  Created:     2006-09-30
 *  Copyright:   (c) 2006 Vadim Zeitlin <vadim@wxwindows.org>
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                  
                  

                                                              

                                                                             
                                                

                                                    

                                                                

                                                                         

                                                                                 

                                                                                         

                                                                                                 

                                                                                                         

                                                                                                                 


                                                                                 
                                      
                                                         

                                                 
                                                             

  
                                                                            
                                           
   
                                    
                                      
                                        
                                         
                                          

  
                                                                             
                                                                               
                                                                          
                                                                              
                       
    
                                                 
      
                                                                          
                                                                             
                                                                             
                                                                             
              
       
                                                               
                            
                                                            
      

                                                  
                                                       

  
                                                                            
                            
   
                                                                

  
                                                                    

                                                                             
                                                                             
                                                                            
                                                          

                                                                             

                                                                           
                                                         
   
                  
                                                            
                                                                             
                                   
     
                                         
                                                        
      

  
                                                                            
                                                          
   
                      
                                                          
                        
          
                                                                      
                                                                      
          
                                     
                                                                                                                   


                                           
         
                                                                    
                                     
          
                                           


                                                                     
                                                                    
                                                     
                                                                                                                              

                                    
                                  
                                    
                                    
                                    
                                     
                                    
          
                                  



                           
  
                                                                                    
                                                                          
                                                             

                                                                 

                                                     



                                       

                                                                                      
                                                                                                              
  
                                                                                                  
                                                              
                                                                       
                                                          

                                                    
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           

                                                                        


                                                                                                               


     
                                                                                    
                                 

       /* _WX_CPP_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/setup.h" 34

// notice that wxSUFFIX_DEBUG is a string but wxSUFFIX itself must be an
// identifier as string concatenation is not done inside #include where we
// need it
             
                              
                   
                           
                      
                          
                                
     
                             
                   
                          
          // !_UNICODE
        // don't define wxSUFFIX at all as preprocessor operations don't work
        // with empty values so we need to check for this case specially below
           // _UNICODE/!_UNICODE
      

// compiler-specific prefix: by default it's always just "vc" for compatibility
// reasons but if you use multiple MSVC versions you probably build them with
// COMPILER_PREFIX=vcXX and in this case you may want to either predefine
// wxMSVC_VERSION as "XX" or define wxMSVC_VERSION_AUTO to use the appropriate
// version depending on the compiler used
                     
                                                          
                                  
                        
                                      
                          
                                      
                          
                                      
                          
                                      
                          
                                      
                          
                                       
                          
                                       
                          
                                       
         
              
          
     
                                
      

// architecture-specific part: not used (again, for compatibility), for x86
                   
                              
                      
                               
      // assume _M_IX86
                         
      

// Ensure the library configuration is defined
             
                 
      

// Construct the path for the subdirectory under /lib/ that the included setup.h
// will be used from
                 
                                                                                         

      // !DLL
                                                                                         

       // DLL/!DLL

// The user can predefine a different prefix if not using the default MSW port
// with MSVC.
                        
                          
                                     
         
                                    
          
       // wxTOOLKIT_PREFIX

// the real setup.h header file we need is in the build-specific directory,
// construct the path to it
               
                                                                                                                    

      // suffix is empty
                                                                                                          

      

                                                    

           


// the library names depend on the build, these macro builds the correct
// library name for the given base name
               
                                              
      // suffix is empty
                           
      
                                                                                            


                                                                                              


                                                             
                                                                                       

// This one is for 3rd party libraries: they don't have the version number
// in their names and usually exist in ANSI version only (except for regex)
//
// 3rd party libraries are also are not linked in when using DLLs as they're
// embedded inside our own DLLs and don't need to be linked with the user code.
                                                           

// special version for regex as it does have a Unicode version
                                                           

       

                    
                      
               
          
           
      
                    
           
      
                                                                   
           
      

             
                                                                     
               
          
                                                                        
               
          
                                                                      
               
          
                                                                        
               
          
                                                                     
               
          

           

                        
               
          

                         
               
          
                                               
               
          
                                                  
               
          
                                           
               
          
                                           
               
          
                                                     
               
          
                                                 
               
          
                                                     
               
          
                                                   
               
          
                                           
               
                          
                   
              
          
                                                   
               
          
       // wxUSE_GUI


                  
    // Make sure all required system libraries are added to the linker too when
    // using static libraries.
           
           
           
           
           
           
           
           
           
           
           
           
           
                        
               
          

                    
               
               
               
               
               
               
               
               
               
          
       // !WXUSINGDLL

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/platform.h" 263

/*
   Convenience for any optional classes that use the wxAnyButton base class.
 */
                                   
                            
      


/*
   Hardware platform detection.

   VC++ defines _M_xxx symbols.
 */
                                                                             
                     
                         
          
       /* x86 */

                    
                    
                        
          
       /* ia64 */

                                                            
                       
                           
          
       /* alpha */

                                         
                     
                         
          
       /* alpha */


/*
   adjust the Unicode setting: wxUSE_UNICODE should be defined as 0 or 1
   and is used by wxWidgets, _UNICODE and/or UNICODE may be defined or used by
   the system headers so bring these settings in sync
 */

/* set wxUSE_UNICODE to 1 if UNICODE or _UNICODE is defined */
                                         
                    
                       
      /* !UNICODE */
                     
                       
      
       /* UNICODE/!UNICODE */

/* and vice versa: define UNICODE and _UNICODE if wxUSE_UNICODE is 1 */
                 
                
                
      
               
               
      
       /* wxUSE_UNICODE */


/*
   test for old versions of Borland C, normally need at least 5.82, Turbo
   explorer, available for free at http://www.turboexplorer.com/downloads
*/


/*
    Older versions of Borland C have some compiler bugs that need
    workarounds. Mostly pertains to the free command line compiler 5.5.1.
*/
                                                    
      
                                                                     
                                                                      
                                                                       
                                                             
      
                                      

      
                                                                         
                                    
       
                                  

      
                                                                   
                                                                         
                                                                   
                                                            

                                                                      
                        
      
                                     
       /* __BORLANDC__ */

/*
   OS: first of all, test for MS-DOS platform. We must do this before testing
       for Unix, because DJGPP compiler defines __unix__ under MS-DOS
 */
                                                               
               
               
      
                                                                    
                                                              
                                                             
                  
                        
      
                
                         
      
      

  
                                                                           
                                    
                                                                  
   
                                                                                                                                                                                                                                                                                                          




                     

                                           
              
               
                      
                
              
                                                                                
                                                                        
               
                  
                     

                                                                               
                             
                             
      
                 

              
                         
      
                             
                                                      
                   
      

                                                                  
                                         
                
                  

                                            
                              
                        
      
      

                                                                      
                                                                          
                                                   
       
                                           
                
                  
      
               
                 
      
                                                                       
                  
                    
      
                                                                           
                     
                       
      
                                                                           
                                                             
                         
      
      

  
           
   
                      

                                                   
                                                                       
                
                
      
      

                       
                                 
      

                                                            
                          
                                                                   
                            
      
                        

  
              
   
                          

                                  
                 
      
      

                                                                               
                                                              
                                                                                    
                        
      
     
      
        /* OS */

/*
   if we're on a Unix system but didn't use configure (so that setup.h didn't
   define __UNIX__), do define __UNIX__ now
 */
                                                
                
       /* Unix */

                                              
             
      

/*
   We get "Large Files (ILP32) not supported in strict ANSI mode." #error
   from HP-UX standard headers when compiling with g++ without this:
 */
                                               
                      
      

/* Force linking against required libraries under Windows: */
                  
                                   
                         
                             
      

                                                                
                      
      

                                                                                                                                                                                                                                                                    






                           
     
                             
                                            
      


/*
    Handle Darwin gcc universal compilation.  Don't do this in an Apple-
    specific case since no sane compiler should be defining either
    __BIG_ENDIAN__ or __LITTLE_ENDIAN__ unless it really is generating
    code that will be hosted on a machine with the appropriate endianness.
    If a compiler defines neither, assume the user or configure set
    WORDS_BIGENDIAN appropriately.
 */
                           
                      
                         
                                
                      
                                                     
                                                                            
                                                         
      
/* also the 32/64 bit universal builds must be handled accordingly */
                 
               
                    
                  
                    
                       
                     
                       
     
                    
                  
                    
                       
                     
                       
      
      

/*
    Define various OS X symbols before including wx/chkconf.h which uses them.

    __WXOSX_MAC__ means Mac OS X, non embedded
    __WXOSX_IPHONE__ means OS X iPhone
 */

/*
    Normally all of __WXOSX_XXX__, __WXOSX__ and __WXMAC__ are defined by
    configure but ensure that we also define them if configure was not used for
    whatever reason.

    The primary symbol remains __WXOSX_XXX__ one, __WXOSX__ exists to allow
    checking for any OS X port (Carbon and Cocoa) and __WXMAC__ is an old name
    for it.
 */
                                                                                      
                 
                   
      
                 
                   
      
      

                
                                                 
                               
                             
                                                      
      
      
     
                                                                         
      
      
                                                
      
      
                       
      
      

                    
                     
                               
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
     
      
      
      

/*
    __WXOSX_OR_COCOA__ is a common define to wxOSX (Carbon or Cocoa) and wxCocoa ports under OS X.

    DO NOT use this define in base library code.  Although wxMac has its own
    private base library (and thus __WXOSX_OR_COCOA__,__WXMAC__ and related defines are
    valid there), wxCocoa shares its library with other ports like wxGTK and wxX11.

    To keep wx authors from screwing this up, only enable __WXOSX_OR_COCOA__ for wxCocoa when
    not compiling the base library.  We determine this by first checking if
    wxUSE_BASE is not defined.  If it is not defined, then we're not buildling
    the base library, and possibly not building wx at all (but actually building
    user code that's using wx). If it is defined then we must check to make sure
    it is not true.  If it is true, we're building base.

    If you want it in the common darwin base library then use __DARWIN__.  You
    can use any Darwin-available libraries like CoreFoundation but please avoid
    using OS X libraries like Carbon or CoreServices.

 */
                                                                                         
                            
      

/*
   check the consistency of the settings in setup.h: note that this must be
   done after setting wxUSE_UNICODE correctly as it is used in wx/chkconf.h
   and after defining the compiler macros which are used in it too
 */
                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/chkconf.h" 0
/*
 * Name:        wx/chkconf.h
 * Purpose:     check the config settings for consistency
 * Author:      Vadim Zeitlin
 * Modified by:
 * Created:     09.08.00
 * Copyright:   (c) 2000 Vadim Zeitlin <vadim@wxwidgets.org>
 * Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */
                      
                      

/*
              **************************************************
              PLEASE READ THIS IF YOU GET AN ERROR IN THIS FILE!
              **************************************************

    If you get an error saying "wxUSE_FOO must be defined", it means that you
    are not using the correct up-to-date version of setup.h. This happens most
    often when using svn or daily snapshots and a new symbol was added to
    setup0.h and you haven't updated your local setup.h to reflect it. If
    this is the case, you need to propagate the changes from setup0.h to your
    setup.h and, if using makefiles under MSW, also remove setup.h under the
    build directory (lib/$(COMPILER)_{lib,dll}/msw[u][d][dll]/wx) so that
    the new setup.h is copied there.

    If you get an error of the form "wxFoo requires wxBar", then the settings
    in your setup.h are inconsistent. You have the choice between correcting
    them manually or commenting out #define wxABORT_ON_CONFIG_ERROR below to
    try to correct the problems automatically (not really recommended but
    might work).
 */

/*
   This file has the following sections:
    1. checks that all wxUSE_XXX symbols we use are defined
     a) first the non-GUI ones
     b) then the GUI-only ones
    2. platform-specific checks done in the platform headers
    3. generic consistency checks
     a) first the non-GUI ones
     b) then the GUI-only ones
 */

/*
   this global setting determines what should we do if the setting FOO
   requires BAR and BAR is not set: we can either silently unset FOO as well
   (do this if you're trying to build the smallest possible library) or give an
   error and abort (default as leads to least surprising behaviour)
 */
                               

/*
   global features
 */

/*
    If we're compiling without support for threads/exceptions we have to
    disable the corresponding features.
 */
                   
                    
                       
       /* wxNO_THREADS */

                      
                       
                          
       /* wxNO_EXCEPTIONS */

/* we also must disable exceptions if compiler doesn't support them */
                                             
                       
                          
       /* VC++ without exceptions support */


/*
   Section 1a: tests for non GUI features.

   please keep the options in alphabetical order!
 */

                 
                              
      
     
                   
      
       /* wxUSE_ANY */

                          
                              
      
     
                            
      
       /* !defined(wxUSE_COMPILER_TLS) */

                               
                              
      
     
                                 
      
       /* !defined(wxUSE_CONSOLE_EVENTLOOP) */

                          
                              
      
     
                            
      
       /* !defined(wxUSE_DYNLIB_CLASS) */

                        
                              
      
     
                          
      
       /* !defined(wxUSE_EXCEPTIONS) */

                          
                              
      
     
                            
      
       /* !defined(wxUSE_FILE_HISTORY) */

                        
                              
      
     
                          
      
       /* !defined(wxUSE_FILESYSTEM) */

                        
                              
      
     
                          
      
       /* !defined(wxUSE_FS_ARCHIVE) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_FSVOLUME) */

                       
                              
      
     
                         
      
       /* !defined(wxUSE_FSWATCHER) */

                            
                              
      
     
                              
      
       /* !defined(wxUSE_DYNAMIC_LOADER) */

                  
                              
      
     
                    
      
       /* !defined(wxUSE_INTL) */

                  
                              
      
     
                    
      
       /* !defined(wxUSE_IPV6) */

                 
                              
      
     
                   
      
       /* !defined(wxUSE_LOG) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_LONGLONG) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_MIMETYPE) */

                                
                              
      
     
                                  
      
       /* !defined(wxUSE_ON_FATAL_EXCEPTION) */

                               
                              
      
     
                                 
      
       /* !defined(wxUSE_PRINTF_POS_PARAMS) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_PROTOCOL) */

/* we may not define wxUSE_PROTOCOL_XXX if wxUSE_PROTOCOL is set to 0 */
                   
                          
                         
                          
                             
                            
                             
       /* wxUSE_PROTOCOL */

                           
                              
      
     
                             
      
       /* !defined(wxUSE_PROTOCOL_HTTP) */

                          
                              
      
     
                            
      
       /* !defined(wxUSE_PROTOCOL_FTP) */

                           
                              
      
     
                             
      
       /* !defined(wxUSE_PROTOCOL_FILE) */

                   
                              
      
     
                     
      
       /* !defined(wxUSE_REGEX) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_STDPATHS) */

                 
                              
      
     
                   
      
       /* !defined(wxUSE_XML) */

                     
                              
      
     
                       
      
       /* !defined(wxUSE_SOCKETS) */

                            
                              
      
     
                              
      
       /* !defined(wxUSE_STD_CONTAINERS) */

                                         
                              
      
     
                                           
      
       /* !defined(wxUSE_STD_STRING_CONV_IN_WXSTRING) */

                     
                              
      
     
                       
      
       /* !defined(wxUSE_STREAMS) */

                       
                              
      
     
                         
      
       /* !defined(wxUSE_STOPWATCH) */

                        
                              
      
     
                          
      
       /* !defined(wxUSE_TEXTBUFFER) */

                      
                              
      
     
                        
      
       /* !defined(wxUSE_TEXTFILE) */

                     
                              
      
     
                       
      
       /* !defined(wxUSE_UNICODE) */

                 
                              
      
     
                   
      
       /* !defined(wxUSE_URL) */

                     
                              
      
     
                       
      
       /* wxUSE_VARIANT */

                     
                              
      
     
                       
      
       /* !defined(wxUSE_XLOCALE) */

/*
   Section 1b: all these tests are for GUI only.

   please keep the options in alphabetical order!
 */
             

  
                                                                             
                                                
   

                      
                              
      
     
                        
      
                                     

                   
                              
      
     
                     
      
                                  

                           
                              
      
     
                             
      
                                          

                           
                              
      
     
                             
      
                                          

                             
                              
      
     
                               
      
                                            

                               
                              
      
     
                                 
      
                                              

                               
                              
      
     
                                 
      
                                              

                            
                              
      
     
                              
      
                                           

                       
                              
      
     
                         
      
                                      

                    
                              
      
     
                      
      
                                   

                   
                              
      
     
                     
      
                                  

                          
                              
      
     
                            
      
                                         

                   
                              
      
     
                     
      
                                  

                      
                              
      
     
                        
      
                                     

                          
                              
      
     
                            
      
                                         

                    
                              
      
     
                      
      
                                   

                        
                              
      
     
                          
      
                                       

                       
                              
      
     
                         
      
                                      

                       
                              
      
     
                         
      
                                      

                      
                              
      
     
                        
      
                                     

                       
                              
      
     
                         
      
                                      

                              
                              
      
     
                                
      
                                             

                      
                              
      
     
                        
      
                                     

                               
                              
      
     
                                 
      
                                              

                       
                              
      
     
                         
      
                                      

                     
                              
      
     
                       
      
                                    

                          
                              
      
     
                            
      
                                         

                          
                              
      
     
                            
      
                                         

                                 
                              
      
     
                                   
      
                                      

                           
                              
      
     
                             
      
                                          

                     
                              
      
     
                       
      
                                    

                                   
                              
      
     
                                     
      
                                                  

                      
                              
      
     
                        
      
                                     

                     
                              
      
     
                       
      
                                    

                            
                              
      
     
                              
      
                                           

                     
                              
      
     
                       
      
                                    

                     
                              
      
     
                       
      
                                    

                            
                              
      
     
                              
      
                                           

                   
                              
      
     
                     
      
                                  

                              
                              
      
     
                                
      
                                             


                  
                              
      
     
                    
      
                                 

                        
                              
      
     
                          
      
                                       

                  
                              
      
     
                    
      
                                 

                           
                              
      
     
                             
      
                                          

                  
                              
      
     
                    
      
                                 

                       
                      
                                                             
                         
     
                              
      
     
                         
      
      
                                      

                     
                              
      
     
                       
      
                                    

                 
                              
      
     
                   
      
                                

                      
                              
      
     
                        
      
                                     

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                      
                              
      
     
                        
      
                                     

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                    
                              
      
     
                      
      
                                   

                       
                              
      
     
                         
      
                                      

                        
                              
      
     
                          
      
                                       

                    
                              
      
     
                      
      
                                   

                 
                              
      
     
                   
      
                                

                              
                              
      
     
                                
      
                                             

                   
                              
      
     
                     
      
                                  

                    
                              
      
     
                      
      
                                   

                      
                              
      
     
                        
      
                                     

                                  
                              
      
     
                                    
      
                                                 

                        
                              
      
     
                          
      
                                       

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                                
                              
      
     
                                  
      
                                               

                                   
                              
      
     
                                     
      
                                                  

                      
                              
      
     
                        
      
                                     

                      
                              
      
     
                        
      
                                     

                           
                              
      
     
                             
      
                                          

                    
                              
      
     
                      
      
                                   

                        
                              
      
     
                          
      
                                       

                         
                              
      
     
                           
      
                                        

                  
                              
      
     
                    
      
                                 

                       
                              
      
     
                         
      
                                      

                    
                              
      
     
                      
      
                                   

                   
                              
      
     
                     
      
                                  

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                    
                              
      
     
                      
      
                                   

                      
                              
      
     
                        
      
                                     

                     
                              
      
     
                       
      
                                    

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                      
                              
      
     
                        
      
                                     

                       
                              
      
     
                         
      
                                      

                         
                              
      
     
                           
      
                                        

                      
                              
      
     
                        
      
                                     

                          
                              
      
     
                            
      
                                         

                       
                              
      
     
                         
      
                                      

                     
                              
      
     
                       
      
                                    

                      
                              
      
     
                        
      
                                     

                      
                              
      
     
                        
      
                                     

                          
                              
      
     
                            
      
                                         

                               
                              
      
     
                                 
      
                                              

                        
                              
      
     
                          
      
                                       

                     
                              
      
     
                       
      
                                    

                         
                              
      
     
                           
      
                                        

                 
                              
      
     
                   
      
                                

       /* wxUSE_GUI */

/*
   Section 2: platform-specific checks.

   This must be done after checking that everything is defined as the platform
   checks use wxUSE_XXX symbols in #if tests.
 */

                        
                                 
                          
                           
                      
                           
      
                        
                           
                          
                             
                        
                           
                      
                           
                        
                           
                          
                             
                        
                           
                            
                               
      

/*
    __UNIX__ is also defined under Cygwin but we shouldn't perform these checks
    there if we're building Windows ports.
 */
                                              
                            
      

                      
                            
      

/*
   Section 3a: check consistency of the non-GUI settings.
 */

                           
                            
                              
      
     
                              
                                 
      
      
       /* WXWIN_COMPATIBILITY_2_6 */

                         
                   
                              
      
     
                            
                               
      
      
       /* wxUSE_ARCHIVE_STREAMS */

                                                                    
                   
                              
      
     
                     
                        
      
      
       /* wxUSE_PROTOCOL_XXX */

             
                   
                              
      
     
                     
                        
      
      
       /* wxUSE_URL */

                  
                  
                                             
                              
      
     
                    
                       
      
      
      

                  
                              
      
     
                    
                       
      
      
       /* wxUSE_PROTOCOL */

/* have to test for wxUSE_HTML before wxUSE_FILESYSTEM */
              
                     
                              
      
     
                       
                          
      
      
       /* wxUSE_HTML */

                    
                     
                              
      
     
                       
                          
      
      
                          
                              
      
     
                            
                               
      
      
       /* wxUSE_FS_ARCHIVE */

                    
                  
                              
      
     
                    
                       
      
      
                               
                              
      
     
                 
                    
                  
                     
      
      
       /* wxUSE_FILESYSTEM */

                 
                   
                              
      
     
                     
                        
      
      
       /* wxUSE_FS_INET */

                                     
                   
                              
      
     
                     
                        
      
      
       /* wxUSE_STOPWATCH */

                                     
                              
      
     
                     
                        
      
       /* wxUSE_MIMETYPE */

                                       
                              
      
     
                       
                          
      
       /* wxUSE_TEXTFILE */

                                 
                              
      
     
                 
                    
      
       /* wxUSE_TEXTFILE */

                       
                        
                              
      
     
                            
      
      
        /* wxUSE_DYNLIB_CLASS */

                   
               
                              
      
     
                 
                    
      
      
                          
                              
      
     
                            
                               
      
      
       /* wxUSE_ZIPSTREAM */

                   
                          
                              
      
     
                            
                               
      
      
       /* wxUSE_TARSTREAM */

/*
   Section 3b: the tests for the GUI settings only.
 */
             

                                              
                              
      
     
                          
                             
      
                                































                   
                              
      
     
                     
                        
      
      
                     

                   
                 
                              
      
     
                   
                      
      
      
                            

                           
                 
                              
      
     
                   
                      
      
      
                                    

  
                                                                             
           
   
                     
                              
      
     
                     
      
      

                                                                                                                                                                                                                 





                  
                                    
                              
      
     
                     
                        
      
      
                           

                  
                   
                              
      
     
                     
                        
      
      
                           

                    
                 
                              
      
     
                   
                      
      
      
                             

                  
                  
                              
      
     
                    
                       
      
      
                           

                     
                        
                              
      
     
                           
                              
      
      
                              

                     
                                    
                              
      
     
                       
                          
      
      
                              

                       
                       
                              
      
     
                          
                             
      
      
                                

                    
                 
                              
      
     
                   
                      
      
      
                             

                                                                           
                              
                                
                            
                                                                           
                             
                                
      
      

                                             
                              
      
     
                             
                                
      
                                   


                                   
                                                   
                                                     
                                                             
                                                                                                                                                                                    




                              
      
     
                   
                      
                     
                        
                   
                      
                     
                        
                     
                        
      
      
      
                             

                                                           
                                                                                                

                              
      
     
                     
                        
      
                          

                         
                           
                                                   
                              
      
     
                              
                                 
      
      
                                    

                      
                                      
                              
      
     
                    
                     
                       
                        
      
      

                   
                              
      
     
                     
                        
      
      
                               

                                            
                   
                              
      
     
                     
                        
      
      
                                                     

                      
                  
                              
      
     
                    
                       
      
      
                               

                   
                  
                              
      
     
                    
                       
      
      
                            

                  
                   
                              
      
     
                     
                        
      
      
                           

              
                    
                              
      
     
                      
                         
      
      

                    
                              
      
     
                      
                         
      
      
                       

                      
      
                                                                         
                                                                         
                                                                
       
                 
                         
                            
      
                               

                     
                                                                                       
                              
      
     
                 
                    
                 
                    
                     
                        
                     
                        
                     
                        
      
      
                              

                
  
                                                                          
                                                                         
               
   
                   
                              
      
     
                      
                         
      
      

                
                              
      
     
                   
                      
      
      

                 
                              
      
     
                    
                       
      
      

                 
                              
      
     
                    
                       
      
      

             
                              
      
     
                
                   
      
      

             
                              
      
     
                
                   
      
      

             
                              
      
     
                
                   
      
      

             
                              
      
     
                
                   
      
      

                 
                              
      
     
                    
                       
      
      

             
                              
      
     
                
                   
      
      

                         

                               
                
                              
      
     
                  
                     
      
      

                    
                              
      
     
                      
                         
      
      

                                         
                              
      
     
                    
                       
      
      

                       
                              
      
     
                         
                            
      
      
                                        

                               
                   
                              
      
     
                     
                        
      
      
                                        

                          
              
                              
      
     
                
                   
      
      

                                
                              
      
     
                                  
                                     
      
      
                                   

                  
                                                    
                              
      
     
                    
                       
      
      
                          

                                 
                     
                              
      
     
                  
                   
                     
                      
      
      
                         

                 
                                                                                                                                                                                                   







                              
      
     
                   
                      
      
      
                          

                  
                        
                              
      
     
                           
                              
      
      
      

                   
                                                                            
                              
      
     
                     
                        
      
      
                            

                  
                   
                              
      
     
                     
                        
      
      
                  
                              
      
     
                    
                       
      
      
                           

                   
                   
                              
      
     
                     
                        
      
      
                            

                    
                                    
                              
      
     
                     
                        
                   
                      
      
      
                             

                                     
                              
      
     
                    
                       
      
                            

                           
                              
      
     
                
                   
      
                      

                                     
                              
      
     
                    
                       
      
                          

                               
                              
      
     
                
                   
      
                      

                             
                              
      
     
                
                   
      
                      

                              
                              
      
     
                
                   
      
                      

                                     
                              
      
     
                        
                           
      
                              

                  
                      
                              
      
     
                         
                            
      
      
                          

                                             
                              
      
     
                         
                            
      
                               

                                                                
                              
      
     
                    
                       
      
                                                   

                            
      
                                                                          
                                                                         
                
      
                   
                      
                                               
                              
      
     
                               
                                  
      
      
     
                              
      
     
                               
                                  
      
      
      
                                     

       /* wxUSE_GUI */

       /* _WX_CHKCONF_H_ */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/platform.h" 818


/*
   some compilers don't support iostream.h any longer, while some of theme
   are not updated with <iostream> yet, so override the users setting here
   in such case.
 */
                                           
                      
                         
                                              
                      
                         
                          
                      
                         
       /* compilers with/without iostream.h */

/*
   old C++ headers (like <iostream.h>) declare classes in the global namespace
   while the new, standard ones (like <iostream>) do it in std:: namespace,
   unless it's an old gcc version.

   using this macro allows constuctions like "wxSTD iostream" to work in
   either case
 */
                                                                                                           
                   
     
             
      

/* On OpenVMS with the most recent HP C++ compiler some function (i.e. wscanf)
 * are only available in the std-namespace. (BUG???)
 */
                                                                                                              
                           
     
                     
      

            
                           
                  
                         
                         
                         
      
      

/* Choose which method we will use for updating menus
 * - in OnIdle, or when we receive a wxEVT_MENU_OPEN event.
 * Presently, only Windows, OS X and GTK+ support wxEVT_MENU_OPEN.
 */
                             
                                                                                                 
                               
     
                               
      
      

/*
 * Define symbols that are not yet in
 * configure or possibly some setup.h files.
 * They will need to be added.
 */

                        
                                  
                          
     
                          
      
      

                    
                      
      

                                               
                     
      

/*
    Optionally supported C++ features.
 */

/*
    RTTI: if it is disabled in build/msw/makefile.* then this symbol will
    already be defined but it's also possible to do it from configure (with
    g++) or by editing project files with MSVC so test for it here too.
 */
                 
    /*
        Only 4.3 defines __GXX_RTTI by default so its absence is not an
        indication of disabled RTTI with the previous versions.
     */
                             
                  
                 
      
                       
                
                 
      
      
       /* wxNO_RTTI */

       /* _WX_PLATFORM_H_ */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 31

                  
/*  Make sure the environment is set correctly */
                                        
      
                                                                                                                                                                                                                                                                                                                                                                                                                          











               
      
                  
      
                        
      
       /*__cplusplus*/

                     
                           
      

                  
    /*  by default consider that this is a monolithic build */
                        
      

                                      
                      
      

/*  suppress some Visual C++ warnings */
                  
                                                                                   
                                                                                  
       
       
       
       
       
       
       
       

      
                                                                          
                                                            
       
           

                                                                          
                                          
                                                                       
                      
       

      
                                                                          
                                                                          
                                                                            
                                        
       
                        
       
                                 

                   
                                                                             
                                                                       
                   
       
      

                                                                           
                                                                        
                                               
       
      

      
                                       

                                                                              
                                                                             
                             

                                                                           
                                                                         
                                                                 
       
                       
               
                    

      
                                                                               
                                                                             
                                                                             
                                                                            
                                                                              
                                                                         
       
                                  
                                                                                
               
                                

      
                                                                            
                                                                               
       
                                  
                                        
                                              
              
                                             
                                                   
              
                                       
                                             
              
                       
       /*  __VISUALC__ */

/*  suppress some Borland C++ warnings */
                   
       
       /*  __BORLANDC__ */

/*
   g++ gives a warning when a class has private dtor if it has no friends but
   this is a perfectly valid situation for a ref-counted class which destroys
   itself when its ref count drops to 0, so provide a macro to suppress this
   warning
 */
               
                                                                                                

      /* !g++ */
                                                 
      

/*
   Clang Support
 */
 
                            
                     
                                  
     
                                                
      
      

/*  ---------------------------------------------------------------------------- */
/*  wxWidgets version and compatibility defines */
/*  ---------------------------------------------------------------------------- */

                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/version.h" 0
/*
 *  Name:        wx/version.h
 *  Purpose:     wxWidgets version numbers
 *  Author:      Julian Smart
 *  Modified by: Ryan Norton (Converted to C)
 *  Created:     29/01/98
 *  Copyright:   (c) 1998 Julian Smart
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                      
                      

                                            

                                                                
                                                                                   

  
                                                                
                                                                            
         
   

                                                                             
                              
                              
                              
                              
                                                 

                                                                  
                                                                                   

                                                               
                                                                           
                                                                          
                                                                         
                                                                           
                                              
                     
                                                                              
      

                                    
                                                                                       

                                                                                                   


                                                                                               

                                                                                                                     


                                                                                   
                                                                                                        

                                                                                                                


                                
                                                                                                            

                                                                                                                    


                                                                   
                                                                                                  
                            
                                                                                                                         

                                                                   
                                                                                                                                                                                                                                                




                                            
                                                                                                                                                                                                                                                                                               






       /*  _WX_VERSION_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 247

/*  ============================================================================ */
/*  non portable C++ features */
/*  ============================================================================ */

/*  ---------------------------------------------------------------------------- */
/*  compiler defects workarounds */
/*  ---------------------------------------------------------------------------- */

/*
   Digital Unix C++ compiler only defines this symbol for .cxx and .hxx files,
   so define it ourselves (newer versions do it for all files, though, and
   don't allow it to be redefined)
 */
                                                                 
                   
       /* __DECCXX */

/*  Resolves linking problems under HP-UX when compiling with gcc/g++ */
                                          
                              
       /*  HP-UX */

/* Prevents conflicts between sys/types.h and winsock.h with Cygwin, */
/* when using Windows sockets. */
                                             
                         
      

/*  ---------------------------------------------------------------------------- */
/*  check for native bool type and TRUE/FALSE constants */
/*  ---------------------------------------------------------------------------- */

/*  for backwards compatibility, also define TRUE and FALSE */
/*  */
/*  note that these definitions should work both in C++ and C code, so don't */
/*  use true/false below */
            
                  
      

             
                   
      

typedef short int WXTYPE;


/*  ---------------------------------------------------------------------------- */
/*  other feature tests */
/*  ---------------------------------------------------------------------------- */

/*  Every ride down a slippery slope begins with a single step.. */
/*  */
/*  Yes, using nested classes is indeed against our coding standards in */
/*  general, but there are places where you can use them to advantage */
/*  without totally breaking ports that cannot use them.  If you do, then */
/*  wrap it in this guard, but such cases should still be relatively rare. */
                                 

/*  check for explicit keyword support */
                     
                                                     
                                                                            
                             
                                                                                                   

                                                                  
                             
                                                           
                                                                  
                             
                                  
                             
                              
                             
          
       /*  !HAVE_EXPLICIT */

                    
                               
      /*  !HAVE_EXPLICIT */
                      
       /*  HAVE_EXPLICIT/!HAVE_EXPLICIT */

/* these macros are obsolete, use the standard C++ casts directly now */
                                              
                                            
                                                        

/*
   This one is a wx invention: like static cast but used when we intentionally
   truncate from a larger to smaller type, static_cast<> can't be used for it
   as it results in warnings when using some compilers (SGI mipspro for example)
 */
                                               
                                     
                                       
     
               
                                                                                      
               
                                                                  
               
                                                                                  
               

                 

               
     

                                                              

                                                                         
                                     
                                       
     
               
                                                                       
               
                                                                       
               

                 

               
     

                                                              
     
                                           
      

/* for consistency with wxStatic/DynamicCast defined in wx/object.h */
                                                                   

                        
                                                     
                                                                                
                                
                                                           
                                                                               
                                
          
      

                               
                                                     
                                                         
                                             
                                       
                                                                                                  

                                                
                                                     
                                       
          
      

                            
                                                            
                                    
          
      

                          
                                                                  
                                
          

                                                                          
                                    
          

                                                                          
                                      
          

                                                                              
                                      
          

                                                                          
                                      
          

                                                                              
                                      
          
       // defined(__has_include)

/* provide replacement for C99 va_copy() if the compiler doesn't have it */

/* could be already defined by configure or the user */
                
    /* if va_copy is a macro or configure detected that we have it, use it */
                                                 
                                
          /* no va_copy, try to provide a replacement */
        /*
           configure tries to determine whether va_list is an array or struct
           type, but it may not be used under Windows, so deal with a few
           special cases.
         */

                          
                                                                             
                                                      
                                        
                  
               /* __WATCOMC__ */

                                                                         
              
                                                                             
                                           
               
                                      
               /* SysV or Win32 on __PPC__ */

        /*
            note that we use memmove(), not memcpy(), in case anybody tries
            to do wxVaCopy(ap, ap)
         */
                                       
                                                                        
                                       
                                                                     
              /* we can only hope that va_lists are simple lvalues */
                                              
              
           /* va_copy/!va_copy */
       /* wxVaCopy */

                     
    /*
        Mingw <= 3.4 and all versions of Cygwin don't have std::wostream
     */
                                                                                           

                             
          

    /* VC++ doesn't have it in the old iostream library */
                                               
                             
          

                         
                             
          

                        
       /* HAVE_WOSTREAM */

/*  ---------------------------------------------------------------------------- */
/*  other C++ features */
/*  ---------------------------------------------------------------------------- */

                                   
    /* be optimistic by default */
                                       
      

                  
                          
                                          
          
       /* __VISUALC__ */


                                         
    /* assume the compiler can use type or const expressions as template
       arguments if it supports partial specialization -- except if it's a
       Borland one which can't */
                                                                      
                                                 
           /* (HAVE_PARTIAL_SPECIALIZATION) && !defined(__BORLANDC__) */
       /* !defined(HAVE_TEMPLATE_OVERLOAD_RESOLUTION) */

/*  ---------------------------------------------------------------------------- */
/*  portable calling conventions macros */
/*  ---------------------------------------------------------------------------- */

/*  stdcall is used for all functions called by Windows under Windows */
                        
                             
                                                  
         
                                                    
                                  
          

      /*  Win */
    /*  no such stupidness under Unix */
                     
       /*  platform */

/*  LINKAGEMODE mode is empty for everything except OS/2 */
                   
                       
       /*  LINKAGEMODE */

/*  wxCALLBACK should be used for the functions which are called back by */
/*  Windows (such as compare function for wxListCtrl) */
                                                  
                                
     
    /*  no stdcall under Unix nor Win16 */
                      
       /*  platform */

/*  generic calling convention for the extern "C" functions */

                        
                                      
                            
                                        
        /*  !Visual C++ */
                            
        /*  compiler */

/*  callling convention for the qsort(3) callback */
                                       

/*  compatibility :-( */
                                   

/*  DLL import/export declarations */
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/dlimpexp.h" 0
/*
 * Name:        wx/dlimpexp.h
 * Purpose:     Macros for declaring DLL-imported/exported functions
 * Author:      Vadim Zeitlin
 * Modified by:
 * Created:     16.10.2003 (extracted from wx/defs.h)
 * Copyright:   (c) 2003 Vadim Zeitlin <vadim@wxwidgets.org>
 * Licence:     wxWindows licence
 */

/*
    This is a C file, not C++ one, do not use C++ comments here!
 */

                       
                       

                            
                                                        
                                                        
                          
      
                                                                              
               
       
                                                                         
                                      
                                      
      
                                                                               
                                                                             
                                                                              
                                                                          
                            
       
                                                     
          
                                                                      
                                              
          
                                           
                                           
      
                       
                         
                                      
          
                                                                              
                     
           
                
                      
                
                
                                                                          
                        
                        
      
                         
                                      
                                      
      

/* for other platforms/compilers we don't anything */
                
                
                
      

/*
   We support building wxWidgets as a set of several libraries but we don't
   support arbitrary combinations of libs/DLLs: either we build all of them as
   DLLs (in which case WXMAKINGDLL is defined) or none (it isn't).

   However we have a problem because we need separate WXDLLIMPEXP versions for
   different libraries as, for example, wxString class should be dllexported
   when compiled in wxBase and dllimported otherwise, so we do define separate
   WXMAKING/USINGDLL_XYZ constants for each component XYZ.
 */
                  
              
                        
      

                       
                        
                       
                      
                        
                      
                       
                       
                       
                            
                          
                            
                         
                       
                           
       /* WXMAKINGDLL */

/*
   WXDLLIMPEXP_CORE maps to export declaration when building the DLL, to import
   declaration if using it or to nothing at all if we don't use wxWin as DLL
 */
                       
                                 
                                                 
                            
                                        
     
                               
      
                         
                                 
                                                 
                            
                                        
     
                               
      
      /* not making nor using DLL */
                        
                                        
                               
      

                      
                                
                                                
                         
                                
                                                
      /* not making nor using DLL */
                       
                                       
      

                       
                                 
                                                 
                            
                                        
     
                               
      
                         
                                 
                                                 
                            
                                        
     
                               
      
      /* not making nor using DLL */
                        
                                        
                               
      

                      
                                
                                                
                         
                                
                                                
      /* not making nor using DLL */
                       
                                       
      

                     
                               
                                               
                         
                               
                                               
      /* not making nor using DLL */
                      
                                      
      

                       
                                 
                                                 
                         
                                 
                                                 
      /* not making nor using DLL */
                        
                                        
      

                     
                               
                         
                               
      /* not making nor using DLL */
                      
      

                      
                                
                         
                                
      /* not making nor using DLL */
                       
      

                      
                                
                         
                                
      /* not making nor using DLL */
                       
      

                      
                                
                         
                                
      /* not making nor using DLL */
                       
      

                           
                                     
                                                     
                         
                                     
                                                     
      /* not making nor using DLL */
                            
                                            
      

                         
                                   
                         
                                   
      /* not making nor using DLL */
                          
      

                           
                                     
                         
                                     
      /* not making nor using DLL */
                            
      

                        
                                  
                         
                                  
      /* not making nor using DLL */
                         
      

                      
                                
                                                
                         
                                
                                                
      /* not making nor using DLL */
                       
                                       
      

                          
                                    
                                                    
                         
                                    
                                                    
      /* not making nor using DLL */
                           
                                           
      

/*
   GCC warns about using __attribute__ (and also __declspec in mingw32 case) on
   forward declarations while MSVC complains about forward declarations without
   __declspec for the classes later declared with it, so we need a separate set
   of macros for forward declarations to hide this difference:
 */
                                                                           
                                
                               
                                
                               
                              
                                
                              
                               
                               
                               
                                    
                                  
                                    
                                 
                               
                                   
     
                                                      
                                                     
                                                      
                                                     
                                                    
                                                      
                                                    
                                                     
                                                     
                                                     
                                                          
                                                        
                                                          
                                                       
                                                     
                                                         
      

/* for backwards compatibility, define suffix-less versions too */
                                    
                                              

/*
   MSVC up to 6.0 needs to be explicitly told to export template instantiations
   used by the DLL clients, use this macro to do it like this:

       template <typename T> class Foo { ... };
       WXDLLIMPEXP_TEMPLATE_INSTANCE_BASE( Foo<int> )

   (notice that currently we only need this for wxBase and wxCore libraries)
 */
                                                 
                           
                                                                                                          

                                                                                                          

         
          
                                                                    
                                           

                                                                             
           
               

                                                                                                                 

                                                                                                                 

          
      /* not VC <= 6 */
                                                    
                                                    
       /* VC6/others */

       /* _WX_DLIMPEXP_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 694

/*  ---------------------------------------------------------------------------- */
/*  Very common macros */
/*  ---------------------------------------------------------------------------- */

/*  Printf-like attribute definitions to obtain warnings with GNU C/C++ */
                           
                                       
                                                                                 
     
                                 
      

                                                       
                                                       
                                                       
                                                       
                                                       
       /* !defined(WX_ATTRIBUTE_PRINTF) */

                             
                                                     
                                                                
                         
                                                        
                                
                                                  
     
                             
      
      

                     
                                                        
     
                               
      

/*
    Macros for marking functions as being deprecated.

    The preferred macro in the new code is wxDEPRECATED_MSG() which allows to
    explain why is the function deprecated. Almost all the existing code uses
    the older wxDEPRECATED() or its variants currently, but this will hopefully
    change in the future.
 */

/* The basic compiler-specific construct to generate a deprecation warning. */
                
                                                         
                               
                                                         
                                                   
                                                    
     
                             
      

/*
    Macro taking the deprecation message. It applies to the next declaration.

    If the compiler doesn't support showing the message, this degrades to a
    simple wxDEPRECATED(), i.e. at least gives a warning, if possible.
 */
                                                  
                                                          
                                                                      
         
                                                                 
          
                               
                                                                  
                                
                                                                            
     
                                                   
      

/*
    Macro taking the declaration that it deprecates. Prefer to use
    wxDEPRECATED_MSG() instead as it's simpler (wrapping the entire declaration
    makes the code unclear) and allows to specify the explanation.
 */
                                           

                                                   
      
                                                                      
                                                  
      
                                                                
     
                                                        
      

/*
   Macro which marks the function as being deprecated but also defines it
   inline.

   Currently it's defined in the same trivial way in all cases but it could
   need a special definition with some other compilers in the future which
   explains why do we have it.
 */
                                                                   

/*
    A macro to define a simple deprecated accessor.
 */
                                                                                 

/*
   Special variant of the macro above which should be used for the functions
   which are deprecated but called by wx itself: this often happens with
   deprecated virtual functions which are called by the library.
 */
                 
                                             
     
                                                           
      

/*
   Macros to suppress and restore gcc warnings, requires g++ >= 4.6 and don't
   do anything otherwise.

   Example of use:

        wxGCC_WARNING_SUPPRESS(float-equal)
        inline bool wxIsSameDouble(double x, double y) { return x == y; }
        wxGCC_WARNING_RESTORE(float-equal)
 */
                             
                                                                                                                                                                      


                                                                                 

      /* gcc < 4.6 or not gcc at all */
                                 
                                
      

/*
    Combination of the two variants above: should be used for deprecated
    functions which are defined inline and are used by wxWidgets itself.
 */
                 
                                                                         
     
                                                                                               

      

/*  NULL declaration: it must be defined as 0 for C++ programs (in particular, */
/*  it must not be defined as "(void *)0" which is standard for C but completely */
/*  breaks C++ code) */
                            
                  
      

                  

// everybody gets the assert and other debug macros
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/debug.h" 0
/////////////////////////////////////////////////////////////////////////////
// Name:        wx/debug.h
// Purpose:     Misc debug functions and macros
// Author:      Vadim Zeitlin
// Created:     29/01/98
// Copyright:   (c) 1998-2009 Vadim Zeitlin <vadim@wxwidgets.org>
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////

                    
                    

                         
                      
       // systems without assert.h

                            // for CHAR_BIT used below

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/chartype.h" 0
/*
 * Name:        wx/chartype.h
 * Purpose:     Declarations of wxChar and related types
 * Author:      Joel Farley, Ove Kåven
 * Modified by: Vadim Zeitlin, Robert Roebling, Ron Lee
 * Created:     1998/06/12
 * Copyright:   (c) 1998-2006 wxWidgets dev team
 * Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                         
                         

/* defs.h indirectly includes this file, so don't include it here */
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/platform.h" 0
/**
* Name:        wx/platform.h
* Purpose:     define the OS and compiler identification macros
* Author:      Vadim Zeitlin
* Modified by:
* Created:     29.10.01 (extracted from wx/defs.h)
* Copyright:   (c) 1997-2001 Vadim Zeitlin
* Licence:     wxWindows licence
*/

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                       
                       

                      
                   
                               
                               
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                                
                 
                   
      
                 
                   
      
      

  
                                                                              
                                                                            
                                                                            
                                                                  

                                                                
                       
                                                                   
   
                                                               
                   
                   
                         
                                                   

                   
              
          
                                                                            
                                                                           
                                                                             
           
              
                    

                 
                 
                       
                   

                        
                                                                   
                                                                                              
                 
      

                         
                   
      

              
              
      

             
             
      

                 
                 
      
                        

  
                                                                         
                                                                            
                                                                      
                                
   
                                                           
                
                
      
                
                
      
      

                                              

                
                
      

                                     

                          
                                  
                      
                      
      
                   
                   
      
      

                     
                                  
                    
                    
      
                   
                   
      
      

                               
                                       
                             
                             
      
                   
                   
      
      

                                                                                         
                       
                     
                     
      
                         
                      
                      
      
      
                   
                   
      
      

                                                                   
                    
      

                                                                          
                      
      

                  
                     
                                      
      

                        

  
                                                                              
                                  

                                                                               
                                                                               
                                                                             
   
                     

  
                                                                            
   
                                   
                            
      


  
                               

                               
   
                                                                             
                     
                         
          
                

                    
                    
                        
          
                 

                                                            
                       
                           
          
                  

                                         
                     
                         
          
                  


  
                                                                        
                                                                              
                                                     
   

                                                              
                                         
                    
                       
                    
                     
                       
      
                             

                                                                       
                 
                
                
      
               
               
      
                          


  
                                                                         
                                                                         
  


  
                                                                 
                                                                         
  
                                                    
      
                                                                     
                                                                      
                                                                       
                                                             
      
                                      

      
                                                                         
                                    
       
                                  

      
                                                                   
                                                                         
                                                                   
                                                            

                                                                      
                        
      
                                     
                         

  
                                                                             
                                                                     
   
                                                               
               
               
      
                                                                    
                                                              
                                                             
                  
                        
      
                
                         
      
      

  
                                                                           
                                    
                                                                  
   
                                                                                                                                                                                                                                                                                                          




                     

                                           
              
               
                      
                
              
                                                                                
                                                                        
               
                  
                     

                                                                               
                             
                             
      
                 

              
                         
      
                             
                                                      
                   
      

                                                                  
                                         
                
                  

                                            
                              
                        
      
      

                                                                      
                                                                          
                                                   
       
                                           
                
                  
      
               
                 
      
                                                                       
                  
                    
      
                                                                           
                     
                       
      
                                                                           
                                                             
                         
      
      

  
           
   
                      

                                                   
                                                                       
                
                
      
      

                       
                                 
      

                                                            
                          
                                                                   
                            
      
                        

  
              
   
                          

                                  
                 
      
      

                                                                               
                                                              
                                                                                    
                        
      
     
      
                

  
                                                                             
                                           
   
                                                
                
                 

                                              
             
      

  
                                                                         
                                                                    
   
                                               
                      
      

                                                             
                  
                                   
                         
                             
      

                                                                
                      
      

                                                                                                                                                                                                                                                                    






                           
     
                             
                                            
      


  
                                                                        
                                                                  
                                                                      
                                                                          
                                                                   
                                  
   
                           
                      
                         
                                
                      
                                                     
                                                                            
                                                         
      
                                                                     
                 
               
                    
                  
                    
                       
                     
                       
     
                    
                  
                    
                       
                     
                       
      
      

  
                                                                              

                                              
                                      
   

  
                                                                         
                                                                               
                    

                                                                           
                                                                              
           
   
                                                                                      
                 
                   
      
                 
                   
      
      

                
                                                 
                               
                             
                                                      
      
      
     
                                                                         
      
      
                                                
      
      
                       
      
      

                    
                     
                               
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
                             
                                  
      
     
      
      
      

  
                                                                                                  

                                                                            
                                                                                       
                                                                                   

                                                                                             
                                                                           
                                                                              
                                                                                
                                                                                
                                                        

                                                                              
                                                                               
                                                     

   
                                                                                         
                            
      

  
                                                                           
                                                                           
                                                                  
   
                       


  
                                                                          
                                                                          
                
   
                                           
                      
                         
                                              
                      
                         
                          
                      
                         
                                              

  
                                                                              
                                                                           
                                  

                                                                        
              
   
                                                                                                           
                   
     
             
      

                                                                              
                                                    
   
                                                                                                              
                           
     
                     
      

            
                           
                  
                         
                         
                         
      
      

                                                     
                                                           
                                                                  
   
                             
                                                                                                 
                               
     
                               
      
      

  
                                     
                                            
                              
   

                        
                                  
                          
     
                          
      
      

                    
                      
      

                                               
                     
      

  
                                      
   

  
                                                                         
                                                                           
                                                                       
   
                 
      
                                                                       
                                                               
       
                             
                  
                 
      
                       
                
                 
      
      
                      

       /* _WX_PLATFORM_H_ */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/chartype.h" 19

/* check whether we have wchar_t and which size it is if we do */
                           
                         
                                                                                                         
                                   
             
                                   
              
                                                        
                               
                              
                               
                                                      
                               
         
        /* add additional compiler checks if this fails */
                               
          
       /* !defined(wxUSE_WCHAR_T) */

/* Unicode support requires wchar_t */
                  
          
       /* Unicode */

/*
   non Unix compilers which do have wchar.h (but not tchar.h which is included
   below and which includes wchar.h anyhow).

   Actually MinGW has tchar.h, but it does not include wchar.h
 */
                                                                          
                        
                            
          
      

                   
                                                                         
                                                                         
                                                                          
                                                       
                     
                              
                          
                        
              
                       

                      

                                                   
         
                               

                           
                                                       
                      
                                                                     
                                      
                       
       /* HAVE_WCHAR_H */

                   
                      
      

/* -------------------------------------------------------------------------- */
/* define wxHAVE_TCHAR_SUPPORT for the compilers which support the TCHAR type */
/* mapped to either char or wchar_t depending on the ASCII/Unicode mode and   */
/* have the function mapping _tfoo() -> foo() or wfoo()                       */
/* -------------------------------------------------------------------------- */

/* VC++ and BC++ starting with 5.2 have TCHAR support */
                  
                                
                                                      
                                
                      
                          
                                
                      
                                
                                                            
                                
                       
                       
                      
                                                        
                                                                               
                                                                               
                                                                               
                                                                               
                                            

                                       
                                
       /* compilers with (good) TCHAR support */

                           
                                              
                      

                                                    
                         
                               
                                        
       /* wxHAVE_TCHAR_SUPPORT */

/* ------------------------------------------------------------------------- */
/* define wxChar type                                                        */
/* ------------------------------------------------------------------------- */

/* TODO: define wxCharInt to be equal to either int or wint_t? */

                  
    typedef char wxChar;
    typedef signed char wxSChar;
    typedef unsigned char wxUChar;
     
                                                                               
                                                                               
                                                                               
                                                                               

                                                                               
                                                                               
                                                                               
                                                                                 
                                       
          

                                                                           
                       
                                                                                              

                           
                               
                                
                                
                                             
                                                                               
                                                                               
                                                                               
                                                                               
                                                                               
                                                                               
                                                                               

                                                
                                      
                                      
                                       
                                       
                               
       /* ASCII/Unicode */

/* ------------------------------------------------------------------------- */
/* define wxStringCharType                                                   */
/* ------------------------------------------------------------------------- */

/* depending on the platform, Unicode build can either store wxStrings as
   wchar_t* or UTF-8 encoded char*: */
                 
                                                          
                                                                       
              
          
                                  
                                        
          

                              
                                    
          

                          
                                     
         
                                     
          
     
                                 
                                 
                                    
      

/* define char type used by wxString internal representation: */
                       
                                     
      /* wxUSE_UNICODE_UTF8 || ANSI */
    typedef char wxStringCharType;
      


/* ------------------------------------------------------------------------- */
/* define wxT() and related macros                                           */
/* ------------------------------------------------------------------------- */

/* BSD systems define _T() to be something different in ctype.h, override it */
                                               
                      
             
      

/*
   wxT ("wx text") macro turns a literal string constant into a wide char
   constant. It is mostly unnecessary with wx 2.9 but defined for
   compatibility.
 */
           
                      
                        
                       
          
                                                                              
                                   
           
                                             
                                                
             
                                         
              
           /* ASCII/Unicode */
       /* !defined(wxT) */

/*
    wxT_2 exists only for compatibility with wx 2.x and is the same as wxT() in
    that version but nothing in the newer ones.
 */
                  

/*
   wxS ("wx string") macro can be used to create literals using the same
   representation as wxString does internally, i.e. wchar_t in Unicode build
   under Windows or char in UTF-8-based Unicode builds and (deprecated) ANSI
   builds everywhere (see wxStringCharType definition above).
 */
                       
      
                                                                        
       
                                         
                                            
         
                                     
          
      /* wxUSE_UNICODE_UTF8 || ANSI */
                    
      

/*
    _T() is a synonym for wxT() familiar to Windows programmers. As this macro
    has even higher risk of conflicting with system headers, its use is
    discouraged and you may predefine wxNO__T to disable it. Additionally, we
    do it ourselves for Sun CC which is known to use it in its standard headers
    (see #10660).
 */
                                               
                   
                       
          
      

                                     
                        
      

/* a helper macro allowing to make another macro Unicode-friendly, see below */
                           

/* Unicode-friendly __FILE__, __DATE__ and __TIME__ analogs */
                 
                                         
      

                 
                                         
      

                 
                                         
      

       /* _WX_WXCHARTYPE_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/debug.h" 32     // for __TFILE__ and wxChar
                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/cpp.h" 0
/*
 *  Name:        wx/cpp.h
 *  Purpose:     Various preprocessor helpers
 *  Author:      Vadim Zeitlin
 *  Created:     2006-09-30
 *  Copyright:   (c) 2006 Vadim Zeitlin <vadim@wxwindows.org>
 *  Licence:     wxWindows licence
 */

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                  
                  

                                                              

                                                                             
                                                

                                                    

                                                                

                                                                         

                                                                                 

                                                                                         

                                                                                                 

                                                                                                         

                                                                                                                 


                                                                                 
                                      
                                                         

                                                 
                                                             

  
                                                                            
                                           
   
                                    
                                      
                                        
                                         
                                          

  
                                                                             
                                                                               
                                                                          
                                                                              
                       
    
                                                 
      
                                                                          
                                                                             
                                                                             
                                                                             
              
       
                                                               
                            
                                                            
      

                                                  
                                                       

  
                                                                            
                            
   
                                                                

  
                                                                    

                                                                             
                                                                             
                                                                            
                                                          

                                                                             

                                                                           
                                                         
   
                  
                                                            
                                                                             
                                   
     
                                         
                                                        
      

  
                                                                            
                                                          
   
                      
                                                          
                        
          
                                                                      
                                                                      
          
                                     
                                                                                                                   


                                           
         
                                                                    
                                     
          
                                           


                                                                     
                                                                    
                                                     
                                                                                                                              

                                    
                                  
                                    
                                    
                                    
                                     
                                    
          
                                  



                           
  
                                                                                    
                                                                          
                                                             

                                                                 

                                                     



                                       

                                                                                      
                                                                                                              
  
                                                                                                  
                                                              
                                                                       
                                                          

                                                    
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           
                                                                                           

                                                                        


                                                                                                               


     
                                                                                    
                                 

       /* _WX_CPP_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/debug.h" 34          // for __WXFUNCTION__
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/dlimpexp.h" 0
/*
 * Name:        wx/dlimpexp.h
 * Purpose:     Macros for declaring DLL-imported/exported functions
 * Author:      Vadim Zeitlin
 * Modified by:
 * Created:     16.10.2003 (extracted from wx/defs.h)
 * Copyright:   (c) 2003 Vadim Zeitlin <vadim@wxwidgets.org>
 * Licence:     wxWindows licence
 */

/*
    This is a C file, not C++ one, do not use C++ comments here!
 */

                       
                       

                            
                                                        
                                                        
                          
      
                                                                              
               
       
                                                                         
                                      
                                      
      
                                                                               
                                                                             
                                                                              
                                                                          
                            
       
                                                     
          
                                                                      
                                              
          
                                           
                                           
      
                       
                         
                                      
          
                                                                              
                     
           
                
                      
                
                
                                                                          
                        
                        
      
                         
                                      
                                      
      

                                                     
                
                
                
      

  
                                                                           
                                                                              
                                                                  

                                                                              
                                                                            
                                                                              
                                                          
   
                  
              
                        
      

                       
                        
                       
                      
                        
                      
                       
                       
                       
                            
                          
                            
                         
                       
                           
                        

  
                                                                               
                                                                            
   
                       
                                 
                                                 
                            
                                        
     
                               
      
                         
                                 
                                                 
                            
                                        
     
                               
      
                                    
                        
                                        
                               
      

                      
                                
                                                
                         
                                
                                                
                                    
                       
                                       
      

                       
                                 
                                                 
                            
                                        
     
                               
      
                         
                                 
                                                 
                            
                                        
     
                               
      
                                    
                        
                                        
                               
      

                      
                                
                                                
                         
                                
                                                
                                    
                       
                                       
      

                     
                               
                                               
                         
                               
                                               
                                    
                      
                                      
      

                       
                                 
                                                 
                         
                                 
                                                 
                                    
                        
                                        
      

                     
                               
                         
                               
                                    
                      
      

                      
                                
                         
                                
                                    
                       
      

                      
                                
                         
                                
                                    
                       
      

                      
                                
                         
                                
                                    
                       
      

                           
                                     
                                                     
                         
                                     
                                                     
                                    
                            
                                            
      

                         
                                   
                         
                                   
                                    
                          
      

                           
                                     
                         
                                     
                                    
                            
      

                        
                                  
                         
                                  
                                    
                         
      

                      
                                
                                                
                         
                                
                                                
                                    
                       
                                       
      

                          
                                    
                                                    
                         
                                    
                                                    
                                    
                           
                                           
      

  
                                                                               
                                                                               
                                                                               
                                                              
   
                                                                           
                                
                               
                                
                               
                              
                                
                              
                               
                               
                               
                                    
                                  
                                    
                                 
                               
                                   
     
                                                      
                                                     
                                                      
                                                     
                                                    
                                                      
                                                    
                                                     
                                                     
                                                     
                                                          
                                                        
                                                          
                                                       
                                                     
                                                         
      

                                                                  
                                    
                                              

  
                                                                               
                                                              

                                               
                                                     

                                                                            
   
                                                 
                           
                                                                                                          

                                                                                                          

         
          
                                                                    
                                           

                                                                             
           
               

                                                                                                                 

                                                                                                                 

          
                       
                                                    
                                                    
                       

       /* _WX_DLIMPEXP_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/debug.h" 36     // for WXDLLIMPEXP_FWD_BASE

class  wxString;
class  wxCStrData;

// ----------------------------------------------------------------------------
// Defines controlling the debugging macros
// ----------------------------------------------------------------------------

/*
    wxWidgets can be built with several different levels of debug support
    specified by the value of wxDEBUG_LEVEL constant:

    0:  No assertion macros at all, this should only be used when optimizing
        for resource-constrained systems (typically embedded ones).
    1:  Default level, most of the assertions are enabled.
    2:  Maximal (at least for now): asserts which are "expensive"
        (performance-wise) or only make sense for finding errors in wxWidgets
        itself, as opposed to bugs in applications using it, are also enabled.
 */

// unless wxDEBUG_LEVEL is predefined (by configure or via wx/setup.h under
// Windows), use the default
                           
                           
       // !defined(wxDEBUG_LEVEL)

/*
    __WXDEBUG__ is defined when wxDEBUG_LEVEL != 0. This is done mostly for
    compatibility but it also provides a simpler way to check if asserts and
    debug logging is enabled at all.
 */
                     
                       
                           
          
     
                      
      

// Finally there is also a very old WXDEBUG macro not used anywhere at all, it
// is only defined for compatibility.
                  
                                     
                      
                         
           // !WXDEBUG
       // __WXDEBUG__

// ----------------------------------------------------------------------------
// Handling assertion failures
// ----------------------------------------------------------------------------

/*
    Type for the function called in case of assert failure, see
    wxSetAssertHandler().
 */
typedef void (*wxAssertHandler_t)(const wxString& file,
                                  int line,
                                  const wxString& func,
                                  const wxString& cond,
                                  const wxString& msg);

                 

// the global assert handler function, if it is NULL asserts don't check their
// conditions
extern wxAssertHandler_t wxTheAssertHandler;

/*
    Sets the function to be called in case of assertion failure.

    The default assert handler forwards to wxApp::OnAssertFailure() whose
    default behaviour is, in turn, to show the standard assertion failure
    dialog if a wxApp object exists or shows the same dialog itself directly
    otherwise.

    While usually it is enough -- and more convenient -- to just override
    OnAssertFailure(), to handle all assertion failures, including those
    occurring even before wxApp object creation or after its destruction you
    need to provide your assertion handler function.

    This function also provides a simple way to disable all asserts: simply
    pass NULL pointer to it. Doing this will result in not even evaluating
    assert conditions at all, avoiding almost all run-time cost of asserts.

    Notice that this function is not MT-safe, so you should call it before
    starting any other threads.

    The return value of this function is the previous assertion handler. It can
    be called after any pre-processing by your handler and can also be restored
    later if you uninstall your handler.
 */
inline wxAssertHandler_t wxSetAssertHandler(wxAssertHandler_t handler)
{
    const wxAssertHandler_t old = wxTheAssertHandler;
    wxTheAssertHandler = handler;
    return old;
}

/*
    Reset the default assert handler.

    This may be used to enable asserts, which are disabled by default in this
    case, for programs built in release build (NDEBUG defined).
 */
extern void  wxSetDefaultAssertHandler();

                       

                                                                 
  
                                                                              
              
                                                                            
 
                
 

                                           

       // wxDEBUG_LEVEL/!wxDEBUG_LEVEL

// simply a synonym for wxSetAssertHandler(NULL)
inline void wxDisableAsserts() { wxSetAssertHandler(NULL); }

/*
    A macro which disables asserts for applications compiled in release build.

    By default, wxIMPLEMENT_APP (or rather wxIMPLEMENT_WXWIN_MAIN) disable the
    asserts in the applications compiled in the release build by calling this.
    It does nothing if NDEBUG is not defined.
 */
             
                                                                   
     
                                                
      

                 

/*
    wxOnAssert() is used by the debugging macros defined below. Different
    overloads are needed because these macros can be used with or without wxT().

    All of them are implemented in src/common/appcmn.cpp and unconditionally
    call wxTheAssertHandler so the caller must check that it is non-NULL
    (assert macros do it).
 */

                 

                                                                              
                                                                             
                                                                           
               
  
                                                                              
                                                                
                                                         
                                                 
                                                         
                                                          

                                                         
                                                 
                                                         
                                                         
                                                         

                                                         
                                                 
                                                         
                                                         
                                                            
       /* wxUSE_UNICODE */

// this version is for compatibility with wx 2.8 Unicode build only, we don't
// use it ourselves any more except in ANSI-only build in which case it is all
// we need
extern  void wxOnAssert(const wxChar *file,
                                        int line,
                                        const char *func,
                                        const wxChar *cond,
                                        const wxChar *msg = NULL);

// these overloads work when msg passed to debug macro is a string and we
// also have to provide wxCStrData overload to resolve ambiguity which would
// otherwise arise from wxASSERT( s.c_str() )
extern  void wxOnAssert(const wxString& file,
                                        int line,
                                        const wxString& func,
                                        const wxString& cond,
                                        const wxString& msg);

extern  void wxOnAssert(const wxString& file,
                                        int line,
                                        const wxString& func,
                                        const wxString& cond);

extern  void wxOnAssert(const char *file,
                                        int line,
                                        const char *func,
                                        const char *cond,
                                        const wxCStrData& msg);

extern  void wxOnAssert(const char *file,
                                        int line,
                                        const char *func,
                                        const char *cond,
                                        const wxString& msg);

       // wxDEBUG_LEVEL


// ----------------------------------------------------------------------------
// Debugging macros
// ----------------------------------------------------------------------------

/*
    Assertion macros: check if the condition is true and call assert handler
    (which will by default notify the user about failure) if it isn't.

    wxASSERT and wxFAIL macros as well as wxTrap() function do nothing at all
    if wxDEBUG_LEVEL is 0 however they do check their conditions at default
    debug level 1, unlike the previous wxWidgets versions.

    wxASSERT_LEVEL_2 is meant to be used for "expensive" asserts which should
    normally be disabled because they have a big impact on performance and so
    this macro only does anything if wxDEBUG_LEVEL >= 2.
 */
                 
    // wxTrap() can be used to break into the debugger unconditionally
    // (assuming the program is running under debugger, of course).
    //
    // If possible, we prefer to define it as a macro rather than as a function
    // to open the debugger at the position where we trapped and not inside the
    // trap function itself which is not very useful.
                                  
                                       
         
        extern  void wxTrap();
           // Win VisualC

    // Global flag used to indicate that assert macros should call wxTrap(): it
    // is set by the default assert handler if the user answers yes to the
    // question of whether to trap.
    extern bool wxTrapInAssert;

    // This macro checks if the condition is true and calls the assert handler
    // with the provided message if it isn't and finally traps if the special
    // flag indicating that it should do it was set by the handler.
    //
    // Notice that we don't use the handler return value for compatibility
    // reasons (if we changed its return type, we'd need to change wxApp::
    // OnAssertFailure() too which would break user code overriding it), hence
    // the need for the ugly global flag.











    // a version without any additional message, don't use unless condition
    // itself is fully self-explanatory
                                                                

    // wxFAIL is a special form of assert: it always triggers (and so is
    // usually used in normally unreachable code)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          










                                                                  
                                                
                       
                    

                          
                                   
                  
                           
                                      
        // wxDEBUG_LEVEL

                      
                                                                   
                                                 
      // wxDEBUG_LEVEL < 2
                                           
                                  
      

// This is simply a wrapper for the standard abort() which is not available
// under all platforms.
//
// It isn't really debug-related but there doesn't seem to be any better place
// for it, so declare it here and define it in appbase.cpp, together with
// wxTrap().
extern void  wxAbort();

/*
    wxCHECK macros always check their conditions, setting debug level to 0 only
    makes them silent in case of failure, otherwise -- including at default
    debug level 1 -- they call the assert handler if the condition is false

    They are supposed to be used only in invalid situation: for example, an
    invalid parameter (e.g. a NULL pointer) is passed to a function. Instead of
    dereferencing it and causing core dump the function might use

        wxCHECK_RET( p != NULL, "pointer can't be NULL" )
*/

// the generic macro: takes the condition to check, the statement to be executed
// in case the condition is false and the message to pass to the assert handler










// check which returns with the specified return code if the condition fails
                                                                       

// check that expression is true, "return" if not (also FAILs in debug mode)
                                                                             

// check that expression is true, perform op if not
                                                                              

// special form of wxCHECK2: as wxCHECK, but for use in void functions
//
// NB: there is only one form (with msg parameter) and it's intentional:
//     there is no other way to tell the caller what exactly went wrong
//     from the void function (of course, the function shouldn't be void
//     to begin with...)
                                                                    


// ----------------------------------------------------------------------------
// Compile time asserts
//
// Unlike the normal assert and related macros above which are checked during
// the program run-time the macros below will result in a compilation error if
// the condition they check is false. This is usually used to check the
// expressions containing sizeof()s which cannot be tested with the
// preprocessor. If you can use the #if's, do use them as you can give a more
// detailed error message then.
// ----------------------------------------------------------------------------

/*
  How this works (you don't have to understand it to be able to use the
  macros): we rely on the fact that it is invalid to define a named bit field
  in a struct of width 0. All the rest are just the hacks to minimize the
  possibility of the compiler warnings when compiling this macro: in
  particular, this is why we define a struct and not an object (which would
  result in a warning about unused variable) and a named struct (otherwise we'd
  get a warning about an unnamed struct not used to define an object!).
 */

                                                                         

/*
  The second argument of this macro must be a valid C++ identifier and not a
  string. I.e. you should use it like this:

    wxCOMPILE_TIME_ASSERT( sizeof(int) >= 2, YourIntsAreTooSmall );

 It may be used both within a function and in the global scope.
*/
                        
                                       
                                                                                                                                                                                              




                      
                  

                                                                      
                                                  

                                                                          

                                                                      
                                            

 
                                
                                                   
                                                                                                                                                                                                                                              



     
                                                                                                                 

      

/*
   When using VC++ 6 with "Edit and Continue" on, the compiler completely
   mishandles __LINE__ and so wxCOMPILE_TIME_ASSERT() doesn't work, provide a
   way to make "unique" assert names by specifying a unique prefix explicitly
 */
                                                                  

                                                                                                                       


// helpers for wxCOMPILE_TIME_ASSERT below, for private use only
                                                                          

// a special case of compile time assert: check that the size of the given type
// is at least the given number of bits
                                                                                                                                                             




// ----------------------------------------------------------------------------
// other miscellaneous debugger-related functions
// ----------------------------------------------------------------------------

/*
    Return true if we're running under debugger.

    Currently only really works under Win32 and just returns false elsewhere.
 */
                      
                                                       
      // !Mac
    inline bool wxIsDebuggerRunning() { return false; }
       // Mac/!Mac

// An assert helper used to avoid warning when testing constant expressions,
// i.e. wxASSERT( sizeof(int) == 4 ) can generate a compiler warning about
// expression being always true, but not using
// wxASSERT( wxAssertIsEqual(sizeof(int), 4) )
//
// NB: this is made obsolete by wxCOMPILE_TIME_ASSERT() and should no
//     longer be used.
extern bool  wxAssertIsEqual(int x, int y);

// Use of wxFalse instead of false suppresses compiler warnings about testing
// constant expression
extern const bool wxFalse;

                               

// This is similar to WXUNUSED() and useful for parameters which are only used
// in assertions.
                 
                                               
     
                                                         
      


       // _WX_DEBUG_H_

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 914

    // delete pointer if it is not NULL and NULL it afterwards
    template <typename T>
    inline void wxDELETE(T*& ptr)
    {
        typedef char TypeIsCompleteCheck[sizeof(T)] ;

        if ( ptr != NULL )
        {
            delete ptr;
            ptr = NULL;
        }
    }

    // delete an array and NULL it (see comments above)
    template <typename T>
    inline void wxDELETEA(T*& ptr)
    {
        typedef char TypeIsCompleteCheck[sizeof(T)] ;

        if ( ptr != NULL )
        {
            delete [] ptr;
            ptr = NULL;
        }
    }

    // trivial implementation of std::swap() for primitive types
    template <typename T>
    inline void wxSwap(T& first, T& second)
    {
        T tmp(first);
        first = second;
        second = tmp;
    }
       /*__cplusplus*/

/*  size of statically declared array */
                                                          

/*  symbolic constant used by all Find()-like functions returning positive */
/*  integer on success as failure indicator */
                              

/* the default value for some length parameters meaning that the string is */
/* NUL-terminated */
                             

/*  ---------------------------------------------------------------------------- */
/*  macros dealing with comparison operators */
/*  ---------------------------------------------------------------------------- */

/*
    Expands into m(op, args...) for each op in the set { ==, !=, <, <=, >, >= }.
 */
                                                                      


                                                                                       


                                                                                                      


                                                                                                                     


/*
    These are only used with wxDEFINE_COMPARISON_[BY_]REV: they pass both the
    normal and the reversed comparison operators to the macro.
 */
                                                                                                                              



                                                                                                                                             




                                                                                                              


                                                                                                                            


                                                                                                                   


/*
    Define all 6 comparison operators (==, !=, <, <=, >, >=) for the given
    types in the specified order. The implementation is provided by the cmp
    macro. Normally wxDEFINE_ALL_COMPARISONS should be used as comparison
    operators are usually symmetric.
 */
                                                                                                       


/*
    Define all 6 comparison operators (==, !=, <, <=, >, >=) for the given
    types in the specified order, implemented in terms of existing operators
    for the reverse order.
 */
                                                                                                               


/*
    This macro allows to define all 12 comparison operators (6 operators for
    both orders of arguments) for the given types using the provided "cmp"
    macro to implement the actual comparison: the macro is called with the 2
    arguments names, the first of type T1 and the second of type T2, and the
    comparison operator being implemented.
 */
                                                                                                                                                                                 



/*  ---------------------------------------------------------------------------- */
/*  macros to avoid compiler warnings */
/*  ---------------------------------------------------------------------------- */

/*  Macro to cut down on compiler warnings. */
                                                                              
                                                 
                                     
                                           
      

/*  some arguments are not used in unicode mode */
                 
                                                       
     
                                             
      

/*  some arguments are not used in WinCE build */
                  
                                                     
     
                                           
      

/*  unused parameters in non stream builds */
                 
                                                 
     
                                                           
      

/*  some compilers give warning about a possibly unused variable if it is */
/*  initialized in both branches of if/else and shut up if it is initialized */
/*  when declared, but other compilers then give warnings about unused variable */
/*  value -- this should satisfy both of them */
                        
                                         
     
                                   
      

/*  sometimes the value of a variable is *really* not used, to suppress  the */
/*  resulting warning you may pass it to this function */
                  
                   
                                          
     
        template <class T>
            inline void wxUnusedVar(const T& ) { }
      
      

/*  ---------------------------------------------------------------------------- */
/*  compiler specific settings */
/*  ---------------------------------------------------------------------------- */

                                   
                         
      

/*  where should i put this? we need to make sure of this as it breaks */
/*  the <iostream> code. */
                                            
                             
                             
                                
      
      

/*  ---------------------------------------------------------------------------- */
/*  standard wxWidgets types */
/*  ---------------------------------------------------------------------------- */

/*  the type for screen and DC coordinates */
typedef int wxCoord;

enum {  wxDefaultCoord = -1 };

/*  ---------------------------------------------------------------------------- */
/*  define fixed length types */
/*  ---------------------------------------------------------------------------- */

                        
                          
      

/*  chars are always one byte (by definition), shorts are always two (in */
/*  practice) */

/*  8bit */
typedef signed char wxInt8;
typedef unsigned char wxUint8;
typedef wxUint8 wxByte;


/*  16bit */
                   
                         
              
          
     
                          
      

typedef signed short wxInt16;
typedef unsigned short wxUint16;

typedef wxUint16 wxWord;

/*
  things are getting more interesting with ints, longs and pointers

  there are several different standard data models described by this table:

  +-----------+----------------------------+
  |type\model | LP64 ILP64 LLP64 ILP32 LP32|
  +-----------+----------------------------+
  |char       |  8     8     8     8     8 |
  |short      | 16    16    16    16    16 |
  |int        | 32    64    32    32    16 |
  |long       | 64    64    32    32    32 |
  |long long  | 64    64    64    --    -- |
  |void *     | 64    64    64    32    32 |
  +-----------+----------------------------+

  Win16 used LP32 (but we don't support it any longer), Win32 obviously used
  ILP32 and Win64 uses LLP64 (a.k.a. P64)

  Under Unix LP64 is the most widely used (the only I've ever seen, in fact)
 */

/*  32bit */
                        
                          
                            
                                      

          
                                                                              
                     
           
                          
                                
              

                           
                                 
              

                              
                                     
                                    
              

                             
              
                                                                            
                                     
               
                            
                                       

                                       
                             
                                       

                                        
                  
                                    
              

                             
                            
                                       
                              
                                       
                                  
              
         
              
          
      /*  !Windows */
    /*  SIZEOF_XXX are normally defined by configure */
                     
                           
                                                                               
                                                             
                  
                             
                                
                                          
                             
                               
                                
                      
                  

                                 
                                           
             
                                                                   
                  
              
          /*  !defined(SIZEOF_INT) */
        /*  assume default 32bit machine -- what else can we do? */
        struct wxAssert_5 { unsigned int IntMustBeExactly4Bytes: sizeof(int) == 4; };
        struct wxAssert_5 { unsigned int SizeTMustBeExactly4Bytes: sizeof(size_t) == 4; };
        struct wxAssert_5 { unsigned int PtrMustBeExactly4Bytes: sizeof(void *) == 4; };

                            
                               
                               

        typedef int wxInt32;
        typedef unsigned int wxUint32;

                                                         
                                    
              
                                    
            /*  also assume that sizeof(wchar_t) == 2 (under Unix the most */
            /*  common case is 4 but there configure would have defined */
            /*  SIZEOF_WCHAR_T for us) */
            /*  the most common case */
            struct wxAssert_5 { unsigned int Wchar_tMustBeExactly2Bytes: sizeof(wchar_t) == 2; };

                                    
               /*  !defined(SIZEOF_WCHAR_T) */
          
       /*  Win/!Win */

                      
          
      

/* also define C99-like sized MIN/MAX constants */
                           
                           
                             

                            
                            
                              

                   
                               
                               
                                 
                      
                                
                                
                                  
     
          
      

typedef wxUint32 wxDword;

                
                                 
                                 
                                   
     
                                                      
                                                 
                                                  
      

/*  64 bit */

/*  NB: we #define and not typedef wxLongLong_t because we use "#ifdef */
/*      wxLongLong_t" in wx/longlong.h */

/*      wxULongLong_t is set later (usually to unsigned wxLongLong_t) */

/*  to avoid compilation problems on 64bit machines with ambiguous method calls */
/*  we will need to define this */
                       

/*
   First check for specific compilers which have known 64 bit integer types,
   this avoids clashes with SIZEOF_LONG[_LONG] being defined incorrectly for
   e.g. MSVC builds (Python.h defines it as 8 even for MSVC).

   Also notice that we check for "long long" before checking for 64 bit long as
   we still want to use "long long" and not "long" for wxLongLong_t on 64 bit
   architectures to be able to pass wxLongLong_t to the standard functions
   prototyped as taking "long long" such as strtoll().
 */
                                                                       
                                
                                
                                   
                                                                            
                                
                                
                                 
                                                                                            
                                  
                                  
                                   
                              
                                  
                                 
                                    
                          
                                  
                               
                                   
                                                 
                                  
                                                                                                                                                                                                            




                                  
                               
                                  
                                                
                             
                              
                                 
                            
      


                   
                                               

      
                                                                       
                     
       
                                         
                                                     
                                                                   
         
          
                                                                             
                                                            
           
                                       
                                         
          

                                 
                                   

                         

                            
                                                     
          
                    
                                                                          
                                 
                                   

                              
                                

                         

      /* !wxUSE_LONGLONG */

                         

      

/*
    Helper macro for conditionally compiling some code only if wxLongLong_t is
    available and is a type different from the other integer types (i.e. not
    long).
 */
                                            
                                    
     
                                  
      


/* Make sure ssize_t is defined (a signed type the same size as size_t). */
/* (HAVE_SSIZE_T is not already defined by configure) */
                    
                  
                                                       
                            
          
                                 
                        
      
       /* !HAVE_SSIZE_T */

/* If we really don't have ssize_t, provide our own version. */
                   
                   
                              
          
      /* !HAVE_SSIZE_T */
                          
        typedef wxInt32 ssize_t;
                            
                                
         
              
          

    /* prevent ssize_t redefinitions in other libraries */
                        
      

/*
    We can't rely on Windows _W64 being defined as windows.h may not be
    included so define our own equivalent: this should be used with types
    like WXLPARAM or WXWPARAM which are 64 bit under Win64 to avoid warnings
    each time we cast it to a pointer or a handle (which results in hundreds
    of warnings as Win32 API often passes pointers in them)
 */
                              
                       
     
                 
      

/*
   Define signed and unsigned integral types big enough to contain all of long,
   size_t and void *.
 */
                                
      
                                                          
       
                          
                                    
                                    
    /*
       Win64 case: size_t is the only integral type big enough for "void *".

       Notice that we must use __w64 to avoid warnings about casting pointers
       to wxIntPtr (which we do often as this is what it is defined for) in 32
       bit build with MSVC.
     */
    typedef  ssize_t wxIntPtr;
    typedef size_t wxUIntPtr;
     
      
                                                                           
                                                                          
       
          
      

                  
/* And also define a couple of simple functions to cast pointer to/from it. */
inline wxUIntPtr wxPtrToUInt(const void *p)
{
    /*
       VC++ 7.1 gives warnings about casts such as below even when they're
       explicit with /Wp64 option, suppress them as we really know what we're
       doing here. Same thing with icc with -Wall.
     */
                  
                           
               
          
                                          
           
                         
           
                                                             
           
      

    return reinterpret_cast<wxUIntPtr>(p);

                                                                        
           
      
}

inline void *wxUIntToPtr(wxUIntPtr p)
{
                  
                           
               
          
                                            
           
                         
           
                                                                          
           
      

    return reinterpret_cast<void *>(p);

                                                                        
           
      
}
       /*__cplusplus*/



/*  base floating point types */
/*  wxFloat32: 32 bit IEEE float ( 1 sign, 8 exponent bits, 23 fraction bits ) */
/*  wxFloat64: 64 bit IEEE float ( 1 sign, 11 exponent bits, 52 fraction bits ) */
/*  wxDouble: native fastest representation that has at least wxFloat64 */
/*            precision, so use the IEEE types for storage, and this for */
/*            calculations */

typedef float wxFloat32;
typedef double wxFloat64;

typedef double wxDouble;

/*
    Some (non standard) compilers typedef wchar_t as an existing type instead
    of treating it as a real fundamental type, set wxWCHAR_T_IS_REAL_TYPE to 0
    for them and to 1 for all the others.
 */
                              
    /*
        VC++ typedefs wchar_t as unsigned short by default until VC8, that is
        unless /Za or /Zc:wchar_t option is used in which case _WCHAR_T_DEFINED
        is defined.
     */
                                                             
                                
      /* compiler having standard-conforming wchar_t */
                                
      
       /* !defined(wxWCHAR_T_IS_REAL_TYPE) */

/* Helper macro for doing something dependent on whether wchar_t is or isn't a
   typedef inside another macro. */
                          
                                  
                                   
                                
       /* wxWCHAR_T_IS_REAL_TYPE/!wxWCHAR_T_IS_REAL_TYPE */

/*
   This constant should be used instead of NULL in vararg functions taking
   wxChar* arguments: passing NULL (which is the same as 0, unless the compiler
   defines it specially, e.g. like gcc does with its __null built-in) doesn't
   work in this case as va_arg() wouldn't interpret the integer 0 correctly
   when trying to convert it to a pointer on architectures where sizeof(int) is
   strictly less than sizeof(void *).

   Examples of places where this must be used include wxFileTypeInfo ctor.
 */
                                


/* Define wxChar16 and wxChar32                                              */

                       
                                 
    typedef wchar_t wxChar16;
     
                              
      

                       
                                 
                             
     
    typedef wxUint32 wxChar32;
      


/*
    Helper macro expanding into the given "m" macro invoked with each of the
    integer types as parameter (notice that this does not include char/unsigned
    char and bool but does include wchar_t).
 */
                                                                                                                                                                                                                                                           










/*
    Same as wxDO_FOR_INT_TYPES() but does include char and unsigned char.

    Notice that we use "char" and "unsigned char" here but not "signed char"
    which would be more correct as "char" could be unsigned by default. But
    wxWidgets code currently supposes that char is signed and we'd need to
    clean up assumptions about it, notably in wx/unichar.h, to be able to use
    "signed char" here.
 */
                                                                                             




/*
    Same as wxDO_FOR_INT_TYPES() above except that m macro takes the
    type as the first argument and some extra argument, passed from this macro
    itself, as the second one.
 */
                                                                                                                                                                                                                                                                                                               










/*
    Combination of wxDO_FOR_CHAR_INT_TYPES() and wxDO_FOR_INT_TYPES_1():
    invokes the given macro with the specified argument as its second parameter
    for all char and int types.
 */
                                                                                                                     





/*  ---------------------------------------------------------------------------- */
/*  byte ordering related definition and macros */
/*  ---------------------------------------------------------------------------- */

/*  byte sex */

                              
                              
                              

                      
                                   
     
                                      
      

/*  byte swapping */

                                                                                                                                                            




                                                                                                                                                          




                                                                                                                                                                                                                                                                                          






                                                                                                                                                                                                                                                                                        





/*  machine specific byte swapping */

                   
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          




















                                         





















       /*  wxLongLong_t/!wxLongLong_t */

                      
                                                               
                                                              
                                           
                                           
                                                               
                                                              
                                           
                                           
                   
                                                                   
                                               
                                                                 
                                              
          
     
                                                               
                                                              
                                           
                                           
                                                               
                                                              
                                           
                                           
                   
                                                                   
                                               
                                                                 
                                              
          
      

/*  ---------------------------------------------------------------------------- */
/*  template workarounds for buggy compilers */
/*  ---------------------------------------------------------------------------- */

                                                     
                                               
                                
      

                                         
                                                
                                
                                     
      

                              
                                
      

                                   
                                     
      

                          
                                                              
                                      
     
                                                                   
                                                  
      

                                         
                                                                      
                                                          
     
                                        
                                       
      

/*  ---------------------------------------------------------------------------- */
/*  Geometric flags */
/*  ---------------------------------------------------------------------------- */

enum wxGeometryCentre
{
    wxCENTRE                  = 0x0001,
    wxCENTER                  = wxCENTRE
};

/*  centering into frame rather than screen (obsolete) */
                                      
/*  centre on screen rather than parent */
                                      
                                                  

enum wxOrientation
{
    /* don't change the values of these elements, they are used elsewhere */
    wxHORIZONTAL              = 0x0004,
    wxVERTICAL                = 0x0008,

    wxBOTH                    = wxVERTICAL | wxHORIZONTAL,

    /*  a mask to extract orientation from the combination of flags */
    wxORIENTATION_MASK        = wxBOTH
};

enum wxDirection
{
    wxLEFT                    = 0x0010,
    wxRIGHT                   = 0x0020,
    wxUP                      = 0x0040,
    wxDOWN                    = 0x0080,

    wxTOP                     = wxUP,
    wxBOTTOM                  = wxDOWN,

    wxNORTH                   = wxUP,
    wxSOUTH                   = wxDOWN,
    wxWEST                    = wxLEFT,
    wxEAST                    = wxRIGHT,

    wxALL                     = (wxUP | wxDOWN | wxRIGHT | wxLEFT),

    /*  a mask to extract direction from the combination of flags */
    wxDIRECTION_MASK           = wxALL
};

enum wxAlignment
{
    /*
        0 is a valid wxAlignment value (both wxALIGN_LEFT and wxALIGN_TOP
        use it) so define a symbolic name for an invalid alignment value
        which can be assumed to be different from anything else
     */
    wxALIGN_INVALID           = -1,

    wxALIGN_NOT               = 0x0000,
    wxALIGN_CENTER_HORIZONTAL = 0x0100,
    wxALIGN_CENTRE_HORIZONTAL = wxALIGN_CENTER_HORIZONTAL,
    wxALIGN_LEFT              = wxALIGN_NOT,
    wxALIGN_TOP               = wxALIGN_NOT,
    wxALIGN_RIGHT             = 0x0200,
    wxALIGN_BOTTOM            = 0x0400,
    wxALIGN_CENTER_VERTICAL   = 0x0800,
    wxALIGN_CENTRE_VERTICAL   = wxALIGN_CENTER_VERTICAL,

    wxALIGN_CENTER            = (wxALIGN_CENTER_HORIZONTAL | wxALIGN_CENTER_VERTICAL),
    wxALIGN_CENTRE            = wxALIGN_CENTER,

    /*  a mask to extract alignment from the combination of flags */
    wxALIGN_MASK              = 0x0f00
};

/* misc. flags for wxSizer items */
enum wxSizerFlagBits
{
    /*
        wxADJUST_MINSIZE doesn't do anything any more but we still define
        it for compatibility. Notice that it may be also predefined (as 0,
        hopefully) in the user code in order to use it even in
        !WXWIN_COMPATIBILITY_2_8 builds so don't redefine it in such case.
     */
                                                         
                                       
      
    wxFIXED_MINSIZE                = 0x8000,
    wxRESERVE_SPACE_EVEN_IF_HIDDEN = 0x0002,

    /*  a mask to extract wxSizerFlagBits from combination of flags */
    wxSIZER_FLAG_BITS_MASK         = 0x8002
};

enum wxStretch
{
    wxSTRETCH_NOT             = 0x0000,
    wxSHRINK                  = 0x1000,
    wxGROW                    = 0x2000,
    wxEXPAND                  = wxGROW,
    wxSHAPED                  = 0x4000,
    wxTILE                    = wxSHAPED | wxFIXED_MINSIZE,

    /*  a mask to extract stretch from the combination of flags */
    wxSTRETCH_MASK            = 0x7000 /* sans wxTILE */
};

/*  border flags: the values are chosen for backwards compatibility */
enum wxBorder
{
    /*  this is different from wxBORDER_NONE as by default the controls do have */
    /*  border */
    wxBORDER_DEFAULT = 0,

    wxBORDER_NONE   = 0x00200000,
    wxBORDER_STATIC = 0x01000000,
    wxBORDER_SIMPLE = 0x02000000,
    wxBORDER_RAISED = 0x04000000,
    wxBORDER_SUNKEN = 0x08000000,
    wxBORDER_DOUBLE = 0x10000000, /* deprecated */
    wxBORDER_THEME  = wxBORDER_DOUBLE,

    /*  a mask to extract border style from the combination of flags */
    wxBORDER_MASK   = 0x1f200000
};

/* This makes it easier to specify a 'normal' border for a control */
                                                    
                                                   
     
                                                   
      

/*  ---------------------------------------------------------------------------- */
/*  Window style flags */
/*  ---------------------------------------------------------------------------- */

/*
 * Values are chosen so they can be |'ed in a bit list.
 * Some styles are used across more than one group,
 * so the values mustn't clash with others in the group.
 * Otherwise, numbers can be reused across groups.
 */

/*
    Summary of the bits used by various styles.

    High word, containing styles which can be used with many windows:

    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |31|30|29|28|27|26|25|24|23|22|21|20|19|18|17|16|
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
      |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
      |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  \_ wxFULL_REPAINT_ON_RESIZE
      |  |  |  |  |  |  |  |  |  |  |  |  |  |  \____ wxPOPUP_WINDOW
      |  |  |  |  |  |  |  |  |  |  |  |  |  \_______ wxWANTS_CHARS
      |  |  |  |  |  |  |  |  |  |  |  |  \__________ wxTAB_TRAVERSAL
      |  |  |  |  |  |  |  |  |  |  |  \_____________ wxTRANSPARENT_WINDOW
      |  |  |  |  |  |  |  |  |  |  \________________ wxBORDER_NONE
      |  |  |  |  |  |  |  |  |  \___________________ wxCLIP_CHILDREN
      |  |  |  |  |  |  |  |  \______________________ wxALWAYS_SHOW_SB
      |  |  |  |  |  |  |  \_________________________ wxBORDER_STATIC
      |  |  |  |  |  |  \____________________________ wxBORDER_SIMPLE
      |  |  |  |  |  \_______________________________ wxBORDER_RAISED
      |  |  |  |  \__________________________________ wxBORDER_SUNKEN
      |  |  |  \_____________________________________ wxBORDER_{DOUBLE,THEME}
      |  |  \________________________________________ wxCAPTION/wxCLIP_SIBLINGS
      |  \___________________________________________ wxHSCROLL
      \______________________________________________ wxVSCROLL


    Low word style bits is class-specific meaning that the same bit can have
    different meanings for different controls (e.g. 0x10 is wxCB_READONLY
    meaning that the control can't be modified for wxComboBox but wxLB_SORT
    meaning that the control should be kept sorted for wxListBox, while
    wxLB_SORT has a different value -- and this is just fine).
 */

/*
 * Window (Frame/dialog/subwindow/panel item) style flags
 */
                                          
                                          
                                          

/*  New styles (border styles are now in their own enum) */
                                               
                                               
                                               
                                               
                                               
                                               
                                             

/*  wxALWAYS_SHOW_SB: instead of hiding the scrollbar when it is not needed, */
/*  disable it - but still show (see also wxLB_ALWAYS_SB style) */
/*  */
/*  NB: as this style is only supported by wxUniversal and wxMSW so far */
                                          

/*  Clip children when painting, which reduces flicker in e.g. frames and */
/*  splitter windows, but can't be used in a panel where a static box must be */
/*  'transparent' (panel paints the background for it) */
                                          

/*  Note we're reusing the wxCAPTION style because we won't need captions */
/*  for subwindows/controls */
                                          

                                          

/*  Add this style to a panel to get tab traversal working outside of dialogs */
/*  (on by default for wxPanel, wxDialog, wxScrolledWindow) */
                                          

/*  Add this style if the control wants to get all keyboard messages (under */
/*  Windows, it won't normally get the dialog navigation key events) */
                                          

/*  Make window retained (Motif only, see src/generic/scrolwing.cpp)
 *  This is non-zero only under wxMotif, to avoid a clash with wxPOPUP_WINDOW
 *  on other platforms
 */

                  
                                          
     
                                          
      
                                          

/*  set this flag to create a special popup window: it will be always shown on */
/*  top of other windows, will capture the mouse and will be dismissed when the */
/*  mouse is clicked outside of it or if it loses focus in any other way */
                                          

/*  force a full repaint when the window is resized (instead of repainting just */
/*  the invalidated area) */
                                           

/*  obsolete: now this is the default behaviour */
/*  */
/*  don't invalidate the whole window (resulting in a PAINT event) when the */
/*  window is resized (currently, makes sense for wxMSW only) */
                                     

/* A mask which can be used to filter (out) all wxWindow-specific styles.
 */
                                                                                                                                                                                                                                          




/*
 * Extra window style flags (use wxWS_EX prefix to make it clear that they
 * should be passed to wxWindow::SetExtraStyle(), not SetWindowStyle())
 */

/*  by default, TransferDataTo/FromWindow() only work on direct children of the */
/*  window (compatible behaviour), set this flag to make them recursively */
/*  descend into all subwindows */
                                                  

/*  wxCommandEvents and the objects of the derived classes are forwarded to the */
/*  parent window and so on recursively by default. Using this flag for the */
/*  given window allows to block this propagation at this window, i.e. prevent */
/*  the events from being propagated further upwards. The dialogs have this */
/*  flag on by default. */
                                                  

/*  don't use this window as an implicit parent for the other windows: this must */
/*  be used with transient windows as otherwise there is the risk of creating a */
/*  dialog/frame with this window as a parent which would lead to a crash if the */
/*  parent is destroyed before the child */
                                                  

/*  don't paint the window background, we'll assume it will */
/*  be done by a theming engine. This is not yet used but could */
/*  possibly be made to work in the future, at least on Windows */
                                                  

/*  this window should always process idle events */
                                                  

/*  this window should always process UI update events */
                                                  

/*  Draw the window in a metal theme on Mac */
                                                  
                                                  

/*  Use this style to add a context-sensitive help to the window (currently for */
/*  Win32 only and it doesn't work if wxMINIMIZE_BOX or wxMAXIMIZE_BOX are used) */
                                                  

/* synonyms for wxWS_EX_CONTEXTHELP for compatibility */
                                                           
                                                           

/*  Create a window which is attachable to another top level window */
                                      

/*
 * MDI parent frame style flags
 * Can overlap with some of the above.
 */

                                      

/*
 * wxMenuBar style flags
 */
/*  use native docking */
                                  

/*
 * wxMenu style flags
 */
                                  

/*
 * Apply to all panel items
 */
                                  
                                  

/*
 * Styles for wxListBox
 */
                                  
                                  
                                  
                                  
/*  wxLB_OWNERDRAW is Windows-only */
                                  
                                  
                                  
                                  
                                     
/*  always show an entire number of rows */
                                  

                           
                              
                                                               
                                                          
      

/*
 * wxComboBox style flags
 */
                                  
                                  
                                  
                                  

/*
 * wxRadioBox style flags
 */
/*  should we number the items from left to right or from top to bottom in a 2d */
/*  radiobox? */
                                  
                                  

/*  New, more intuitive names to specify majorDim argument */
                                        
                                      

/*  Old names for compatibility */
                                        
                                      

/*
 * wxRadioButton style flag
 */
                                  
                                  

/*
 * wxScrollBar flags
 */
                                         
                                       

/*
 * wxSpinButton flags.
 * Note that a wxSpinCtrl is sometimes defined as a wxTextCtrl, and so the
 * flags shouldn't overlap with wxTextCtrl flags that can be used for a single
 * line controls (currently we reuse wxTE_CHARWRAP and wxTE_RICH2 neither of
 * which makes sense for them).
 */
                                                   
                                                   
                                    
                                    

/*
 * wxTabCtrl flags
 */
                                    
                                    
                                                      
                                    
                                    
                                    
                                                               
                                    

/*
 * wxStaticBitmap flags
 */
                                      

/*
 * wxStaticLine flags
 */
                                            
                                          


/*
 * extended dialog specifiers. these values are stored in a different
 * flag and thus do not overlap with other style flags. note that these
 * values do not correspond to the return values of the dialogs (for
 * those values, look at the wxID_XXX defines).
 */

/*  wxCENTRE already defined as  0x00000001 */
                                          
                                          
                                          
                                              
                                          
                                          
                                          

                                                                         
                                                                         
                                                                          
                                                                          

                                          
                                          
                                                  
                                           
                                          
                                          
                                           
                                                  

                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          

                                                                                                                          


/*
 * Background styles. See wxWindow::SetBackgroundStyle
 */
enum wxBackgroundStyle
{
    /*
        background is erased in the EVT_ERASE_BACKGROUND handler or using
        the system default background if no such handler is defined (this
        is the default style)
     */
    wxBG_STYLE_ERASE,

    /*
        background is erased by the system, no EVT_ERASE_BACKGROUND event
        is generated at all
     */
    wxBG_STYLE_SYSTEM,

    /*
        background is erased in EVT_PAINT handler and not erased at all
        before it, this should be used if the paint handler paints over
        the entire window to avoid flicker
     */
    wxBG_STYLE_PAINT,


    /* this is a Mac-only style, don't use in portable code */
    wxBG_STYLE_TRANSPARENT,

    /* this style is deprecated and doesn't do anything, don't use */
    wxBG_STYLE_COLOUR,

    /*
        this style is deprecated and is synonymous with
        wxBG_STYLE_PAINT, use the new name
     */
    wxBG_STYLE_CUSTOM = wxBG_STYLE_PAINT
};

/*
 * Key types used by (old style) lists and hashes.
 */
enum wxKeyType
{
    wxKEY_NONE,
    wxKEY_INTEGER,
    wxKEY_STRING
};

/*  ---------------------------------------------------------------------------- */
/*  standard IDs */
/*  ---------------------------------------------------------------------------- */

/*  Standard menu IDs */
enum wxStandardID
{
    /*
       These ids delimit the range used by automatically-generated ids
       (i.e. those used when wxID_ANY is specified during construction).
     */
                                                 
      
                                                                       
                                                                        
                                                                    
                                                                        
       
                              
                              
     
    wxID_AUTO_LOWEST = -1000000,
    wxID_AUTO_HIGHEST = -2000,
      

    /* no id matches this one when compared to it */
    wxID_NONE = -3,

    /*  id for a separator line in the menu (invalid for normal item) */
    wxID_SEPARATOR = -2,

    /* any id: means that we don't care about the id, whether when installing
     * an event handler or when creating a new window */
    wxID_ANY = -1,


    /* all predefined ids are between wxID_LOWEST and wxID_HIGHEST */
    wxID_LOWEST = 4999,

    wxID_OPEN,
    wxID_CLOSE,
    wxID_NEW,
    wxID_SAVE,
    wxID_SAVEAS,
    wxID_REVERT,
    wxID_EXIT,
    wxID_UNDO,
    wxID_REDO,
    wxID_HELP,
    wxID_PRINT,
    wxID_PRINT_SETUP,
    wxID_PAGE_SETUP,
    wxID_PREVIEW,
    wxID_ABOUT,
    wxID_HELP_CONTENTS,
    wxID_HELP_INDEX,
    wxID_HELP_SEARCH,
    wxID_HELP_COMMANDS,
    wxID_HELP_PROCEDURES,
    wxID_HELP_CONTEXT,
    wxID_CLOSE_ALL,
    wxID_PREFERENCES,

    wxID_EDIT = 5030,
    wxID_CUT,
    wxID_COPY,
    wxID_PASTE,
    wxID_CLEAR,
    wxID_FIND,
    wxID_DUPLICATE,
    wxID_SELECTALL,
    wxID_DELETE,
    wxID_REPLACE,
    wxID_REPLACE_ALL,
    wxID_PROPERTIES,

    wxID_VIEW_DETAILS,
    wxID_VIEW_LARGEICONS,
    wxID_VIEW_SMALLICONS,
    wxID_VIEW_LIST,
    wxID_VIEW_SORTDATE,
    wxID_VIEW_SORTNAME,
    wxID_VIEW_SORTSIZE,
    wxID_VIEW_SORTTYPE,

    wxID_FILE = 5050,
    wxID_FILE1,
    wxID_FILE2,
    wxID_FILE3,
    wxID_FILE4,
    wxID_FILE5,
    wxID_FILE6,
    wxID_FILE7,
    wxID_FILE8,
    wxID_FILE9,

    /*  Standard button and menu IDs */
    wxID_OK = 5100,
    wxID_CANCEL,
    wxID_APPLY,
    wxID_YES,
    wxID_NO,
    wxID_STATIC,
    wxID_FORWARD,
    wxID_BACKWARD,
    wxID_DEFAULT,
    wxID_MORE,
    wxID_SETUP,
    wxID_RESET,
    wxID_CONTEXT_HELP,
    wxID_YESTOALL,
    wxID_NOTOALL,
    wxID_ABORT,
    wxID_RETRY,
    wxID_IGNORE,
    wxID_ADD,
    wxID_REMOVE,

    wxID_UP,
    wxID_DOWN,
    wxID_HOME,
    wxID_REFRESH,
    wxID_STOP,
    wxID_INDEX,

    wxID_BOLD,
    wxID_ITALIC,
    wxID_JUSTIFY_CENTER,
    wxID_JUSTIFY_FILL,
    wxID_JUSTIFY_RIGHT,
    wxID_JUSTIFY_LEFT,
    wxID_UNDERLINE,
    wxID_INDENT,
    wxID_UNINDENT,
    wxID_ZOOM_100,
    wxID_ZOOM_FIT,
    wxID_ZOOM_IN,
    wxID_ZOOM_OUT,
    wxID_UNDELETE,
    wxID_REVERT_TO_SAVED,
    wxID_CDROM,
    wxID_CONVERT,
    wxID_EXECUTE,
    wxID_FLOPPY,
    wxID_HARDDISK,
    wxID_BOTTOM,
    wxID_FIRST,
    wxID_LAST,
    wxID_TOP,
    wxID_INFO,
    wxID_JUMP_TO,
    wxID_NETWORK,
    wxID_SELECT_COLOR,
    wxID_SELECT_FONT,
    wxID_SORT_ASCENDING,
    wxID_SORT_DESCENDING,
    wxID_SPELL_CHECK,
    wxID_STRIKETHROUGH,

    /*  System menu IDs (used by wxUniv): */
    wxID_SYSTEM_MENU = 5200,
    wxID_CLOSE_FRAME,
    wxID_MOVE_FRAME,
    wxID_RESIZE_FRAME,
    wxID_MAXIMIZE_FRAME,
    wxID_ICONIZE_FRAME,
    wxID_RESTORE_FRAME,

    /* MDI window menu ids */
    wxID_MDI_WINDOW_FIRST = 5230,
    wxID_MDI_WINDOW_CASCADE = wxID_MDI_WINDOW_FIRST,
    wxID_MDI_WINDOW_TILE_HORZ,
    wxID_MDI_WINDOW_TILE_VERT,
    wxID_MDI_WINDOW_ARRANGE_ICONS,
    wxID_MDI_WINDOW_PREV,
    wxID_MDI_WINDOW_NEXT,
    wxID_MDI_WINDOW_LAST = wxID_MDI_WINDOW_NEXT,

    /* OS X system menu ids */
    wxID_OSX_MENU_FIRST = 5250,
    wxID_OSX_HIDE = wxID_OSX_MENU_FIRST,
    wxID_OSX_HIDEOTHERS,
    wxID_OSX_SHOWALL,
    wxID_OSX_MENU_LAST = wxID_OSX_SHOWALL,
    
    /*  IDs used by generic file dialog (13 consecutive starting from this value) */
    wxID_FILEDLGG = 5900,

    /*  IDs used by generic file ctrl (4 consecutive starting from this value) */
    wxID_FILECTRL = 5950,

    wxID_HIGHEST = 5999
};

/*  ---------------------------------------------------------------------------- */
/*  wxWindowID type (after wxID_XYZ enum, platform detection, and dlimpexp.h)    */
/*  ---------------------------------------------------------------------------- */

/*  special care should be taken with this type under Windows where the real */
/*  window id is unsigned, so we must always do the cast before comparing them */
/*  (or else they would be always different!). Using wxGetWindowId() which does */
/*  the cast itself is recommended. Note that this type can't be unsigned */
/*  because wxID_ANY == -1 is a valid (and largely used) value for window id. */
                                     
                            
      

/*  ---------------------------------------------------------------------------- */
/*  other constants */
/*  ---------------------------------------------------------------------------- */

/*  menu and toolbar item kinds */
enum wxItemKind
{
    wxITEM_SEPARATOR = -1,
    wxITEM_NORMAL,
    wxITEM_CHECK,
    wxITEM_RADIO,
    wxITEM_DROPDOWN,
    wxITEM_MAX
};

/*
 * The possible states of a 3-state checkbox (Compatible
 * with the 2-state checkbox).
 */
enum wxCheckBoxState
{
    wxCHK_UNCHECKED,
    wxCHK_CHECKED,
    wxCHK_UNDETERMINED /* 3-state checkbox only */
};


/*  hit test results */
enum wxHitTest
{
    wxHT_NOWHERE,

    /*  scrollbar */
    wxHT_SCROLLBAR_FIRST = wxHT_NOWHERE,
    wxHT_SCROLLBAR_ARROW_LINE_1,    /*  left or upper arrow to scroll by line */
    wxHT_SCROLLBAR_ARROW_LINE_2,    /*  right or down */
    wxHT_SCROLLBAR_ARROW_PAGE_1,    /*  left or upper arrow to scroll by page */
    wxHT_SCROLLBAR_ARROW_PAGE_2,    /*  right or down */
    wxHT_SCROLLBAR_THUMB,           /*  on the thumb */
    wxHT_SCROLLBAR_BAR_1,           /*  bar to the left/above the thumb */
    wxHT_SCROLLBAR_BAR_2,           /*  bar to the right/below the thumb */
    wxHT_SCROLLBAR_LAST,

    /*  window */
    wxHT_WINDOW_OUTSIDE,            /*  not in this window at all */
    wxHT_WINDOW_INSIDE,             /*  in the client area */
    wxHT_WINDOW_VERT_SCROLLBAR,     /*  on the vertical scrollbar */
    wxHT_WINDOW_HORZ_SCROLLBAR,     /*  on the horizontal scrollbar */
    wxHT_WINDOW_CORNER,             /*  on the corner between 2 scrollbars */

    wxHT_MAX
};

/*  ---------------------------------------------------------------------------- */
/*  Possible SetSize flags */
/*  ---------------------------------------------------------------------------- */

/*  Use internally-calculated width if -1 */
                                      
/*  Use internally-calculated height if -1 */
                                      
/*  Use internally-calculated width and height if each is -1 */
                                                                      
/*  Ignore missing (-1) dimensions (use existing). */
/*  For readability only: test for wxSIZE_AUTO_WIDTH/HEIGHT in code. */
                                      
/*  Allow -1 as a valid position */
                                      
/*  Don't do parent client adjustments (for implementation only) */
                                      
/*  Change the window position even if it seems to be already correct */
                                      
/*  Emit size event even if size didn't change */
                                      

/*  ---------------------------------------------------------------------------- */
/*  GDI descriptions */
/*  ---------------------------------------------------------------------------- */

// Hatch styles used by both pen and brush styles.
//
// NB: Do not use these constants directly, they're for internal use only, use
//     wxBRUSHSTYLE_XXX_HATCH and wxPENSTYLE_XXX_HATCH instead.
enum wxHatchStyle
{
    wxHATCHSTYLE_INVALID = -1,

    /*
        The value of the first style is chosen to fit with
        wxDeprecatedGUIConstants values below, don't change it.
     */
    wxHATCHSTYLE_FIRST = 111,
    wxHATCHSTYLE_BDIAGONAL = wxHATCHSTYLE_FIRST,
    wxHATCHSTYLE_CROSSDIAG,
    wxHATCHSTYLE_FDIAGONAL,
    wxHATCHSTYLE_CROSS,
    wxHATCHSTYLE_HORIZONTAL,
    wxHATCHSTYLE_VERTICAL,
    wxHATCHSTYLE_LAST = wxHATCHSTYLE_VERTICAL
};

/*
    WARNING: the following styles are deprecated; use the
             wxFontFamily, wxFontStyle, wxFontWeight, wxBrushStyle,
             wxPenStyle, wxPenCap, wxPenJoin enum values instead!
*/

                                  

/* don't use any elements of this enum in the new code */
enum wxDeprecatedGUIConstants
{
    /*  Text font families */
    wxDEFAULT    = 70,
    wxDECORATIVE,
    wxROMAN,
    wxSCRIPT,
    wxSWISS,
    wxMODERN,
    wxTELETYPE,  /* @@@@ */

    /*  Proportional or Fixed width fonts (not yet used) */
    wxVARIABLE   = 80,
    wxFIXED,

    wxNORMAL     = 90,
    wxLIGHT,
    wxBOLD,
    /*  Also wxNORMAL for normal (non-italic text) */
    wxITALIC,
    wxSLANT,

    /*  Pen styles */
    wxSOLID      =   100,
    wxDOT,
    wxLONG_DASH,
    wxSHORT_DASH,
    wxDOT_DASH,
    wxUSER_DASH,

    wxTRANSPARENT,

    /*  Brush & Pen Stippling. Note that a stippled pen cannot be dashed!! */
    /*  Note also that stippling a Pen IS meaningful, because a Line is */
    wxSTIPPLE_MASK_OPAQUE, /* mask is used for blitting monochrome using text fore and back ground colors */
    wxSTIPPLE_MASK,        /* mask is used for masking areas in the stipple bitmap (TO DO) */
    /*  drawn with a Pen, and without any Brush -- and it can be stippled. */
    wxSTIPPLE =          110,

    wxBDIAGONAL_HATCH = wxHATCHSTYLE_BDIAGONAL,
    wxCROSSDIAG_HATCH = wxHATCHSTYLE_CROSSDIAG,
    wxFDIAGONAL_HATCH = wxHATCHSTYLE_FDIAGONAL,
    wxCROSS_HATCH = wxHATCHSTYLE_CROSS,
    wxHORIZONTAL_HATCH = wxHATCHSTYLE_HORIZONTAL,
    wxVERTICAL_HATCH = wxHATCHSTYLE_VERTICAL,
    wxFIRST_HATCH = wxHATCHSTYLE_FIRST,
    wxLAST_HATCH = wxHATCHSTYLE_LAST
};
      

/*  ToolPanel in wxFrame (VZ: unused?) */
enum
{
    wxTOOL_TOP = 1,
    wxTOOL_BOTTOM,
    wxTOOL_LEFT,
    wxTOOL_RIGHT
};

/*  the values of the format constants should be the same as corresponding */
/*  CF_XXX constants in Windows API */
enum wxDataFormatId
{
    wxDF_INVALID =          0,
    wxDF_TEXT =             1,  /* CF_TEXT */
    wxDF_BITMAP =           2,  /* CF_BITMAP */
    wxDF_METAFILE =         3,  /* CF_METAFILEPICT */
    wxDF_SYLK =             4,
    wxDF_DIF =              5,
    wxDF_TIFF =             6,
    wxDF_OEMTEXT =          7,  /* CF_OEMTEXT */
    wxDF_DIB =              8,  /* CF_DIB */
    wxDF_PALETTE =          9,
    wxDF_PENDATA =          10,
    wxDF_RIFF =             11,
    wxDF_WAVE =             12,
    wxDF_UNICODETEXT =      13,
    wxDF_ENHMETAFILE =      14,
    wxDF_FILENAME =         15, /* CF_HDROP */
    wxDF_LOCALE =           16,
    wxDF_PRIVATE =          20,
    wxDF_HTML =             30, /* Note: does not correspond to CF_ constant */
    wxDF_MAX
};

/* Key codes */
enum wxKeyCode
{
    WXK_NONE    =    0,

    WXK_CONTROL_A = 1,
    WXK_CONTROL_B,
    WXK_CONTROL_C,
    WXK_CONTROL_D,
    WXK_CONTROL_E,
    WXK_CONTROL_F,
    WXK_CONTROL_G,
    WXK_CONTROL_H,
    WXK_CONTROL_I,
    WXK_CONTROL_J,
    WXK_CONTROL_K,
    WXK_CONTROL_L,
    WXK_CONTROL_M,
    WXK_CONTROL_N,
    WXK_CONTROL_O,
    WXK_CONTROL_P,
    WXK_CONTROL_Q,
    WXK_CONTROL_R,
    WXK_CONTROL_S,
    WXK_CONTROL_T,
    WXK_CONTROL_U,
    WXK_CONTROL_V,
    WXK_CONTROL_W,
    WXK_CONTROL_X,
    WXK_CONTROL_Y,
    WXK_CONTROL_Z,

    WXK_BACK    =    8, /* backspace */
    WXK_TAB     =    9,
    WXK_RETURN  =    13,
    WXK_ESCAPE  =    27,

    /* values from 33 to 126 are reserved for the standard ASCII characters */

    WXK_SPACE   =    32,
    WXK_DELETE  =    127,

    /* values from 128 to 255 are reserved for ASCII extended characters
       (note that there isn't a single fixed standard for the meaning
       of these values; avoid them in portable apps!) */

    /* These are not compatible with unicode characters.
       If you want to get a unicode character from a key event, use
       wxKeyEvent::GetUnicodeKey                                    */
    WXK_START   = 300,
    WXK_LBUTTON,
    WXK_RBUTTON,
    WXK_CANCEL,
    WXK_MBUTTON,
    WXK_CLEAR,
    WXK_SHIFT,
    WXK_ALT,
    WXK_CONTROL,
    WXK_MENU,
    WXK_PAUSE,
    WXK_CAPITAL,
    WXK_END,
    WXK_HOME,
    WXK_LEFT,
    WXK_UP,
    WXK_RIGHT,
    WXK_DOWN,
    WXK_SELECT,
    WXK_PRINT,
    WXK_EXECUTE,
    WXK_SNAPSHOT,
    WXK_INSERT,
    WXK_HELP,
    WXK_NUMPAD0,
    WXK_NUMPAD1,
    WXK_NUMPAD2,
    WXK_NUMPAD3,
    WXK_NUMPAD4,
    WXK_NUMPAD5,
    WXK_NUMPAD6,
    WXK_NUMPAD7,
    WXK_NUMPAD8,
    WXK_NUMPAD9,
    WXK_MULTIPLY,
    WXK_ADD,
    WXK_SEPARATOR,
    WXK_SUBTRACT,
    WXK_DECIMAL,
    WXK_DIVIDE,
    WXK_F1,
    WXK_F2,
    WXK_F3,
    WXK_F4,
    WXK_F5,
    WXK_F6,
    WXK_F7,
    WXK_F8,
    WXK_F9,
    WXK_F10,
    WXK_F11,
    WXK_F12,
    WXK_F13,
    WXK_F14,
    WXK_F15,
    WXK_F16,
    WXK_F17,
    WXK_F18,
    WXK_F19,
    WXK_F20,
    WXK_F21,
    WXK_F22,
    WXK_F23,
    WXK_F24,
    WXK_NUMLOCK,
    WXK_SCROLL,
    WXK_PAGEUP,
    WXK_PAGEDOWN,
                           
                           
                             
      

    WXK_NUMPAD_SPACE,
    WXK_NUMPAD_TAB,
    WXK_NUMPAD_ENTER,
    WXK_NUMPAD_F1,
    WXK_NUMPAD_F2,
    WXK_NUMPAD_F3,
    WXK_NUMPAD_F4,
    WXK_NUMPAD_HOME,
    WXK_NUMPAD_LEFT,
    WXK_NUMPAD_UP,
    WXK_NUMPAD_RIGHT,
    WXK_NUMPAD_DOWN,
    WXK_NUMPAD_PAGEUP,
    WXK_NUMPAD_PAGEDOWN,
                           
                                         
                                           
      
    WXK_NUMPAD_END,
    WXK_NUMPAD_BEGIN,
    WXK_NUMPAD_INSERT,
    WXK_NUMPAD_DELETE,
    WXK_NUMPAD_EQUAL,
    WXK_NUMPAD_MULTIPLY,
    WXK_NUMPAD_ADD,
    WXK_NUMPAD_SEPARATOR,
    WXK_NUMPAD_SUBTRACT,
    WXK_NUMPAD_DECIMAL,
    WXK_NUMPAD_DIVIDE,

    WXK_WINDOWS_LEFT,
    WXK_WINDOWS_RIGHT,
    WXK_WINDOWS_MENU ,
                
                    
     
    WXK_RAW_CONTROL = WXK_CONTROL,
      
    WXK_COMMAND = WXK_CONTROL,

    /* Hardware-specific buttons */
    WXK_SPECIAL1 = 193,
    WXK_SPECIAL2,
    WXK_SPECIAL3,
    WXK_SPECIAL4,
    WXK_SPECIAL5,
    WXK_SPECIAL6,
    WXK_SPECIAL7,
    WXK_SPECIAL8,
    WXK_SPECIAL9,
    WXK_SPECIAL10,
    WXK_SPECIAL11,
    WXK_SPECIAL12,
    WXK_SPECIAL13,
    WXK_SPECIAL14,
    WXK_SPECIAL15,
    WXK_SPECIAL16,
    WXK_SPECIAL17,
    WXK_SPECIAL18,
    WXK_SPECIAL19,
    WXK_SPECIAL20
};

/* This enum contains bit mask constants used in wxKeyEvent */
enum wxKeyModifier
{
    wxMOD_NONE      = 0x0000,
    wxMOD_ALT       = 0x0001,
    wxMOD_CONTROL   = 0x0002,
    wxMOD_ALTGR     = wxMOD_ALT | wxMOD_CONTROL,
    wxMOD_SHIFT     = 0x0004,
    wxMOD_META      = 0x0008,
    wxMOD_WIN       = wxMOD_META,
                                              
                               
     
    wxMOD_RAW_CONTROL = wxMOD_CONTROL,
      
    wxMOD_CMD       = wxMOD_CONTROL,
    wxMOD_ALL       = 0xffff
};

/* Shortcut for easier dialog-unit-to-pixel conversion */
                                                                

/* Paper types */
typedef enum
{
    wxPAPER_NONE,               /*  Use specific dimensions */
    wxPAPER_LETTER,             /*  Letter, 8 1/2 by 11 inches */
    wxPAPER_LEGAL,              /*  Legal, 8 1/2 by 14 inches */
    wxPAPER_A4,                 /*  A4 Sheet, 210 by 297 millimeters */
    wxPAPER_CSHEET,             /*  C Sheet, 17 by 22 inches */
    wxPAPER_DSHEET,             /*  D Sheet, 22 by 34 inches */
    wxPAPER_ESHEET,             /*  E Sheet, 34 by 44 inches */
    wxPAPER_LETTERSMALL,        /*  Letter Small, 8 1/2 by 11 inches */
    wxPAPER_TABLOID,            /*  Tabloid, 11 by 17 inches */
    wxPAPER_LEDGER,             /*  Ledger, 17 by 11 inches */
    wxPAPER_STATEMENT,          /*  Statement, 5 1/2 by 8 1/2 inches */
    wxPAPER_EXECUTIVE,          /*  Executive, 7 1/4 by 10 1/2 inches */
    wxPAPER_A3,                 /*  A3 sheet, 297 by 420 millimeters */
    wxPAPER_A4SMALL,            /*  A4 small sheet, 210 by 297 millimeters */
    wxPAPER_A5,                 /*  A5 sheet, 148 by 210 millimeters */
    wxPAPER_B4,                 /*  B4 sheet, 250 by 354 millimeters */
    wxPAPER_B5,                 /*  B5 sheet, 182-by-257-millimeter paper */
    wxPAPER_FOLIO,              /*  Folio, 8-1/2-by-13-inch paper */
    wxPAPER_QUARTO,             /*  Quarto, 215-by-275-millimeter paper */
    wxPAPER_10X14,              /*  10-by-14-inch sheet */
    wxPAPER_11X17,              /*  11-by-17-inch sheet */
    wxPAPER_NOTE,               /*  Note, 8 1/2 by 11 inches */
    wxPAPER_ENV_9,              /*  #9 Envelope, 3 7/8 by 8 7/8 inches */
    wxPAPER_ENV_10,             /*  #10 Envelope, 4 1/8 by 9 1/2 inches */
    wxPAPER_ENV_11,             /*  #11 Envelope, 4 1/2 by 10 3/8 inches */
    wxPAPER_ENV_12,             /*  #12 Envelope, 4 3/4 by 11 inches */
    wxPAPER_ENV_14,             /*  #14 Envelope, 5 by 11 1/2 inches */
    wxPAPER_ENV_DL,             /*  DL Envelope, 110 by 220 millimeters */
    wxPAPER_ENV_C5,             /*  C5 Envelope, 162 by 229 millimeters */
    wxPAPER_ENV_C3,             /*  C3 Envelope, 324 by 458 millimeters */
    wxPAPER_ENV_C4,             /*  C4 Envelope, 229 by 324 millimeters */
    wxPAPER_ENV_C6,             /*  C6 Envelope, 114 by 162 millimeters */
    wxPAPER_ENV_C65,            /*  C65 Envelope, 114 by 229 millimeters */
    wxPAPER_ENV_B4,             /*  B4 Envelope, 250 by 353 millimeters */
    wxPAPER_ENV_B5,             /*  B5 Envelope, 176 by 250 millimeters */
    wxPAPER_ENV_B6,             /*  B6 Envelope, 176 by 125 millimeters */
    wxPAPER_ENV_ITALY,          /*  Italy Envelope, 110 by 230 millimeters */
    wxPAPER_ENV_MONARCH,        /*  Monarch Envelope, 3 7/8 by 7 1/2 inches */
    wxPAPER_ENV_PERSONAL,       /*  6 3/4 Envelope, 3 5/8 by 6 1/2 inches */
    wxPAPER_FANFOLD_US,         /*  US Std Fanfold, 14 7/8 by 11 inches */
    wxPAPER_FANFOLD_STD_GERMAN, /*  German Std Fanfold, 8 1/2 by 12 inches */
    wxPAPER_FANFOLD_LGL_GERMAN, /*  German Legal Fanfold, 8 1/2 by 13 inches */

    wxPAPER_ISO_B4,             /*  B4 (ISO) 250 x 353 mm */
    wxPAPER_JAPANESE_POSTCARD,  /*  Japanese Postcard 100 x 148 mm */
    wxPAPER_9X11,               /*  9 x 11 in */
    wxPAPER_10X11,              /*  10 x 11 in */
    wxPAPER_15X11,              /*  15 x 11 in */
    wxPAPER_ENV_INVITE,         /*  Envelope Invite 220 x 220 mm */
    wxPAPER_LETTER_EXTRA,       /*  Letter Extra 9 \275 x 12 in */
    wxPAPER_LEGAL_EXTRA,        /*  Legal Extra 9 \275 x 15 in */
    wxPAPER_TABLOID_EXTRA,      /*  Tabloid Extra 11.69 x 18 in */
    wxPAPER_A4_EXTRA,           /*  A4 Extra 9.27 x 12.69 in */
    wxPAPER_LETTER_TRANSVERSE,  /*  Letter Transverse 8 \275 x 11 in */
    wxPAPER_A4_TRANSVERSE,      /*  A4 Transverse 210 x 297 mm */
    wxPAPER_LETTER_EXTRA_TRANSVERSE, /*  Letter Extra Transverse 9\275 x 12 in */
    wxPAPER_A_PLUS,             /*  SuperA/SuperA/A4 227 x 356 mm */
    wxPAPER_B_PLUS,             /*  SuperB/SuperB/A3 305 x 487 mm */
    wxPAPER_LETTER_PLUS,        /*  Letter Plus 8.5 x 12.69 in */
    wxPAPER_A4_PLUS,            /*  A4 Plus 210 x 330 mm */
    wxPAPER_A5_TRANSVERSE,      /*  A5 Transverse 148 x 210 mm */
    wxPAPER_B5_TRANSVERSE,      /*  B5 (JIS) Transverse 182 x 257 mm */
    wxPAPER_A3_EXTRA,           /*  A3 Extra 322 x 445 mm */
    wxPAPER_A5_EXTRA,           /*  A5 Extra 174 x 235 mm */
    wxPAPER_B5_EXTRA,           /*  B5 (ISO) Extra 201 x 276 mm */
    wxPAPER_A2,                 /*  A2 420 x 594 mm */
    wxPAPER_A3_TRANSVERSE,      /*  A3 Transverse 297 x 420 mm */
    wxPAPER_A3_EXTRA_TRANSVERSE, /*  A3 Extra Transverse 322 x 445 mm */

    wxPAPER_DBL_JAPANESE_POSTCARD,/* Japanese Double Postcard 200 x 148 mm */
    wxPAPER_A6,                 /* A6 105 x 148 mm */
    wxPAPER_JENV_KAKU2,         /* Japanese Envelope Kaku #2 */
    wxPAPER_JENV_KAKU3,         /* Japanese Envelope Kaku #3 */
    wxPAPER_JENV_CHOU3,         /* Japanese Envelope Chou #3 */
    wxPAPER_JENV_CHOU4,         /* Japanese Envelope Chou #4 */
    wxPAPER_LETTER_ROTATED,     /* Letter Rotated 11 x 8 1/2 in */
    wxPAPER_A3_ROTATED,         /* A3 Rotated 420 x 297 mm */
    wxPAPER_A4_ROTATED,         /* A4 Rotated 297 x 210 mm */
    wxPAPER_A5_ROTATED,         /* A5 Rotated 210 x 148 mm */
    wxPAPER_B4_JIS_ROTATED,     /* B4 (JIS) Rotated 364 x 257 mm */
    wxPAPER_B5_JIS_ROTATED,     /* B5 (JIS) Rotated 257 x 182 mm */
    wxPAPER_JAPANESE_POSTCARD_ROTATED,/* Japanese Postcard Rotated 148 x 100 mm */
    wxPAPER_DBL_JAPANESE_POSTCARD_ROTATED,/* Double Japanese Postcard Rotated 148 x 200 mm */
    wxPAPER_A6_ROTATED,         /* A6 Rotated 148 x 105 mm */
    wxPAPER_JENV_KAKU2_ROTATED, /* Japanese Envelope Kaku #2 Rotated */
    wxPAPER_JENV_KAKU3_ROTATED, /* Japanese Envelope Kaku #3 Rotated */
    wxPAPER_JENV_CHOU3_ROTATED, /* Japanese Envelope Chou #3 Rotated */
    wxPAPER_JENV_CHOU4_ROTATED, /* Japanese Envelope Chou #4 Rotated */
    wxPAPER_B6_JIS,             /* B6 (JIS) 128 x 182 mm */
    wxPAPER_B6_JIS_ROTATED,     /* B6 (JIS) Rotated 182 x 128 mm */
    wxPAPER_12X11,              /* 12 x 11 in */
    wxPAPER_JENV_YOU4,          /* Japanese Envelope You #4 */
    wxPAPER_JENV_YOU4_ROTATED,  /* Japanese Envelope You #4 Rotated */
    wxPAPER_P16K,               /* PRC 16K 146 x 215 mm */
    wxPAPER_P32K,               /* PRC 32K 97 x 151 mm */
    wxPAPER_P32KBIG,            /* PRC 32K(Big) 97 x 151 mm */
    wxPAPER_PENV_1,             /* PRC Envelope #1 102 x 165 mm */
    wxPAPER_PENV_2,             /* PRC Envelope #2 102 x 176 mm */
    wxPAPER_PENV_3,             /* PRC Envelope #3 125 x 176 mm */
    wxPAPER_PENV_4,             /* PRC Envelope #4 110 x 208 mm */
    wxPAPER_PENV_5,             /* PRC Envelope #5 110 x 220 mm */
    wxPAPER_PENV_6,             /* PRC Envelope #6 120 x 230 mm */
    wxPAPER_PENV_7,             /* PRC Envelope #7 160 x 230 mm */
    wxPAPER_PENV_8,             /* PRC Envelope #8 120 x 309 mm */
    wxPAPER_PENV_9,             /* PRC Envelope #9 229 x 324 mm */
    wxPAPER_PENV_10,            /* PRC Envelope #10 324 x 458 mm */
    wxPAPER_P16K_ROTATED,       /* PRC 16K Rotated */
    wxPAPER_P32K_ROTATED,       /* PRC 32K Rotated */
    wxPAPER_P32KBIG_ROTATED,    /* PRC 32K(Big) Rotated */
    wxPAPER_PENV_1_ROTATED,     /* PRC Envelope #1 Rotated 165 x 102 mm */
    wxPAPER_PENV_2_ROTATED,     /* PRC Envelope #2 Rotated 176 x 102 mm */
    wxPAPER_PENV_3_ROTATED,     /* PRC Envelope #3 Rotated 176 x 125 mm */
    wxPAPER_PENV_4_ROTATED,     /* PRC Envelope #4 Rotated 208 x 110 mm */
    wxPAPER_PENV_5_ROTATED,     /* PRC Envelope #5 Rotated 220 x 110 mm */
    wxPAPER_PENV_6_ROTATED,     /* PRC Envelope #6 Rotated 230 x 120 mm */
    wxPAPER_PENV_7_ROTATED,     /* PRC Envelope #7 Rotated 230 x 160 mm */
    wxPAPER_PENV_8_ROTATED,     /* PRC Envelope #8 Rotated 309 x 120 mm */
    wxPAPER_PENV_9_ROTATED,     /* PRC Envelope #9 Rotated 324 x 229 mm */
    wxPAPER_PENV_10_ROTATED,    /* PRC Envelope #10 Rotated 458 x 324 m */
    wxPAPER_A0,                 /* A0 Sheet 841 x 1189 mm */
    wxPAPER_A1                  /* A1 Sheet 594 x 841 mm */
} wxPaperSize;

/* Printing orientation */
enum wxPrintOrientation
{
   wxPORTRAIT = 1,
   wxLANDSCAPE
};

/* Duplex printing modes
 */

enum wxDuplexMode
{
    wxDUPLEX_SIMPLEX, /*  Non-duplex */
    wxDUPLEX_HORIZONTAL,
    wxDUPLEX_VERTICAL
};

/* Print quality.
 */

                                  
                                  
                                  
                                  

typedef int wxPrintQuality;

/* Print mode (currently PostScript only)
 */

enum wxPrintMode
{
    wxPRINT_MODE_NONE =    0,
    wxPRINT_MODE_PREVIEW = 1,   /*  Preview in external application */
    wxPRINT_MODE_FILE =    2,   /*  Print to file */
    wxPRINT_MODE_PRINTER = 3,   /*  Send to printer */
    wxPRINT_MODE_STREAM =  4    /*  Send postscript data into a stream */
};

/*  ---------------------------------------------------------------------------- */
/*  UpdateWindowUI flags */
/*  ---------------------------------------------------------------------------- */

enum wxUpdateUI
{
    wxUPDATE_UI_NONE          = 0x0000,
    wxUPDATE_UI_RECURSE       = 0x0001,
    wxUPDATE_UI_FROMIDLE      = 0x0002 /*  Invoked from On(Internal)Idle */
};


/* ---------------------------------------------------------------------------- */
/* wxList types */
/* ---------------------------------------------------------------------------- */

/* type of compare function for list sort operation (as in 'qsort'): it should
   return a negative value, 0 or positive value if the first element is less
   than, equal or greater than the second */

typedef int (*  wxSortCompareFunction)(const void *elem1, const void *elem2);

/* wxList iterator function */
typedef int (*  wxListIterateFunction)(void *current);


/*  ---------------------------------------------------------------------------- */
/*  miscellaneous */
/*  ---------------------------------------------------------------------------- */

/*  define this macro if font handling is done using the X font names */
                                                                   
                          
      

/*  macro to specify "All Files" on different platforms */
                                           
                                        
                                                                 
     
                                      
                                                             
      

                                             
                                                     
           
                                                                            
                                                                            
                                                                               
                 
            
                                   
                   
                  
      
      

/*  --------------------------------------------------------------------------- */
/*  macros that enable wxWidgets apps to be compiled in absence of the */
/*  system headers, although some platform specific types are used in the */
/*  platform specific (implementation) parts of the headers */
/*  --------------------------------------------------------------------------- */

                 
                                                                              
                                                                                          
      

                

                                                    

                              
                              
                              
                               
                           
                               
                                      
                                          
                                    

                               
                                
                               

                                                  
                    
                                           
                                          
                                                      
                                                  
      

                              

  
                  
   

                               

                                                    

                                            
                                               

                                             
                                          
                                                    

                                                                          

                                     
                                     
                                       
                                    

                                 
                                   
                            

  
         
   

                                            
                                             

                                                                           

                                         
                                   
                                   

                         
                          
                    
                        
      

      

                                                

                                     
                                                                    
                                                                           
                                                   
                                                                            
                                                                      
   

                                                                         
                                                           
   
                                 
                           
     
                          
      

                                                                                            
                       
                                 
     
                      
                                
      

                                 
                                                                         
                                                           
   

                                                                                
                                             
                                                                         
                                                                     
                                                                       
                                                                    
                                                                      
                                                                        
                                                                     
                                                                  
                                    
  
                     
                                                                                 


                                  
                                                                          

                               

                            
                                                                 
                                            
                                                                            
                                                                           
                                                                         
                                                                            
                                                                                


                                                       

                                          
                                             
                                  
                                     
                                    
                                         
                                      
                                     
                                    
                                   
                                             
                                        
                                    
                                            
                                   
                                        
                                       
                                           
                                           
                                     
                                    
                                        
                                         
                                    
                                         
                                          
                                        
                                            
                                        
                                          
                                     
                                     
                                   
                                            
                                                
                                          
                 
                                                            
      
       /*  __WXCOCOA__  || ( __WXMAC__ &__DARWIN__)*/

                

                                     

                   

                             
                           
                          
                                               
                                       

                      

                                     
                                   
                                   
                                    
                                    
                                  
                                        

                             
                           
                                   
                                     

      

       /* __WXMAC__ */

/* ABX: check __WIN32__ instead of __WXMSW__ for the same MSWBase in any Win32 port */
                      

                                                                       

                 
                                                                          
     
                                                               
      

                       
                            
                             
                             
                             
                            
                              
                                
                               
                            
                               
                              
                                 
                               
                                  
                               
                           
                              

                            

                               
                                
                               

                                   
                                  
                              
                                
                               
                                    

                                         
                                            
                                         

                
                                 
      

                
                                    
                                    
                                     
     
                                    
                                    
                                     
      

                                                    
                                       
     
                                                 
      
       /*  __WIN32__ */


                    
                              
                             
      

                                         
               
                                                                 
                               
                                 
                                
                                
                                
                               
                                 
                                   
                                  
                               
                                 
                                    
                                  
                                  
                              
                               
                                
                               

                                   
                              
                                    

                                         
                                            
                                         

                                 
      
              
                                       
                                           
                              
                              
     
                              
                              
      
                             
                              
                                    
                                    

                                 
                                
                                 
                                             
                                             
                               
                              
                              
                              
                             
                               
                                 
                                
                                  
                                   
                                
       /*  WXPM || EMX */

                      
                                        

                                                                                               
                                                                                                            

                               
                                                     
                                                                      
                                             
                                                                   
                                                      
                                            
                              
 
              
                
               
                
               
                            
 
                    
                       
                         
             

                                                                           
                                                                                       
                                                                               
     
                                         
               
      
                                                                           
      

       /* __WXPM__ */


                                              
                                    
                                 
                                 
                                     
                                   
                                
                                  
                                
                                 
                                 
                                        
                             
                                 
                               
                                
                                   
                                  
                                    
                                      
                                                                              
                                 

                                                                           
                                                                           

       /*  Motif */

                

                              
                              

                             
                                         
                                          
                                               

                        
                                     
     
                                  
      

                        
                                            
                                    
                                
                                        
      

                       
                                        
                          
                                          
                                          
     
                                        
                                        
                                        
      

                             
                                            
                                             
                                                
                                             
                                              
                                                  
                                                
                                                   
                                                
                                           
                                                  

                            

                   
                                                                
                                             
      

       /*  __WXGTK__ */

                                                                 
                     
     
                     
      

               
                               
                                                  
                                                 
                                                          
      

                
                                                              
                         
                             
       /*  DFB */

/*  This is required because of clashing macros in windows.h, which may be */
/*  included before or after wxWidgets classes, and therefore must be */
/*  disabled here before any significant wxWidgets headers are included. */
                  
                  
                            
       /* __WINDOWS__ */
       /* __cplusplus */


/*  include the feature test macros */
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/features.h" 0
/**
*  Name:        wx/features.h
*  Purpose:     test macros for the features which might be available in some
*               wxWidgets ports but not others
*  Author:      Vadim Zeitlin
*  Modified by: Ryan Norton (Converted to C)
*  Created:     18.03.02
*  Copyright:   (c) 2002 Vadim Zeitlin <vadim@wxwidgets.org>
*  Licence:     wxWindows licence
*/

/* THIS IS A C FILE, DON'T USE C++ FEATURES (IN PARTICULAR COMMENTS) IN IT */

                       
                       

/*  radio menu items are currently not implemented in wxMotif, use this
    symbol (kept for compatibility from the time when they were not implemented
    under other platforms as well) to test for this */
                         
                                  
     
                                 
      

/*  the raw keyboard codes are generated under wxGTK and wxMSW only */
                                                                                            

                               
     
                              
      

/*  taskbar is implemented in the major ports */
                                                                                                                                                                            


                               
     
                            
                               
                              
      

/*  wxIconLocation appeared in the middle of 2.5.0 so it's handy to have a */
/*  separate define for it */
                           

/*  same for wxCrashReport */
                
                              
     
                             
      

/*  wxRE_ADVANCED is not always available, depending on regex library used
 *  (it's unavailable only if compiling via configure against system library) */
                            
                                
     
                               
      

/* Pango-based ports and wxDFB use UTF-8 for text and font encodings
 * internally and so their fonts can handle any encodings: */
                                     
                            
      

/* This is defined when the underlying toolkit handles tab traversal natively.
   Otherwise we implement it ourselves in wxControlContainer. */
                  
                                      
      

/* This is defined when the compiler provides some type of extended locale
   functions.  Otherwise, we implement them ourselves to only support the
   'C' locale */
                                                                                       

                                 
     
                                
      

/* Direct access to bitmap data is not implemented in all ports yet */
                                                                                                  


      
                                                                
                            
                      
       
                                                                                            

                                
          
      

/* also define deprecated synonym which exists for compatibility only */
                       
                             
      

/*
   If this is defined, wxEvtHandler::Bind<>() is available (not all compilers
   have the required template support for this and in particular under Windows
   where only g++ and MSVC >= 7 currently support it.

   Recent Sun CC versions support this but perhaps older ones can compile this
   code too, adjust the version check if this is the case (unfortunately we
   can't easily test for the things used in wx/event.h in configure so we have
   to maintain these checks manually). The same applies to xlC 7: perhaps
   earlier versions can compile this code too but they were not tested.
 */
                                                                                                                                                                                                   



                            
      


       /*  _WX_FEATURES_H_ */


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/defs.h" 4175

/*  --------------------------------------------------------------------------- */
/*  macros to define a class without copy ctor nor assignment operator */
/*  --------------------------------------------------------------------------- */

                                                                                                                                                                                              




                                                                                                                                                                                                                                 




                                                                                                                                                                                                                                                                




                                                                                                                                              



/* deprecated variants _not_ requiring a semicolon after them */
                                                                                

                                                                                                            

                                                                                    


/*  --------------------------------------------------------------------------- */
/*  If a manifest is being automatically generated, add common controls 6 to it */
/*  --------------------------------------------------------------------------- */

                                                                                                                                           



                                                                                                                                                                                                                                                                                                                    







                   
           
                    
           
                     
           
     
           
      

       /* !wxUSE_NO_MANIFEST && _MSC_FULL_VER >= 140040130 */

/* wxThread and wxProcess priorities */
enum
{
    wxPRIORITY_MIN     = 0u,   /* lowest possible priority */
    wxPRIORITY_DEFAULT = 50u,  /* normal priority */
    wxPRIORITY_MAX     = 100u  /* highest possible priority */
};

      
    /*  _WX_DEFS_H_ */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\include\wx/dnd.h" 25

                       

                       
                      

                                                                               
            
                                                                               

                                       
  
                                                                          
                                                                        
    
 
                                                 
                                                                       
                                                                      
  

                                            
                 
 
                                                                        
                                                         
                                                       
                                                                 
                                               
                                                                         
  

                                                                               
                                            
                                                         

                                                                               
                                                                            
                                        
                                                                               

                                       
 
       
                                                               
                                                               
                                                               
                                   
                                   
                                  
                          
                                   

                                                         
                                    
                         

                                 
                        

                                                      
                                                            
     
                                
                                  
                                     
                                  
            
                                  
     

                                                                            
      
                                                                            
                                                                              
                                              
                                                                     

                                                                          
                                                                              
                                
                                                                              

          
                                                     
     
                                
                                
                                     
                                
            
                                
     

                              
                         

                                      
                          
                          
                          

                                              
  

                                                                               
                                                                            
                                  
  
                                                                       
                                                                              
                                                                          
                                                                            
                      
                                                                               

                                       
 
       
                                                                              
                                                                            
                                               
                                                     
                                                                    
                                   
                               
                                

                                          
                                       
                                
                                                
                                                
                                

                                                                             
                                                                          
                                                       
      
                                                                              
                                                                              
                                                                           
                                                                            

                                                                          
                                                                        
                                         

                                                                         
                                                            
                                                                             
                                                     
                       

                                                                       
                                            
                              

                                                                              
                                                                              
                                          
                                                  

                                                                     
                                                                              
                                                                              
                                                                              
                             
                                                                            

                                                                           
                                                            
                               

                                                 
                                                                         
                                                                      
                                                                     
                                              
                                     

                                                  
                                       
                                   
                                   

          
                               
                                 

                                              
  

                                                                               
                                                
                                                                               

                      
                                   
                                   
                          
                             
                        
                           
                          
                           
                        
                            
                        
                           
                       
                           
      

                                                                               
                                                                            
                                                                               

                                                                      
                                                 
                                                             
 
       
                       

                                                                            

                                                                        

        
                                              
  

                                                                            
                                                             
 
       
                       

                                                                     
                                                  
                                                                 

                                                                        

        
                                              
  

       // wxUSE_DRAG_AND_DROP

       // _WX_DND_H_BASE_

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\filezilla-3.7.3\src\interface\listctrlex.h" 5

class wxListCtrlEx : public wxListCtrl, public CSystemImageList
{
public:
	wxListCtrlEx(wxWindow *parent,
		wxWindowID id = wxID_ANY,
		const wxPoint& pos = wxDefaultPosition,
		const wxSize& size = wxDefaultSize,
		long style = wxLC_ICON,
		const wxValidator& validator = wxDefaultValidator,
		const wxString& name = wxListCtrlNameStr);
	~wxListCtrlEx();

	// Ensure that the given item is the first in the list
	void ScrollTopItem(int item);

	void EnablePrefixSearch(bool enable) { m_prefixSearch_enabled = enable; }

	// Reducing item count does not reset the focused item
	// if using the generic list control. Work around it.
	void SaveSetItemCount(long count);

	void ShowColumnEditor();

	void ShowColumn(unsigned int col, bool show);

	// Moves column. Target position includes both hidden
	// as well as shown columns
	void MoveColumn(unsigned int col, unsigned int before);

	// Do not call after calling LoadColumnSettings
	void AddColumn(const wxString& name, int align, int initialWidth, bool fixed = false);

	// LoadColumnSettings needs to be called exactly once after adding
	// all columns
	void LoadColumnSettings(int widthsOptionId, int visibilityOptionId, int sortOptionId);
	void SaveColumnSettings(int widthsOptionId, int visibilityOptionId, int sortOptionId);

	int GetColumnVisibleIndex(int col);

	// Refresh list but not header
	void RefreshListOnly(bool eraseBackground = true);

	void CancelLabelEdit();
	void SetLabelEditBlock(bool block);

                 
	wxScrolledWindow* GetMainWindow() const;
      

	bool HasSelection() const;

	// Returns the true rect of the area containing the actual list items
	wxRect GetListRect() const;

protected:
	virtual void OnPostScroll();
	virtual void OnPreEmitPostScrollEvent();
	void EmitPostScrollEvent();

	virtual wxString GetItemText(int item, unsigned int column) { return ""; }

	virtual wxString OnGetItemText(long item, long column) const;
	void ResetSearchPrefix();

	// Argument is visible column index
	int GetHeaderSortIconIndex(int col);
	void SetHeaderSortIconIndex(int col, int icon);

	// Has to be called after setting the image list for the items
	void InitHeaderSortImageList();
                
	                                  
      
	struct _header_icon_index
	{
		int up;
		int down;
	} m_header_icon_index;

private:
	// Keyboard prefix search
	void HandlePrefixSearch(wxChar character);
	int FindItemWithPrefix(const wxString& searchPrefix, int start);

	DECLARE_EVENT_TABLE()
	void OnPostScrollEvent(wxCommandEvent& event);
	void OnScrollEvent(wxScrollWinEvent& event);
	void OnMouseWheel(wxMouseEvent& event);
	void OnSelectionChanged(wxListEvent& event);
	void OnKeyDown(wxKeyEvent& event);
	void OnBeginLabelEdit(wxListEvent& event);
	void OnEndLabelEdit(wxListEvent& event);
	void OnColumnDragging(wxListEvent& event);

	bool m_prefixSearch_enabled;
	wxDateTime m_prefixSearch_lastKeyPress;
	wxString m_prefixSearch_prefix;

	bool ReadColumnWidths(unsigned int optionId);
	void SaveColumnWidths(unsigned int optionId);

	void CreateVisibleColumnMapping();

	virtual bool OnBeginRename(const wxListEvent& event);
	virtual bool OnAcceptRename(const wxListEvent& event);

	struct t_columnInfo
	{
		wxString name;
		int align;
		int width;
		bool shown;
		unsigned int order;
		bool fixed;
	};
	std::vector<t_columnInfo> m_columnInfo;
	unsigned int *m_pVisibleColumnMapping;

                
	                                                                        
	                      
      

                 
	bool m_editing;
      
	int m_blockedLabelEditing;
};

class CLabelEditBlocker
{
public:
	CLabelEditBlocker(wxListCtrlEx& listCtrl);
	virtual ~CLabelEditBlocker();
private:
	wxListCtrlEx& m_listCtrl;
};

class CListCtrlDropTarget : public wxEvtHandler, public wxDropTarget
{
public:
	CListCtrlDropTarget(wxListCtrlEx* pListCtrl);

	virtual bool OnDrop(wxCoord x, wxCoord y);

	virtual wxDragResult OnDragOver(wxCoord x, wxCoord y, wxDragResult def);

	virtual void OnLeave();

	virtual wxDragResult OnEnter(wxCoord x, wxCoord y, wxDragResult def);

	virtual void DisplayDropHighlight(wxPoint) = 0;

protected:
	bool IsScroll(wxPoint p) const;
	bool IsTopScroll(wxPoint p) const;
	bool IsBottomScroll(wxPoint p) const;

	void OnTimer(wxTimerEvent& /*event*/);

protected:
	wxListCtrlEx *m_pListCtrl;

	wxTimer m_timer;
	int m_count;

	DECLARE_EVENT_TABLE()
};

       //__LISTCTRLEX_H__
