
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfo.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// VersionInfo.h: interface for the CVersionInfo class.
//
//////////////////////////////////////////////////////////////////////

       

                    
                             
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoString.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// VersionInfoString.h: interface for the CVersionInfoString class.
//
//////////////////////////////////////////////////////////////////////

       

                                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoHelperStructures.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// ******************************************************************
//  VersionInfoHelperStructures   version:  1.0   ·  date: 03/06/2006
//  -----------------------------------------------------------------
//  -----------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Helper structures
// All Version structures are essentially the same, and are declared to
// increase code readability
//

       

                                                    

struct BaseVersionStruct {
  WORD        wLength; 
  WORD        wValueLength; 
  WORD        wType; 
  WCHAR       szKey[1]; 
  WORD        Padding[1]; 
};

struct VERSION_INFO_HEADER: public BaseVersionStruct{ 
  VS_FIXEDFILEINFO Value; 
};

struct String: public BaseVersionStruct{ 
  WORD   Value[1]; 
}; 

struct StringTable: public BaseVersionStruct { 
  String Children[1]; 
};

struct Var: public BaseVersionStruct { 
  DWORD Value[1]; 
}; 


struct BaseFileInfo: public BaseVersionStruct 
{ 
};

struct StringFileInfo: public BaseFileInfo { 
  StringTable Children[1]; 
};

struct VarFileInfo: public BaseFileInfo  { 
  Var   Children[1]; 
}; 

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoString.h" 21

class CVersionInfoBuffer;

class CVersionInfoString: public CObject
{
public:
  CVersionInfoString(String* pString);
  CVersionInfoString(const CString& strKey, const CString& strValue = "");

  const CString& GetKey() const;
  const CString& GetValue() const;

  CString& GetValue();

  void FromString(String* pString);
  void Write(CVersionInfoBuffer & viBuf);
private:
  CString m_strKey;
  CString m_strValue;
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfo.h" 15
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\StringTable.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// StringTable.h: interface for the CStringTable class.
//
//////////////////////////////////////////////////////////////////////

       

                             
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoString.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// VersionInfoString.h: interface for the CVersionInfoString class.
//
//////////////////////////////////////////////////////////////////////

       

                                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoHelperStructures.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// ******************************************************************
//  VersionInfoHelperStructures   version:  1.0   ·  date: 03/06/2006
//  -----------------------------------------------------------------
//  -----------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Helper structures
// All Version structures are essentially the same, and are declared to
// increase code readability
//

       

                                                    

struct BaseVersionStruct {
  WORD        wLength; 
  WORD        wValueLength; 
  WORD        wType; 
  WCHAR       szKey[1]; 
  WORD        Padding[1]; 
};

struct VERSION_INFO_HEADER: public BaseVersionStruct{ 
  VS_FIXEDFILEINFO Value; 
};

struct String: public BaseVersionStruct{ 
  WORD   Value[1]; 
}; 

struct StringTable: public BaseVersionStruct { 
  String Children[1]; 
};

struct Var: public BaseVersionStruct { 
  DWORD Value[1]; 
}; 


struct BaseFileInfo: public BaseVersionStruct 
{ 
};

struct StringFileInfo: public BaseFileInfo { 
  StringTable Children[1]; 
};

struct VarFileInfo: public BaseFileInfo  { 
  Var   Children[1]; 
}; 

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoString.h" 21

class CVersionInfoBuffer;

class CVersionInfoString: public CObject
{
public:
  CVersionInfoString(String* pString);
  CVersionInfoString(const CString& strKey, const CString& strValue = "");

  const CString& GetKey() const;
  const CString& GetValue() const;

  CString& GetValue();

  void FromString(String* pString);
  void Write(CVersionInfoBuffer & viBuf);
private:
  CString m_strKey;
  CString m_strValue;
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\StringTable.h" 21

                                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoHelperStructures.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// ******************************************************************
//  VersionInfoHelperStructures   version:  1.0   ·  date: 03/06/2006
//  -----------------------------------------------------------------
//  -----------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Helper structures
// All Version structures are essentially the same, and are declared to
// increase code readability
//

       

                                                    

struct BaseVersionStruct {
  WORD        wLength; 
  WORD        wValueLength; 
  WORD        wType; 
  WCHAR       szKey[1]; 
  WORD        Padding[1]; 
};

struct VERSION_INFO_HEADER: public BaseVersionStruct{ 
  VS_FIXEDFILEINFO Value; 
};

struct String: public BaseVersionStruct{ 
  WORD   Value[1]; 
}; 

struct StringTable: public BaseVersionStruct { 
  String Children[1]; 
};

struct Var: public BaseVersionStruct { 
  DWORD Value[1]; 
}; 


struct BaseFileInfo: public BaseVersionStruct 
{ 
};

struct StringFileInfo: public BaseFileInfo { 
  StringTable Children[1]; 
};

struct VarFileInfo: public BaseFileInfo  { 
  Var   Children[1]; 
}; 

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\StringTable.h" 23

class CStringTable: public CObject
{
public:
  //Construction
  CStringTable(const CString& strKey);
  CStringTable(WORD wLang, WORD wCodePageC);
  CStringTable(StringTable* pStringTable);
  virtual ~CStringTable();

  // Returns table key (language ID/codepage)
  const CString& GetKey() const;
  
  // Loads string table from resource structure in memory
  void FromStringTable(StringTable* pStringTable);
  
  // Saves string table to version info buffer
  void Write(CVersionInfoBuffer & viBuf);

  // Overloaded bracket operators used to access strings in the table
  const CString operator [] (const CString &strName) const;
  CString &operator [] (const CString &strName);

  // Iterative access to string objects in table
  POSITION GetFirstStringPosition() const;
  const CVersionInfoString* GetNextString(POSITION &pos) const;
  CVersionInfoString* GetNextString(POSITION &pos);

  // Retrieves the list of string names into a CStringList
  void GetStringNames(CStringList &slNames, BOOL bMerge = FALSE) const;

  friend class CStringFileInfo;
private:
  //Set key renames/changes the language/codepage for the table, accessible
  // only via CStringFileInfo::SetStringTableKey()
  void SetKey(const CString& strKey);

  CObList m_lstStrings;
  CMapStringToOb m_mapStrings;
  CString m_strKey;
};


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfo.h" 16
                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\StringFileInfo.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// StringFileInfo.h: interface for the CStringFileInfo class.
//
//////////////////////////////////////////////////////////////////////

       

                                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfoHelperStructures.h" 0
//
// This code was written by Denis Zabavchik as at 29 November 2006.
// It is unmodified except for possibly formatting.
// His article on "Modification of Version Information Resources in compiled binaries"
// can be found at: http://www.codeproject.com/library/VerInfoLib.asp
//

// ******************************************************************
//  VersionInfoHelperStructures   version:  1.0   ·  date: 03/06/2006
//  -----------------------------------------------------------------
//  -----------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Helper structures
// All Version structures are essentially the same, and are declared to
// increase code readability
//

       

                                                    

struct BaseVersionStruct {
  WORD        wLength; 
  WORD        wValueLength; 
  WORD        wType; 
  WCHAR       szKey[1]; 
  WORD        Padding[1]; 
};

struct VERSION_INFO_HEADER: public BaseVersionStruct{ 
  VS_FIXEDFILEINFO Value; 
};

struct String: public BaseVersionStruct{ 
  WORD   Value[1]; 
}; 

struct StringTable: public BaseVersionStruct { 
  String Children[1]; 
};

struct Var: public BaseVersionStruct { 
  DWORD Value[1]; 
}; 


struct BaseFileInfo: public BaseVersionStruct 
{ 
};

struct StringFileInfo: public BaseFileInfo { 
  StringTable Children[1]; 
};

struct VarFileInfo: public BaseFileInfo  { 
  Var   Children[1]; 
}; 

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\StringFileInfo.h" 21

class CVersionInfoBuffer;
class CStringTable;

class CStringFileInfo: public CObject
{
public:
  void Reset();
  CStringFileInfo();
  CStringFileInfo(StringFileInfo* pStringFI);
  virtual ~CStringFileInfo();

  void FromStringFileInfo(StringFileInfo* pStringFI);
  void Write(CVersionInfoBuffer & viBuf);

  BOOL IsEmpty();

  // Table count
  DWORD GetStringTableCount();

  // Iterative Access to StringTables
  POSITION GetFirstStringTablePosition() const;

  const CStringTable* GetNextStringTable(POSITION &pos) const;
  CStringTable* GetNextStringTable(POSITION &pos);

  // Convenient references to first usually the only string table
  const CStringTable& GetFirstStringTable() const;
  CStringTable& GetFirstStringTable();

  // Access string tables by keys (language ID + Code Page)
  const CStringTable& GetStringTable(const CString& strKey) const;
  CStringTable& GetStringTable(const CString& strKey);

  // Bracket operators allowing easy access to string tables
  const CStringTable& operator [] (const CString &strKey) const;
  CStringTable &operator [] (const CString &strKey);

  // Checks if string table for specified key allready defined
  BOOL HasStringTable(const CString &strKey) const;

  // Add new String table
  CStringTable& AddStringTable(const CString &strKey);
  CStringTable& AddStringTable(CStringTable* pStringTable);

  // Change language of the string table (the proper way, do not use
  // CStringTable::SetKey() directly)
  BOOL SetStringTableKey(const CString &strOldKey, const CString &strNewKey);

private:
  CObList m_lstStringTables;
  CMapStringToOb m_mapStringTables;
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\Tools\Windows\I18N\ResPWSL\VersionInfo.h" 17

class CVersionInfo : public CObject  
{
public:
  // Construction/Destruction
  CVersionInfo();
  CVersionInfo(const CString& strModulePath, LPCTSTR lpszResourceId = NULL /*Auto*/,
               WORD wLangId = 0xFFFF /*Auto*/);
  virtual ~CVersionInfo();

  // Read version information from module
  BOOL FromFile(const CString& strModulePath, LPCTSTR lpszResourceId = NULL /*Auto*/,
                WORD wLangId = 0xFFFF /*Auto*/);

  // Save version information to module resource (specify strModulePath, lpszResourceId & wLangId
  // to copy resource to different module, resource, language)
  BOOL ToFile(const CString& strModulePath = "", LPCTSTR lpszResourceId = NULL /*Auto*/,
              WORD wLangId = 0xFFFF /*Auto*/, const bool bReplace = false);

  // Quick save (saves to the same module, resource, and language that it was loaded from)
  BOOL Save();

  //Resets (removes all string tables and cleans fixed version info
  void Reset();

  BOOL IsValid() const;

  // GetLangID
  WORD GetLangID() const {return m_wLangId;}

  // Get/Set the order of blocks (Regular (TRUE) = StringFileInfo first, VarFileInfo 2nd)
  BOOL GetInfoBlockOrder() const;
  void SetInfoBlockOrder(BOOL bRegularStringsFirst);

  // Get reference to CStringFileInfo 
  const CStringFileInfo& GetStringFileInfo() const;
  CStringFileInfo& GetStringFileInfo();

  // Overloaded bracket operators allow quick access to first string table in StringFileInfo r/w
  const CString operator [] (const CString &strName) const;
  CString &operator [] (const CString &strName);

  // Get reference to VS_FIXEDFILEINFO
  const VS_FIXEDFILEINFO& GetFixedFileInfo() const;
  VS_FIXEDFILEINFO& GetFixedFileInfo();

  // SetFileVersion - Updates file version in VS_FIXEDFILEINFO and in stringtables
  // when bUpdateStringTables == TRUE
  void SetFileVersion(WORD dwFileVersionMSHi, WORD dwFileVersionMSLo,
                      WORD dwFileVersionLSHi, WORD dwFileVersionLSLo,
                      BOOL bUpdateStringTables = TRUE, LPCTSTR lpszDelim = _T(", "));
  void SetFileVersion(DWORD dwFileVersionMS, DWORD dwFileVersionLS,
                      BOOL bUpdateStringTables = TRUE, LPCTSTR lpszDelim = _T(", "));

  // SetProductVersion - Updates product version in VS_FIXEDFILEINFO and ALL stringtables
  // when bUpdateStringTables == TRUE
  void SetProductVersion(WORD dwProductVersionMSHi, WORD dwProductVersionMSLo,
                         WORD dwProductVersionLSHi, WORD dwProductVersionLSLo,
                         BOOL bUpdateStringTables = TRUE, LPCTSTR lpszDelim = _T(", "));
  void SetProductVersion(DWORD dwProductVersionMS, DWORD dwProductVersionLS,
                         BOOL bUpdateStringTables = TRUE, LPCTSTR lpszDelim = _T(", "));

protected:
  // Loads all structures from specified module, resource, language to version buffer
  BOOL LoadVersionInfoResource(const CString& strModulePath, CVersionInfoBuffer &viBuf,
                               LPCTSTR lpszResourceId = NULL /*Auto*/, WORD wLangId = 0xFFFF);

  // Updates module RT_VERSION resource with specified ID with data in lpData
  BOOL UpdateModuleResource(const CString &strFilePath, LPCTSTR lpszResourceId, WORD wLangId,
                            LPVOID lpData, DWORD dwDataLength, const bool bReplace = false);

  // Writes structures to version info buffer in order specified in m_bRegularInfoOrder
  // (Get/SetInfoBlockOrder())
  void Write(CVersionInfoBuffer & viBuf);

  // Writes computed VarFileInfo structure to buffer based on the contents of String table
  void WriteVarInfo(CVersionInfoBuffer & viBuf);

  // Helper functions for automatic loading of first RT_VERSION resource 
  static BOOL  EnumResourceNamesFuncFindFirst(HANDLE hModule, LPCTSTR lpType,
                                                      LPTSTR lpName, LONG_PTR lParam);
  static BOOL  EnumResourceLangFuncFindFirst(HANDLE hModule, LPCTSTR lpszType,
                                                     LPCTSTR lpszName, WORD wIDLanguage,
                                                     LONG_PTR lParam);

  // Main version info data members
  CStringFileInfo m_stringFileInfo;
  VS_FIXEDFILEINFO m_vsFixedFileInfo;

  // Information about loaded version info (Module, resource id, lang id, and order in which
  // VarFileInfo and StringFileInfo appeared in the module)
  CString m_strModulePath;
  CString m_strStringResourceId;
  LPTSTR m_lpszResourceId;
  WORD m_wLangId;
  BOOL m_bRegularInfoOrder;
};
