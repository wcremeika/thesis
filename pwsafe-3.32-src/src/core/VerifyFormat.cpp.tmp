
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.cpp" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                        
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                        
                        

// VerifyFormat.h
//-----------------------------------------------------------------------------

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

/**
 * \file StringX.h
 *
 * STL-based implementation of secure strings.
 * Like std::string in all respects, except that
 * memory is scrubbed before being returned to system.
 *
 */

                
                
                
                  // for ptrdiff_t
                  // for malloc
                  // for memset

                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\../os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

/**
* Silly wrapper to abstract away the difference between a Unicode
* (wchar_t) and non-Unicode (char) std::string, as well as
* Linux/Windows portability.
*
*/

                
/*
 * _S is defined same as m'soft's _T, just to avoid collisions or
 * lousy include order dependencies.
 */

// Sometimes we need specific ones irrespective of in Unicode mode or not.
// In particular, the underlying format of most XML is Unicode.
typedef std::wstring wstringT;
typedef std::string  cstringT;

              
                             
                      
                    
     
typedef std::string stringT;
typedef char charT;
               
      

                               
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\../core/PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
// some globally useful includes for non-Windows
                 
      

                
                  
      

// Following seems needed on Linux/cygwin
                                             
                   
      

// stop MS VC++ 6 and earlier being quite so pedantic
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

// PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN can be specified on the 
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

// 
                          
      
      

                                                           
      
      

                                                         
      
      

// Following from libtomcrypt, for twofish & SHA256
/* Controls endianess and size of registers.  Leave uncommented to get platform neutral [slower] code 
* 
* Note: in order to use the optimized macros your platform must support unaligned 32 and 64 bit read/writes.
* The x86 platforms allow this but some others [ARM for instance] do not.  On those platforms you **MUST**
* use the portable [slower] macros.
*/

/* detect x86-32 machines somewhat */
                                                                                                                                                                                 
                     
                        
      

/* detects MIPS R5900 processors (PS2) */
                                                                                                                        
                     
                        
      

/* detect amd64 */
                                                                
                     
                        
      

/* #define ENDIAN_LITTLE */
/* #define ENDIAN_BIG */

/* #define ENDIAN_32BITWORD */
/* #define ENDIAN_64BITWORD */

                                                                                                                
      
      

                                                    
                      
      

/* fix for MSVC ...evil! */
               
                            
                                 
     
                           
typedef uint64_t ulong64;
      

/* this is the "32-bit at least" data type 
* Re-define it to suit your platform but it must be at least 32-bits 
*/
                       
                         
     
typedef unsigned long ulong32;
      

/* ---- HELPER MACROS ---- */
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





       /* ENDIAN_NEUTRAL */

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

       /* ENDIAN_LITTLE */

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
       /* ENDIAN_BIG */

                                                                                                                         



/* 32-bit Rotates */
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

/* rotates the hard way */
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


/* 64-bit Rotates */
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

      /* Not x86_64  */

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

/* extract a byte portably */
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\../os/typedefs.h" 46 // for afxwin.h, and endian macros

// Hotkey values. Internal PWS values - need to convert to either MFC or wxWidgets
// values in the GUI when retrieving these from the preferences and aso back to PWS
// internal values before giving them to PWSPrefs for saving in the XML config file.
                                
                                
                                
                                
 
// wxWidgets Only - Not used in Windows MFC
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

      /* !defined(_WIN32) */
                  
                     
typedef int8_t  int8;
typedef int16_t int16;
typedef int32_t int32;
typedef int64_t int64;

typedef uint8_t  uint8;
typedef uint16_t uint16;
typedef uint32_t uint32;
typedef uint64_t uint64;

typedef int errno_t;

              
          
                    
      
                      
     
               
typedef char TCHAR;
typedef wchar_t WCHAR;
       /* UNICODE */

// mimic Microsoft conventional typdefs:
typedef TCHAR *LPTSTR;
typedef const TCHAR *LPCTSTR;
typedef bool BOOL;
typedef unsigned char BYTE;
typedef uint16_t WORD;
typedef uint32_t DWORD;
typedef int32_t LONG;
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
typedef int32_t LPARAM;
typedef unsigned int UINT;
typedef int HANDLE;
                                       

// assorted conveniences:
                           
                                                      
                           
            
                 
      
             
                   
      

/* These two files require the above definitions */
                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\debug.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                  
                  

                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\debug.h" 14
             
                   
      

namespace pws_os {
  // MFC TRACE equivalent in MFC, non-MFC Windows and non-Windows
  void Trace(LPCTSTR lpszFormat, ...);
  void Trace0(LPCTSTR lpszFormat);

  // Opens a messagebox or write to debugger window 
  // with text of last system error, titlebar
  // is csFunction
  void IssueError(const stringT &csFunction, bool bMsgBox = true);

  /*
    Outputs a printable version of memory dump (hex + ascii)

    parameters:
      pmemory   - pointer to memory to format
      length    - length memory to format in bytes
      cs_prefix - prefix each line with this
      maxnum    - maximum hex characters dumped per line
  */
  void HexDump(unsigned char *pmemory, const int &length,
               const stringT &cs_prefix = "", const int &maxnum = 16);
}

       /* _OSDEBUG_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\../os/typedefs.h" 224
                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\linux/pws_time.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                    
                    

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\linux\../typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\..\os\linux/pws_time.h" 13
                  
typedef time_t __time32_t;
typedef uint64_t __time64_t;

extern struct tm *gmtime64_r(const __time64_t *timep, struct tm *result);

namespace pws_os {
  /**
   * Workaround the lack of a wchar_t version of asctime()
   */
  extern int asctime(TCHAR *buf, size_t N, const struct tm *tm);
}

       /* __PWS_TIME_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\../os/typedefs.h" 225
       /* _WIN32 */

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringX.h" 33
                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\./PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
                                                
                  
      

                
                   
      

                                         
                                             
                   
      

                                                     
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

                                                                
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

   
                          
      
      

                                                           
      
      

                                                         
      
      

                                                   
                                                                                                      
  
                                                                                                            
                                                                                                          
                                   
  

                                     
                                                                                                                                                                                 
                     
                        
      

                                         
                                                                                                                        
                     
                        
      

                  
                                                                
                     
                        
      

                           
                        

                              
                              

                                                                                                                
      
      

                                                    
                      
      

                           
               
                            
                                 
     
                           
                         
      

                                           
                                                                     
  
                       
                         
     
                              
      

                             
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                           

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

                          

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
                       

                                                                                                                         



                    
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

                          
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


                    
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

                       

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

                             
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringX.h" 34

namespace S_Alloc
{
  template <typename T>
    class SecureAlloc
    {
    public:
      // Typedefs
      typedef size_t    size_type;
      typedef ptrdiff_t difference_type;
      typedef T*        pointer;
      typedef const T*  const_pointer;
      typedef T&        reference;
      typedef const T&  const_reference;
      typedef T         value_type;

    public:
      // Constructors
      SecureAlloc() throw() {}
      SecureAlloc(const SecureAlloc&) throw() {}

      template <typename U>
        SecureAlloc(const SecureAlloc<U>&) throw() {}

      SecureAlloc& operator=(const SecureAlloc&) {
        return *this;
      }

      // Destructor
      ~SecureAlloc() throw() {}

      // Utility functions
      pointer address(reference r) const {
        return (&r);
      }

      const_pointer address(const_reference c) const {
        return (&c);
      }

      size_type max_size() const {
        return (std::numeric_limits<size_t>::max)() / sizeof(T);
      }

      // In-place construction
      void construct(pointer p, const_reference c) {
        // placement new operator
        new(reinterpret_cast<void *>(p)) T(c);
      }

      // In-place destruction
      void destroy(pointer p) const {
        // call destructor directly
        (p)->T::~T();
      }

      // Rebind to allocators of other types
      template <typename U>
        struct rebind {
          typedef SecureAlloc<U> other;
        };

      // Allocate raw memory
      pointer allocate(size_type n, const_pointer hint = 0) {
        (void)(hint);
        pointer p = static_cast<pointer>(std::malloc(n * sizeof(T)));
        // pws_os::Trace(_T("Securely Allocated %d bytes at %p\n"), n * sizeof(T), p);
        if (p == NULL)
          throw std::bad_alloc();
        return p;
      }

      // Free raw memory.
      // Note that C++ standard defines this function as:
      //   deallocate(pointer p, size_type n).
      void deallocate(pointer p, size_type n) {
        // assert(p != NULL);
        // The standard states that p must not be NULL. However, some
        // STL implementations fail this requirement, so the check must
        // be made here.
        if (p == NULL)
          return;

        if (n > 0) {
          const size_type N = n * sizeof(T);
          std::memset(p, 0x55, N);
          std::memset(p, 0xAA, N);
          std::memset(p,    0, N);
        }
        std::free(p);
      }

    private:
      // No data

    }; // end of SecureAlloc

  // Comparison
  template <typename T1, typename T2>
    bool operator==(const SecureAlloc<T1>&,
                    const SecureAlloc<T2>&) throw() {
    return true;
  }

  template <typename T1, typename T2>
    bool operator!=(const SecureAlloc<T1>&,
                    const SecureAlloc<T2>&) throw() {
    return false;
  }

} // end namespace S_Alloc

              
                                  
                                                    
                                                                  
     
typedef std::basic_string<char,
                          std::char_traits<char>,
                          S_Alloc::SecureAlloc<char> > StringX;
      

// Following should really be StringX member functions, but there's no 
// elegant way of extending a template class without public inheritance, 
// including duplicating large parts of the interface
//
// Since we need the for stringT as well, we might as well templatize them
// (In for a dime, in for a $).

template<class T> int CompareNoCase(const T &s1, const T &s2);
template<class T> int CompareCase(const T &s1, const T &s2);
template<class T> void ToLower(T &s);
template<class T> void ToUpper(T &s);
template<class T> T &TrimRight(T &s, const TCHAR *set = NULL);
template<class T> T &TrimLeft(T &s, const TCHAR *set = NULL);
template<class T> T &Trim(T &s, const TCHAR *set = NULL);
template<class T> void EmptyIfOnlyWhiteSpace(T &s);
template<class T> int Replace(T &s, TCHAR from, TCHAR to);
template<class T> int Replace(T &s, const T &from, const T &to);
template<class T> int Remove(T &s, TCHAR c);
template<class T> void Format(T &s, const TCHAR *fmt, ...);
template<class T> void Format(T &s, int fmt, ...);
template<class T> void LoadAString(T &s, int id);

inline stringT stringx2std(const StringX &str) { return stringT(str.data(), str.size()); }
inline StringX std2stringx(const stringT& str)   { return StringX(str.data(), str.size()); }

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.h" 19
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
                                                
                  
      

                
                   
      

                                         
                                             
                   
      

                                                     
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

                                                                
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

   
                          
      
      

                                                           
      
      

                                                         
      
      

                                                   
                                                                                                      
  
                                                                                                            
                                                                                                          
                                   
  

                                     
                                                                                                                                                                                 
                     
                        
      

                                         
                                                                                                                        
                     
                        
      

                  
                                                                
                     
                        
      

                           
                        

                              
                              

                                                                                                                
      
      

                                                    
                      
      

                           
               
                            
                                 
     
                           
                         
      

                                           
                                                                     
  
                       
                         
     
                              
      

                             
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             





                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   





                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                           

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

                          

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
                       

                                                                                                                         



                    
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

                          
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


                    
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

                       

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

                             
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.h" 20
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.h" 21

// Verify PWHistory String return codes
enum {PWH_OK = 0, PWH_IGNORE, PWH_INVALID_HDR, PWH_INVALID_STATUS,
      PWH_INVALID_NUM, PWH_INVALID_DATETIME, PWH_PSWD_LENGTH_NOTHEX,
      PWH_INVALID_PSWD_LENGTH, PWH_TOO_SHORT, PWH_TOO_LONG,
      PWH_INVALID_FIELD_LENGTH, PWH_INVALID_CHARACTER};
bool VerifyASCDateTimeString(const stringT &time_str, time_t &t);
bool VerifyXMLDateTimeString(const stringT &time_str, time_t &t);
bool VerifyXMLDateString(const stringT &time_str, time_t &t);
bool VerifyImportDateTimeString(const stringT &time_str, time_t &t);
int VerifyTextImportPWHistoryString(const StringX &PWHistory, StringX &newPWHistory,
                                    stringT &strErrors);
int VerifyXMLImportPWHistoryString(const StringX &PWHistory, StringX &newPWHistory,
                                   stringT &strErrors);
bool verifyDTvalues(int yyyy, int mon, int dd,
                    int hh, int min, int ss);

       /* __VERIFYFORMAT_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.cpp" 9
                
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\core.h" 0
//{{NO_DEPENDENCIES}}

// Non-editable by VS2005

                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            

                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            

// Keep DCA together
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            

// Named Policy stuff
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.cpp" 10
                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringXStream.h" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

/**
 * \file StringXStream.h
 *
 * STL-based implementation of secure string streams.
 * typedefs of secure versions of istringstream, ostringstream
 * and stringbuf.
 * Secure in the sense that memory is scrubbed before
 * being returned to system.
 */

                         
                         

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\StringXStream.h" 24
                 

// stringstream typedefs for StringX 
typedef std::basic_stringbuf<wchar_t,
                             std::char_traits<wchar_t>,
                             S_Alloc::SecureAlloc<wchar_t> > wStringXBuf;

typedef std::basic_istringstream<wchar_t,
                                 std::char_traits<wchar_t>,
                                 S_Alloc::SecureAlloc<wchar_t> > wiStringXStream;

typedef std::basic_ostringstream<wchar_t,
                                 std::char_traits<wchar_t>,
                                 S_Alloc::SecureAlloc<wchar_t> > woStringXStream;

typedef std::basic_stringstream<wchar_t,
                                std::char_traits<wchar_t>,
                                S_Alloc::SecureAlloc<wchar_t> > wStringXStream;

typedef std::basic_stringbuf<char,
                             std::char_traits<char>,
                             S_Alloc::SecureAlloc<char> > cStringXBuf;

typedef std::basic_istringstream<char,
                                 std::char_traits<char>,
                                 S_Alloc::SecureAlloc<char> > ciStringXStream;

typedef std::basic_ostringstream<char,
                                 std::char_traits<char>,
                                 S_Alloc::SecureAlloc<char> > coStringXStream;

typedef std::basic_stringstream<char,
                                std::char_traits<char>,
                                S_Alloc::SecureAlloc<char> > cStringXStream;

              
                                    
                                       
                                       
                                       
     
typedef cStringXBuf      StringXBuf;
typedef ciStringXStream iStringXStream;
typedef coStringXStream oStringXStream;
typedef cStringXStream   StringXStream;
      

// Following not related to StringX, but putting it here
// is the lesser of two evils (other is creating a new file
// just for this)
// hide w_char/char differences where possible:
              
                                           
                                           
                                           
     
typedef std::istringstream istringstreamT;
typedef std::ostringstream ostringstreamT;
typedef std::stringstream   stringstreamT;
      

       /* __STRINGXSTREAM_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core\VerifyFormat.cpp" 11

               
                

static const TCHAR *sHex = "0123456789abcdefABCDEF";

// Our own mktime, differs from libc's via argument overloading
static time_t mktime(int yyyy, int mon, int dd,
                     int hh = 0, int min = 0, int sec = 0, int *dow = NULL)
{
  struct tm xtm;
  memset(&xtm, 0, sizeof(tm));
  xtm.tm_year = yyyy - 1900;
  xtm.tm_mon = mon - 1;
  xtm.tm_mday = dd;
  xtm.tm_hour = hh;
  xtm.tm_min = min;
  xtm.tm_sec = sec;
  xtm.tm_isdst = -1;
  time_t retval = std::mktime(&xtm);
  if (dow != NULL)
    *dow = xtm.tm_wday + 1;
  return retval;
}

bool verifyDTvalues(int yyyy, int mon, int dd,
                    int hh, int min, int ss)
{
  const int month_lengths[12] = {31, 28, 31, 30, 31, 30,
                                 31, 31, 30, 31, 30, 31};
  // Built-in obsolesence for pwsafe in 2038?
  if (yyyy < 1970 || yyyy > 2038)
    return false;

  if ((mon < 1 || mon > 12) || (dd < 1))
    return false;

  if (mon == 2 && (yyyy % 4) == 0) {
    // Feb and a leap year
    if (dd > 29)
      return false;
  } else {
    // Either (Not Feb) or (Is Feb but not a leap-year)
    if (dd > month_lengths[mon - 1])
      return false;
  }

  if ((hh < 0 || hh > 23) ||
      (min < 0 || min > 59) ||
      (ss < 0 || ss > 59))
    return false;

  return true;
}

bool VerifyImportDateTimeString(const stringT &time_str, time_t &t)
{
  //  String format must be "yyyy/mm/dd hh:mm:ss"
  //                        "0123456789012345678"

  const int ndigits = 14;
  const int idigits[ndigits] = {0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18};
  int yyyy, mon, dd, hh, min, ss;

  t = time_t(-1);

  if (time_str.length() != 19)
    return false;

  // Validate time_str
  if (time_str[4] != TCHAR('/') ||
      time_str[7] != TCHAR('/') ||
      (time_str[10] != TCHAR(' ') && time_str[10] != TCHAR('T')) ||
      time_str[13] != TCHAR(':') ||
      time_str[16] != TCHAR(':'))
    return false;

  for (int i = 0;  i < ndigits; i++)
    if (!isdigit(time_str[idigits[i]]))
      return false;

  istringstreamT is(time_str);
  TCHAR dummy;

  is >> yyyy >> dummy >> mon >> dummy >> dd
     >> hh >> dummy >> min >> dummy >> ss;

  if (!verifyDTvalues(yyyy, mon, dd, hh, min, ss))
    return false;

  // Accept 01/01/1970 as a special 'unset' value, otherwise there can be
  // issues with mktime after apply daylight savings offset.
  if (yyyy == 1970 && mon == 1 && dd == 1) {
    t = time_t(0);
    return true;
  }

  t = mktime(yyyy, mon, dd, hh, min, ss);
  return true;
}

bool VerifyASCDateTimeString(const stringT &time_str, time_t &t)
{
  //  String format must be "ddd MMM dd hh:mm:ss yyyy"
  //                        "012345678901234567890123"
  // e.g.,                  "Wed Oct 06 21:02:38 2008"

  const stringT str_months = "JanFebMarAprMayJunJulAugSepOctNovDec";
  const stringT str_days = "SunMonTueWedThuFriSat";
  const int ndigits = 12;
  const int idigits[ndigits] = {8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23};
  stringT::size_type iMON, iDOW;
  int yyyy, mon, dd, hh, min, ss;

  t = time_t(-1);

  if (time_str.length() != 24)
    return false;

  // Validate time_str
  if (time_str[13] != TCHAR(':') ||
      time_str[16] != TCHAR(':'))
    return false;

  for (int i = 0; i < ndigits; i++)
    if (!isdigit(time_str[idigits[i]]))
      return false;

  istringstreamT is(time_str);
  stringT dow, mon_str;
  TCHAR dummy;
  is >> dow >> mon_str >> dd >> hh >> dummy >> min >> dummy >> ss >> yyyy;

  iMON = str_months.find(mon_str);
  if (iMON == stringT::npos)
    return false;

  mon = ((reinterpret_cast<int &>(iMON) / 3) + 1);

  if (!verifyDTvalues(yyyy, mon, dd, hh, min, ss))
    return false;

  // Accept 01/01/1970 as a special 'unset' value, otherwise there can be
  // issues with mktime after apply daylight savings offset.
  if (yyyy == 1970 && mon == 1 && dd == 1) {
    t = time_t(0);
    return true;
  }

  int  mktime_dow;
  time_t xt = mktime(yyyy, mon, dd, hh, min, ss, &mktime_dow);

  iDOW = str_days.find(dow);
  if (iDOW == stringT::npos)
    return false;

  iDOW = (iDOW / 3) + 1;
  if (iDOW != stringT::size_type(mktime_dow))
    return false;

  t = xt;
  return true;
}

bool VerifyXMLDateTimeString(const stringT &time_str, time_t &t)
{
  //  String format must be "yyyy-mm-ddThh:mm:ss"
  //                    or  "yyyy-mm-ddThh:mm:ssZ"
  //                    or  "yyyy-mm-ddThh:mm:ss+hh:mm"
  //                    or  "yyyy-mm-ddThh:mm:ss-hh:mm"
  //                        "0123456789012345678901234"

  // e.g.,                  "2008-10-06T21:20:56"
  //                        "2008-10-06T21:20:56Z"
  //                        "2008-10-06T21:20:56+01:00"
  //                        "2008-10-06T21:20:56-01:00"

  stringT xtime_str;

  int ndigits(14);
  const int idigits[18] = {0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24};
  int yyyy, mon, dd, hh, min, ss, tz_hh(0), tz_mm(0);

  t = time_t(-1);

  const size_t len = time_str.length();
  if (len < 19)
    return false;

  // Validate time_str
  if (time_str[4] != TCHAR('-')  ||
      time_str[7] != TCHAR('-')  ||
      time_str[10] != TCHAR('T') ||
      time_str[13] != TCHAR(':') ||
      time_str[16] != TCHAR(':'))
    return false;

  switch (len) {
    case 19:
      break;
    case 20:
      if (time_str[19] != TCHAR('Z'))
        return false;
      break;
    case 25:
      if (time_str[22] != TCHAR(':')  &&
          (time_str[19] != TCHAR('+') &&
           time_str[19] != TCHAR('-')))
        return false;
      ndigits = 18;
      break;
    default:
      return false;
  }

  for (int i = 0; i < ndigits; i++) {
    if (!isdigit(time_str[idigits[i]]))
      return false;
  }

  istringstreamT is(time_str);
  TCHAR dummy;
  is >> yyyy >> dummy >> mon >> dummy >> dd >> dummy
     >>  hh  >> dummy >> min >> dummy >> ss;

  if (len == 25) {
    is >> tz_hh >> dummy >> tz_mm;

    if (tz_mm > 59 || abs(tz_hh) > 14 ||
        (abs(tz_hh) == 14 && tz_mm != 0))
      tz_hh = tz_mm = 0;
  }

  if (!verifyDTvalues(yyyy, mon, dd, hh, min, ss))
    return false;

  // Accept 1970-01-01 as a special 'unset' value, otherwise there can be
  // issues with mktime after apply daylight savings offset.
  if (yyyy == 1970 && mon == 1 && dd == 1) {
    t = time_t(0);
    return true;
  }

  t = mktime(yyyy, mon, dd, hh, min, ss);

  // Add timezone offsets
  if (tz_hh != 0 || tz_mm != 0) {
    t += (tz_hh < 0 ? -1 : -1) * (tz_hh * 60 + tz_mm) * 60;
  }

  return true;
}

bool VerifyXMLDateString(const stringT &time_str, time_t &t)
{
  //  String format must be "yyyy-mm-dd"
  //                        "0123456789"

  stringT xtime_str;
  const int ndigits = 8;
  const int idigits[ndigits] = {0, 1, 2, 3, 5, 6, 8, 9};
  int yyyy, mon, dd;

  t = time_t(-1);

  if (time_str.length() != 10)
    return false;

  // Validate time_str
  if (time_str.substr(4,1) != "-" ||
      time_str.substr(7,1) != "-")
    return false;

  for (int i = 0; i < ndigits; i++) {
    if (!isdigit(time_str[idigits[i]]))
      return false;
  }

  istringstreamT is(time_str);
  TCHAR dummy;

  is >> yyyy >> dummy >> mon >> dummy >> dd;

  if (!verifyDTvalues(yyyy, mon, dd, 1, 2, 3))
    return false;

  // Accept 01/01/1970 as a special 'unset' value, otherwise there can be
  // issues with mktime after apply daylight savings offset.
  if (yyyy == 1970 && mon == 1 && dd == 1) {
    t = time_t(0);
    return true;
  }

  t = mktime(yyyy, mon, dd);
  return true;
}

int VerifyTextImportPWHistoryString(const StringX &PWHistory,
                                    StringX &newPWHistory, stringT &strErrors)
{
  // Format is (! == mandatory blank, unless at the end of the record):
  //    sxx00
  // or
  //    sxxnn!yyyy/mm/dd!hh:mm:ss!llll!pppp...pppp!yyyy/mm/dd!hh:mm:ss!llll!pppp...pppp!.........
  // Note:
  //    !yyyy/mm/dd!hh:mm:ss! may be !1970-01-01 00:00:00! meaning unknown

  StringX sxBuffer;
  size_t ipwlen, pwleft = 0;
  int s = -1, m = -1, n = -1;
  int rc = PWH_OK;
  time_t t;

  newPWHistory = "";
  strErrors = "";

  if (PWHistory.empty())
    return PWH_OK;

  StringX pwh(PWHistory);
  StringX tmp;
  const TCHAR *lpszPWHistory = NULL;
  size_t len = pwh.length();

  if (len < 5) {
    rc = PWH_INVALID_HDR;
    goto exit;
  }

  if (pwh[0] == TCHAR('0')) s = 0;
  else if (pwh[0] == TCHAR('1')) s = 1;
  else {
    rc = PWH_INVALID_STATUS;
    goto exit;
  }

  if (PWHistory.substr(0, 4).find_first_not_of(sHex) != StringX::npos) {
    // Header not hex!
    rc = PWH_INVALID_HDR;
    goto exit;
  }

  {
    StringX s1 (pwh.substr(1, 2));
    StringX s2 (pwh.substr(3, 4));
    iStringXStream is1(s1), is2(s2);
    is1 >> std::hex >> m;
    is2 >> std::hex >> n;
  }

  if (n > m) {
    rc = PWH_INVALID_NUM;
    goto exit;
  }

  lpszPWHistory = pwh.c_str() + 5;
  pwleft = len - 5;

  if (pwleft == 0 && s == 0 && m == 0 && n == 0) {
    rc = PWH_IGNORE;
    goto exit;
  }

  Format(sxBuffer, "%01d%02x%02x", s, m, n);
  newPWHistory = sxBuffer;

  for (int i = 0; i < n; i++) {
    if (pwleft < 26) {  //  blank + date(10) + blank + time(8) + blank + pw_length(4) + blank
      rc = PWH_TOO_SHORT;
      goto exit;
    }

    if (lpszPWHistory[0] != ' ') {
      rc = PWH_INVALID_CHARACTER;
      goto exit;
    }

    lpszPWHistory++;
    pwleft--;

    tmp = StringX(lpszPWHistory, 19);

    if (tmp.substr(0, 10) == "1970-01-01")
      t = 0;
    else {
      if (!VerifyImportDateTimeString(tmp.c_str(), t) ||
          (t == time_t(-1))) {
        rc = PWH_INVALID_DATETIME;
        goto exit;
      }
    }

    lpszPWHistory += 19;
    pwleft -= 19;

    if (lpszPWHistory[0] != ' ') {
      rc = PWH_INVALID_CHARACTER;
      goto exit;
    }

    lpszPWHistory++;
    pwleft--;
    {
      StringX s3(lpszPWHistory, 4);
      iStringXStream is3(s3);
      is3 >> std::hex >> ipwlen;
    }
    lpszPWHistory += 4;
    pwleft -= 4;

    if (lpszPWHistory[0] != ' ') {
      rc = PWH_INVALID_CHARACTER;
      goto exit;
    }

    lpszPWHistory += 1;
    pwleft -= 1;

    if (pwleft < ipwlen) {
      rc = PWH_INVALID_PSWD_LENGTH;
      goto exit;
    }

    tmp = StringX(lpszPWHistory, ipwlen);
    Format(sxBuffer, "%08x%04x%s", static_cast<long>(t), ipwlen, tmp.c_str());
    newPWHistory += sxBuffer;
    sxBuffer = "";
    lpszPWHistory += ipwlen;
    pwleft -= ipwlen;
  }

  if (pwleft > 0)
    rc = PWH_TOO_LONG;

exit:
  stringT buffer, temp("");
  Format(temp, 3427, buffer.c_str(), len - pwleft + 1);
  Format(buffer, 3033, temp.c_str());
  switch (rc) {
    case PWH_OK:
    case PWH_IGNORE:
      temp.clear();
      buffer.clear();
      break;
    case PWH_INVALID_HDR:
      Format(temp, 3034, PWHistory.c_str());
      break;
    case PWH_INVALID_STATUS:
      Format(temp, 3035, s);
      break;
    case PWH_INVALID_NUM:
      Format(temp, 3036, n, m);
      break;
    case PWH_INVALID_DATETIME:
      LoadAString(temp, 3037);
      break;
    case PWH_INVALID_PSWD_LENGTH:
      LoadAString(temp, 3038);
      break;
    case PWH_TOO_SHORT:
      LoadAString(temp, 3039);
      break;
    case PWH_TOO_LONG:
      LoadAString(temp, 3040);
      break;
    case PWH_INVALID_CHARACTER:
      LoadAString(temp, 3041);
      break;
    default:
      assert(0);
  }
  strErrors = buffer + temp;
  if (rc != PWH_OK)
    newPWHistory = "";

  return rc;
}

int VerifyXMLImportPWHistoryString(const StringX &PWHistory,
                                   StringX &newPWHistory, stringT &strErrors)
{
  // Format is (! == mandatory blank, unless at the end of the record):
  //    sxx00
  // or
  //    sxxnn!<time field>!llll!pppp...pppp!<time field>!llll!pppp...pppp!.........
  //
  // Note:
  //   For Plain text input the <time field> is fixed as "yyyy/mm/dd!hh:mm:ss"
  //   For XML input the <time field> is defined by the W3C xs:dateTime specification
  //   of: "yyyy-mm-ddThh:mm:ss", "yyyy-mm-ddThh:mm:ssZ",
  //       "yyyy-mm-ddThh:mm:ss+hh:mm" or "yyyy-mm-ddThh:mm:ss-hh:mm"
  //
  // A date value of '1970-01-01' (irrespective of the time value) is interpreted
  // as 'unknown'.

  StringX sxBuffer, tmp;
  std::vector<StringX> in_tokens, out_entries;
  int s = -1, nerror(-1);
  unsigned int ipwlen, m = 0, n = 0; // using uint instead of size_t to use 'x' format spec instead of complier-dependent z/I
  int rc = PWH_OK;
  time_t t;

  newPWHistory = "";
  strErrors = "";

  if (PWHistory.empty())
    return PWH_OK;

  const size_t len = PWHistory.length();

  if (len < 5) {
    rc = PWH_INVALID_HDR;
    goto exit;
  }

  if (PWHistory.substr(0, 4).find_first_not_of(sHex) != StringX::npos) {
    // Header not hex!
    rc = PWH_INVALID_HDR;
    goto exit;
  }

  if (PWHistory[0] == TCHAR('0')) s = 0;
  else if (PWHistory[0] == TCHAR('1')) s = 1;
  else {
    rc = PWH_INVALID_STATUS;
    goto exit;
  }

  if (PWHistory.substr(1, 4).find_first_not_of(sHex) != StringX::npos) {
    // Password length not hex!
    rc = PWH_PSWD_LENGTH_NOTHEX;
    goto exit;
  } else {
    StringX s1(PWHistory.substr(1, 2));
    StringX s2(PWHistory.substr(3, 4));
    iStringXStream is1(s1), is2(s2);
    is1 >> std::hex >> m;
    is2 >> std::hex >> n;
  }

  if (n > m) {
    rc = PWH_INVALID_NUM;
    goto exit;
  }

  if (len == 5 && s == 0 && m == 0 && n == 0) {
    rc = PWH_IGNORE;
    goto exit;
  }

  if (len <= 6) {
    // Really invalid but just set n == 0 and return
    Format(sxBuffer, "%01d%02x00", s, m);
    newPWHistory = sxBuffer;
    return PWH_OK;
  }

  // Now tokenize the rest using a blank as a delimiter
  {
    StringX item(PWHistory.substr(6));
    StringXStream ss(item);
    while (getline(ss, item, '\xff')) {
      in_tokens.push_back(item);
    }
  }

  // We need to handle these in 3s or 4s depending on whether we are doing it for
  // plain text input (4 - date, time, length, password) or
  // XML input (3 - datetime, length, password).

  // Check we have enough
  if (in_tokens.size() != n * 3) {
    // too few or too many - set number to number of complete entries
    n = (in_tokens.size() % 3);
  }

  // Now only verify them and create out_tokens for processing
  size_t it;
  it = 0;  // token counter
  size_t ie;      // entry counter
  for (ie = 0; ie < n; ie++) {
    StringX sxDatetime, sxPWLen, sxPassword;
    // Check datetime and password length fields
    size_t idtlen = in_tokens[it].length();
    if ((idtlen != 19 && idtlen != 20 && idtlen != 25) ||
        in_tokens[it + 1].length() != 4) {
      // Bad lengths
      rc = PWH_INVALID_FIELD_LENGTH;
      break;
    }
    sxDatetime = in_tokens[it];
    sxPWLen = in_tokens[it + 1];
    sxPassword = in_tokens[it + 2];

    // Get password length
    if (sxPWLen.find_first_not_of(sHex) != StringX::npos) {
      // Password length not hex!
      rc = PWH_PSWD_LENGTH_NOTHEX;
      break;
    } else {
      iStringXStream iss_pwlen(sxPWLen.c_str());
      iss_pwlen >> std::hex >> ipwlen;
    }

    // Check password field length
    if (sxPassword.length() != ipwlen) {
      // Bad entry - stop with what we have
      rc = PWH_INVALID_PSWD_LENGTH;
      break;
    }

    // Verify datetime field
    if (!VerifyXMLDateTimeString(sxDatetime.c_str(), t) ||
        (t == time_t(-1))) {
       rc = PWH_INVALID_DATETIME;
      break;
    }

    Format(sxBuffer, "%08lx%04x%s", static_cast<long>(t), ipwlen,
                 sxPassword.c_str());
    out_entries.push_back(sxBuffer);
    sxBuffer = "";
    it += 3;
  }

  if (rc != PWH_OK)
    nerror = ie;

  n = out_entries.size();
  Format(sxBuffer, "%01d%02x%02x", s, m, n);
  newPWHistory = sxBuffer;

  for (size_t i = 0; i < out_entries.size(); i++)
    newPWHistory += out_entries[i];

 exit:
  stringT buffer, temp("");
  if (nerror >= 0) {
    // Need to add information about which PWH entry is in error
    LoadAString(buffer, 3394);
    Format(temp, "%s %d", buffer.c_str(), nerror);
  }
  Format(buffer, 3033, temp.c_str());
  switch (rc) {
    case PWH_OK:
    case PWH_IGNORE:
      temp.clear();
      buffer.clear();
      break;
    case PWH_INVALID_HDR:
      Format(temp, 3034, PWHistory.substr(0, 5).c_str());
      break;
    case PWH_INVALID_STATUS:
      Format(temp, 3035, s);
      break;
    case PWH_INVALID_NUM:
      Format(temp, 3036, n, m);
      break;
    case PWH_INVALID_DATETIME:
      LoadAString(temp, 3037);
      break;
    case PWH_INVALID_PSWD_LENGTH:
      LoadAString(temp, 3038);
      break;
    case PWH_PSWD_LENGTH_NOTHEX:
      LoadAString(temp, 3070);
      break;
    case PWH_INVALID_FIELD_LENGTH:
      LoadAString(temp, 3069);
      break;
    default:
      assert(0);
  }

  if (rc != PWH_OK) {
    strErrors = buffer.c_str();
    strErrors += temp;
    newPWHistory = "";
  }

  return rc;
}
