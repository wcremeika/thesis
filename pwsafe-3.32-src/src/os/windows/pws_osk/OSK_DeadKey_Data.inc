/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


//
// Keyboard 00000405 - Czech deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02dd(dtaDeadkey_00000405_x02dd,
                                                     dtaDeadkey_00000405_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02c7(dtaDeadkey_00000405_x02c7,
                                                     dtaDeadkey_00000405_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000405_x005e(dtaDeadkey_00000405_x005e,
                                                     dtaDeadkey_00000405_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02d8[6] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
  { 0x22, 0x00,   38 },  //    4
  { 0x22, 0x01,   39 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02d8(dtaDeadkey_00000405_x02d8,
                                                     dtaDeadkey_00000405_x02d8 + 6);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b0(dtaDeadkey_00000405_x00b0,
                                                     dtaDeadkey_00000405_x00b0 + 6);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02db[10] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
  { 0x17, 0x00,   50 },  //    6
  { 0x17, 0x01,   51 },  //    7
  { 0x16, 0x00,   52 },  //    8
  { 0x16, 0x01,   53 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02db(dtaDeadkey_00000405_x02db,
                                                     dtaDeadkey_00000405_x02db + 10);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000405_x0060(dtaDeadkey_00000405_x0060,
                                                     dtaDeadkey_00000405_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02d9[8] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x12, 0x00,   66 },  //    2
  { 0x12, 0x01,   67 },  //    3
  { 0x17, 0x00,   68 },  //    4
  { 0x17, 0x01,   69 },  //    5
  { 0x15, 0x00,   70 },  //    6
  { 0x15, 0x01,   71 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02d9(dtaDeadkey_00000405_x02d9,
                                                     dtaDeadkey_00000405_x02d9 + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b4(dtaDeadkey_00000405_x00b4,
                                                     dtaDeadkey_00000405_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
  { 0x2c, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00a8(dtaDeadkey_00000405_x00a8,
                                                     dtaDeadkey_00000405_x00a8 + 14);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b8[18] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x22, 0x00,  113 },  //    4
  { 0x22, 0x01,  114 },  //    5
  { 0x25, 0x00,  115 },  //    6
  { 0x25, 0x01,  116 },  //    7
  { 0x26, 0x00,  117 },  //    8
  { 0x26, 0x01,  118 },  //    9
  { 0x31, 0x00,  119 },  //   10
  { 0x31, 0x01,  120 },  //   11
  { 0x13, 0x00,  121 },  //   12
  { 0x13, 0x01,  122 },  //   13
  { 0x1f, 0x00,  123 },  //   14
  { 0x1f, 0x01,  124 },  //   15
  { 0x14, 0x00,  125 },  //   16
  { 0x14, 0x01,  126 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b8(dtaDeadkey_00000405_x00b8,
                                                     dtaDeadkey_00000405_x00b8 + 18);

//
// Keyboard 00000406 - Danish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000406_x00a8(dtaDeadkey_00000406_x00a8,
                                                     dtaDeadkey_00000406_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000406_x005e(dtaDeadkey_00000406_x005e,
                                                     dtaDeadkey_00000406_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000406_x007e(dtaDeadkey_00000406_x007e,
                                                     dtaDeadkey_00000406_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000406_x00b4(dtaDeadkey_00000406_x00b4,
                                                     dtaDeadkey_00000406_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000406_x0060(dtaDeadkey_00000406_x0060,
                                                     dtaDeadkey_00000406_x0060 + 12);

//
// Keyboard 00000407 - German deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000407_x005e(dtaDeadkey_00000407_x005e,
                                                     dtaDeadkey_00000407_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000407_x00b4(dtaDeadkey_00000407_x00b4,
                                                     dtaDeadkey_00000407_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000407_x0060(dtaDeadkey_00000407_x0060,
                                                     dtaDeadkey_00000407_x0060 + 12);

//
// Keyboard 00000408 - Greek deadkeys
//

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000408_x0385(dtaDeadkey_00000408_x0385,
                                                     dtaDeadkey_00000408_x0385 + 4);

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000408_x0384(dtaDeadkey_00000408_x0384,
                                                     dtaDeadkey_00000408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000408_x00a8(dtaDeadkey_00000408_x00a8,
                                                     dtaDeadkey_00000408_x00a8 + 6);

//
// Keyboard 0000040A - Spanish deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x007e(dtaDeadkey_0000040A_x007e,
                                                     dtaDeadkey_0000040A_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x0060(dtaDeadkey_0000040A_x0060,
                                                     dtaDeadkey_0000040A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x005e(dtaDeadkey_0000040A_x005e,
                                                     dtaDeadkey_0000040A_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x00b4(dtaDeadkey_0000040A_x00b4,
                                                     dtaDeadkey_0000040A_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x00a8(dtaDeadkey_0000040A_x00a8,
                                                     dtaDeadkey_0000040A_x00a8 + 13);

//
// Keyboard 0000040B - Finnish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x00a8(dtaDeadkey_0000040B_x00a8,
                                                     dtaDeadkey_0000040B_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x005e(dtaDeadkey_0000040B_x005e,
                                                     dtaDeadkey_0000040B_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x007e(dtaDeadkey_0000040B_x007e,
                                                     dtaDeadkey_0000040B_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x00b4(dtaDeadkey_0000040B_x00b4,
                                                     dtaDeadkey_0000040B_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x0060(dtaDeadkey_0000040B_x0060,
                                                     dtaDeadkey_0000040B_x0060 + 12);

//
// Keyboard 0000040C - French deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x007e(dtaDeadkey_0000040C_x007e,
                                                     dtaDeadkey_0000040C_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x0060(dtaDeadkey_0000040C_x0060,
                                                     dtaDeadkey_0000040C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x005e(dtaDeadkey_0000040C_x005e,
                                                     dtaDeadkey_0000040C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x00a8(dtaDeadkey_0000040C_x00a8,
                                                     dtaDeadkey_0000040C_x00a8 + 13);

//
// Keyboard 0000040E - Hungarian deadkeys
//

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02c7[18] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x31, 0x00,   14 },  //    8
  { 0x31, 0x01,   15 },  //    9
  { 0x13, 0x00,   16 },  //   10
  { 0x13, 0x01,   17 },  //   11
  { 0x1f, 0x00,   18 },  //   12
  { 0x1f, 0x01,   19 },  //   13
  { 0x14, 0x00,   20 },  //   14
  { 0x14, 0x01,   21 },  //   15
  { 0x15, 0x00,   22 },  //   16
  { 0x15, 0x01,   23 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02c7(dtaDeadkey_0000040E_x02c7,
                                                     dtaDeadkey_0000040E_x02c7 + 18);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x005e(dtaDeadkey_0000040E_x005e,
                                                     dtaDeadkey_0000040E_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02d8(dtaDeadkey_0000040E_x02d8,
                                                     dtaDeadkey_0000040E_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b0(dtaDeadkey_0000040E_x00b0,
                                                     dtaDeadkey_0000040E_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02db(dtaDeadkey_0000040E_x02db,
                                                     dtaDeadkey_0000040E_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02d9(dtaDeadkey_0000040E_x02d9,
                                                     dtaDeadkey_0000040E_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b4(dtaDeadkey_0000040E_x00b4,
                                                     dtaDeadkey_0000040E_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b8(dtaDeadkey_0000040E_x00b8,
                                                     dtaDeadkey_0000040E_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00a8(dtaDeadkey_0000040E_x00a8,
                                                     dtaDeadkey_0000040E_x00a8 + 10);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02dd(dtaDeadkey_0000040E_x02dd,
                                                     dtaDeadkey_0000040E_x02dd + 6);

//
// Keyboard 0000040F - Icelandic deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x0060(dtaDeadkey_0000040F_x0060,
                                                     dtaDeadkey_0000040F_x0060 + 12);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00b0(dtaDeadkey_0000040F_x00b0,
                                                     dtaDeadkey_0000040F_x00b0 + 4);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00a8(dtaDeadkey_0000040F_x00a8,
                                                     dtaDeadkey_0000040F_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00b4(dtaDeadkey_0000040F_x00b4,
                                                     dtaDeadkey_0000040F_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x005e(dtaDeadkey_0000040F_x005e,
                                                     dtaDeadkey_0000040F_x005e + 12);

//
// Keyboard 00000413 - Dutch deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000413_x007e(dtaDeadkey_00000413_x007e,
                                                     dtaDeadkey_00000413_x007e + 8);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00b8[4] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00b8(dtaDeadkey_00000413_x00b8,
                                                     dtaDeadkey_00000413_x00b8 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00b4(dtaDeadkey_00000413_x00b4,
                                                     dtaDeadkey_00000413_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000413_x0060(dtaDeadkey_00000413_x0060,
                                                     dtaDeadkey_00000413_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00a8(dtaDeadkey_00000413_x00a8,
                                                     dtaDeadkey_00000413_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000413_x005e(dtaDeadkey_00000413_x005e,
                                                     dtaDeadkey_00000413_x005e + 12);

//
// Keyboard 00000414 - Norwegian deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000414_x00a8(dtaDeadkey_00000414_x00a8,
                                                     dtaDeadkey_00000414_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000414_x005e(dtaDeadkey_00000414_x005e,
                                                     dtaDeadkey_00000414_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000414_x007e(dtaDeadkey_00000414_x007e,
                                                     dtaDeadkey_00000414_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000414_x0060(dtaDeadkey_00000414_x0060,
                                                     dtaDeadkey_00000414_x0060 + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000414_x00b4(dtaDeadkey_00000414_x00b4,
                                                     dtaDeadkey_00000414_x00b4 + 14);

//
// Keyboard 00000415 - Polish (Programmers) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000415_x007e[20] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   48 },  //    6
  { 0x12, 0x01,   49 },  //    7
  { 0x26, 0x00,  157 },  //    8
  { 0x26, 0x01,  158 },  //    9
  { 0x31, 0x00,   83 },  //   10
  { 0x31, 0x01,   84 },  //   11
  { 0x18, 0x00,   85 },  //   12
  { 0x18, 0x01,   86 },  //   13
  { 0x1f, 0x00,   89 },  //   14
  { 0x1f, 0x01,   90 },  //   15
  { 0x2d, 0x00,   95 },  //   16
  { 0x2d, 0x01,   96 },  //   17
  { 0x2c, 0x00,   70 },  //   18
  { 0x2c, 0x01,   71 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000415_x007e(dtaDeadkey_00000415_x007e,
                                                     dtaDeadkey_00000415_x007e + 20);

//
// Keyboard 00000416 - Portuguese (Brazilian ABNT) deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000416_x00a8(dtaDeadkey_00000416_x00a8,
                                                     dtaDeadkey_00000416_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000416_x00b4(dtaDeadkey_00000416_x00b4,
                                                     dtaDeadkey_00000416_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000416_x0060(dtaDeadkey_00000416_x0060,
                                                     dtaDeadkey_00000416_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000416_x007e(dtaDeadkey_00000416_x007e,
                                                     dtaDeadkey_00000416_x007e + 8);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000416_x005e(dtaDeadkey_00000416_x005e,
                                                     dtaDeadkey_00000416_x005e + 12);

//
// Keyboard 00000418 - Romanian (Legacy) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02dd(dtaDeadkey_00000418_x02dd,
                                                     dtaDeadkey_00000418_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02c7(dtaDeadkey_00000418_x02c7,
                                                     dtaDeadkey_00000418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000418_x005e(dtaDeadkey_00000418_x005e,
                                                     dtaDeadkey_00000418_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02d8(dtaDeadkey_00000418_x02d8,
                                                     dtaDeadkey_00000418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b0(dtaDeadkey_00000418_x00b0,
                                                     dtaDeadkey_00000418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02db(dtaDeadkey_00000418_x02db,
                                                     dtaDeadkey_00000418_x02db + 6);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b7[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b7(dtaDeadkey_00000418_x00b7,
                                                     dtaDeadkey_00000418_x00b7 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b4(dtaDeadkey_00000418_x00b4,
                                                     dtaDeadkey_00000418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  159 },  //    4
  { 0x1f, 0x01,  160 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b8(dtaDeadkey_00000418_x00b8,
                                                     dtaDeadkey_00000418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00a8(dtaDeadkey_00000418_x00a8,
                                                     dtaDeadkey_00000418_x00a8 + 10);

//
// Keyboard 0000041A - Croatian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02dd(dtaDeadkey_0000041A_x02dd,
                                                     dtaDeadkey_0000041A_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02c7(dtaDeadkey_0000041A_x02c7,
                                                     dtaDeadkey_0000041A_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x005e(dtaDeadkey_0000041A_x005e,
                                                     dtaDeadkey_0000041A_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02d8(dtaDeadkey_0000041A_x02d8,
                                                     dtaDeadkey_0000041A_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b0(dtaDeadkey_0000041A_x00b0,
                                                     dtaDeadkey_0000041A_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02db(dtaDeadkey_0000041A_x02db,
                                                     dtaDeadkey_0000041A_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02d9(dtaDeadkey_0000041A_x02d9,
                                                     dtaDeadkey_0000041A_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b4(dtaDeadkey_0000041A_x00b4,
                                                     dtaDeadkey_0000041A_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b8(dtaDeadkey_0000041A_x00b8,
                                                     dtaDeadkey_0000041A_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00a8(dtaDeadkey_0000041A_x00a8,
                                                     dtaDeadkey_0000041A_x00a8 + 10);

//
// Keyboard 0000041B - Slovak deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02dd(dtaDeadkey_0000041B_x02dd,
                                                     dtaDeadkey_0000041B_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02c7(dtaDeadkey_0000041B_x02c7,
                                                     dtaDeadkey_0000041B_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x005e(dtaDeadkey_0000041B_x005e,
                                                     dtaDeadkey_0000041B_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02d8(dtaDeadkey_0000041B_x02d8,
                                                     dtaDeadkey_0000041B_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b0(dtaDeadkey_0000041B_x00b0,
                                                     dtaDeadkey_0000041B_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02db(dtaDeadkey_0000041B_x02db,
                                                     dtaDeadkey_0000041B_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02d9(dtaDeadkey_0000041B_x02d9,
                                                     dtaDeadkey_0000041B_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b4(dtaDeadkey_0000041B_x00b4,
                                                     dtaDeadkey_0000041B_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x18, 0x00,  104 },  //    4
  { 0x18, 0x01,  105 },  //    5
  { 0x16, 0x00,  106 },  //    6
  { 0x16, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00a8(dtaDeadkey_0000041B_x00a8,
                                                     dtaDeadkey_0000041B_x00a8 + 8);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b8(dtaDeadkey_0000041B_x00b8,
                                                     dtaDeadkey_0000041B_x00b8 + 8);

//
// Keyboard 0000041C - Albanian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02dd(dtaDeadkey_0000041C_x02dd,
                                                     dtaDeadkey_0000041C_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02c7(dtaDeadkey_0000041C_x02c7,
                                                     dtaDeadkey_0000041C_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x005e(dtaDeadkey_0000041C_x005e,
                                                     dtaDeadkey_0000041C_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02d8(dtaDeadkey_0000041C_x02d8,
                                                     dtaDeadkey_0000041C_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b0(dtaDeadkey_0000041C_x00b0,
                                                     dtaDeadkey_0000041C_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02db(dtaDeadkey_0000041C_x02db,
                                                     dtaDeadkey_0000041C_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02d9(dtaDeadkey_0000041C_x02d9,
                                                     dtaDeadkey_0000041C_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b4(dtaDeadkey_0000041C_x00b4,
                                                     dtaDeadkey_0000041C_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b8(dtaDeadkey_0000041C_x00b8,
                                                     dtaDeadkey_0000041C_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00a8(dtaDeadkey_0000041C_x00a8,
                                                     dtaDeadkey_0000041C_x00a8 + 10);

//
// Keyboard 0000041D - Swedish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x00a8(dtaDeadkey_0000041D_x00a8,
                                                     dtaDeadkey_0000041D_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x005e(dtaDeadkey_0000041D_x005e,
                                                     dtaDeadkey_0000041D_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x007e(dtaDeadkey_0000041D_x007e,
                                                     dtaDeadkey_0000041D_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x00b4(dtaDeadkey_0000041D_x00b4,
                                                     dtaDeadkey_0000041D_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x0060(dtaDeadkey_0000041D_x0060,
                                                     dtaDeadkey_0000041D_x0060 + 12);

//
// Keyboard 0000041F - Turkish Q deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x005e[14] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
  { 0x28, 0x00,   29 },  //   12
  { 0x28, 0x01,   30 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x005e(dtaDeadkey_0000041F_x005e,
                                                     dtaDeadkey_0000041F_x005e + 14);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x28, 0x00,   79 },  //   12
  { 0x28, 0x01,   80 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x00b4(dtaDeadkey_0000041F_x00b4,
                                                     dtaDeadkey_0000041F_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x28, 0x00,   59 },  //   12
  { 0x28, 0x01,   60 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x0060(dtaDeadkey_0000041F_x0060,
                                                     dtaDeadkey_0000041F_x0060 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x28, 0x00,  102 },  //   12
  { 0x28, 0x01,  103 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x00a8(dtaDeadkey_0000041F_x00a8,
                                                     dtaDeadkey_0000041F_x00a8 + 14);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x007e(dtaDeadkey_0000041F_x007e,
                                                     dtaDeadkey_0000041F_x007e + 8);

//
// Keyboard 00000424 - Slovenian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02dd(dtaDeadkey_00000424_x02dd,
                                                     dtaDeadkey_00000424_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02c7(dtaDeadkey_00000424_x02c7,
                                                     dtaDeadkey_00000424_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000424_x005e(dtaDeadkey_00000424_x005e,
                                                     dtaDeadkey_00000424_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02d8(dtaDeadkey_00000424_x02d8,
                                                     dtaDeadkey_00000424_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b0(dtaDeadkey_00000424_x00b0,
                                                     dtaDeadkey_00000424_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02db(dtaDeadkey_00000424_x02db,
                                                     dtaDeadkey_00000424_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02d9(dtaDeadkey_00000424_x02d9,
                                                     dtaDeadkey_00000424_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b4(dtaDeadkey_00000424_x00b4,
                                                     dtaDeadkey_00000424_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b8(dtaDeadkey_00000424_x00b8,
                                                     dtaDeadkey_00000424_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00a8(dtaDeadkey_00000424_x00a8,
                                                     dtaDeadkey_00000424_x00a8 + 10);

//
// Keyboard 00000425 - Estonian deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x1f, 0x00,   89 },  //   10
  { 0x1f, 0x01,   90 },  //   11
  { 0x2c, 0x00,   95 },  //   12
  { 0x2c, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000425_x00b4(dtaDeadkey_00000425_x00b4,
                                                     dtaDeadkey_00000425_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x0060[10] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x18, 0x00,   61 },  //    6
  { 0x18, 0x01,   62 },  //    7
  { 0x16, 0x00,   63 },  //    8
  { 0x16, 0x01,   64 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000425_x0060(dtaDeadkey_00000425_x0060,
                                                     dtaDeadkey_00000425_x0060 + 10);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x22, 0x00,  161 },  //    6
  { 0x22, 0x01,  162 },  //    7
  { 0x17, 0x00,   29 },  //    8
  { 0x17, 0x01,   30 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000425_x005e(dtaDeadkey_00000425_x005e,
                                                     dtaDeadkey_00000425_x005e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x02c7[8] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x1f, 0x00,   18 },  //    4
  { 0x1f, 0x01,   19 },  //    5
  { 0x2c, 0x00,   22 },  //    6
  { 0x2c, 0x01,   23 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000425_x02c7(dtaDeadkey_00000425_x02c7,
                                                     dtaDeadkey_00000425_x02c7 + 8);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x18, 0x00,  132 },  //    2
  { 0x18, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000425_x007e(dtaDeadkey_00000425_x007e,
                                                     dtaDeadkey_00000425_x007e + 4);

//
// Keyboard 00000426 - Latvian deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x31, 0x00,  132 },  //    2
  { 0x31, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000426_x007e(dtaDeadkey_00000426_x007e,
                                                     dtaDeadkey_00000426_x007e + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x27, 0x00,   75 },  //    2
  { 0x27, 0x01,   76 },  //    3
  { 0x26, 0x00,   77 },  //    4
  { 0x26, 0x01,   78 },  //    5
  { 0x16, 0x00,   83 },  //    6
  { 0x16, 0x01,   84 },  //    7
  { 0x31, 0x00,   85 },  //    8
  { 0x31, 0x01,   86 },  //    9
  { 0x20, 0x00,   89 },  //   10
  { 0x20, 0x01,   90 },  //   11
  { 0x17, 0x00,   95 },  //   12
  { 0x17, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00b4(dtaDeadkey_00000426_x00b4,
                                                     dtaDeadkey_00000426_x00b4 + 14);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00b0[9] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x24, 0x00,   41 },  //    2
  { 0x24, 0x01,   42 },  //    3
  { 0x26, 0x00,   66 },  //    4
  { 0x26, 0x01,   67 },  //    5
  { 0x11, 0x00,  163 },  //    6
  { 0x17, 0x00,   70 },  //    7
  { 0x17, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00b0(dtaDeadkey_00000426_x00b0,
                                                     dtaDeadkey_00000426_x00b0 + 9);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x24, 0x00,   98 },  //    2
  { 0x24, 0x01,   99 },  //    3
  { 0x31, 0x00,  104 },  //    4
  { 0x31, 0x01,  105 },  //    5
  { 0x1f, 0x00,  106 },  //    6
  { 0x1f, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00a8(dtaDeadkey_00000426_x00a8,
                                                     dtaDeadkey_00000426_x00a8 + 8);

//
// Keyboard 0000042E - Sorbian Standard (Legacy) deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x18, 0x00,   32 },  //   12
  { 0x18, 0x01,   31 },  //   13
  { 0x13, 0x00,   16 },  //   14
  { 0x13, 0x01,   17 },  //   15
  { 0x1f, 0x00,   18 },  //   16
  { 0x1f, 0x01,   19 },  //   17
  { 0x14, 0x00,   20 },  //   18
  { 0x14, 0x01,   21 },  //   19
  { 0x15, 0x00,   22 },  //   20
  { 0x15, 0x01,   23 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x005e(dtaDeadkey_0000042E_x005e,
                                                     dtaDeadkey_0000042E_x005e + 22);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x00b0[9] = {
  { 0x39, 0x00,  164 },  //    0
  { 0x39, 0x01,  164 },  //    1
  { 0x12, 0x00,   66 },  //    2
  { 0x12, 0x01,   67 },  //    3
  { 0x1f, 0x00,  165 },  //    4
  { 0x16, 0x00,   43 },  //    5
  { 0x16, 0x01,   44 },  //    6
  { 0x15, 0x00,   70 },  //    7
  { 0x15, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x00b0(dtaDeadkey_0000042E_x00b0,
                                                     dtaDeadkey_0000042E_x00b0 + 9);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x00b4[28] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x20, 0x00,  166 },  //    6
  { 0x20, 0x01,  167 },  //    7
  { 0x12, 0x00,   77 },  //    8
  { 0x12, 0x01,   78 },  //    9
  { 0x17, 0x00,   79 },  //   10
  { 0x17, 0x01,   80 },  //   11
  { 0x26, 0x00,   81 },  //   12
  { 0x26, 0x01,   82 },  //   13
  { 0x31, 0x00,   83 },  //   14
  { 0x31, 0x01,   84 },  //   15
  { 0x18, 0x00,   85 },  //   16
  { 0x18, 0x01,   86 },  //   17
  { 0x13, 0x00,   87 },  //   18
  { 0x13, 0x01,   88 },  //   19
  { 0x1f, 0x00,   89 },  //   20
  { 0x1f, 0x01,   90 },  //   21
  { 0x16, 0x00,   91 },  //   22
  { 0x16, 0x01,   92 },  //   23
  { 0x2c, 0x00,   93 },  //   24
  { 0x2c, 0x01,   94 },  //   25
  { 0x15, 0x00,   95 },  //   26
  { 0x15, 0x01,   96 },  //   27
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x00b4(dtaDeadkey_0000042E_x00b4,
                                                     dtaDeadkey_0000042E_x00b4 + 28);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x0060[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   57 },  //    6
  { 0x12, 0x01,   58 },  //    7
  { 0x17, 0x00,   59 },  //    8
  { 0x17, 0x01,   60 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x1f, 0x00,  123 },  //   12
  { 0x1f, 0x01,  124 },  //   13
  { 0x16, 0x00,   63 },  //   14
  { 0x16, 0x01,   64 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x0060(dtaDeadkey_0000042E_x0060,
                                                     dtaDeadkey_0000042E_x0060 + 16);

//
// Keyboard 00000432 - Setswana deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000432_x005e(dtaDeadkey_00000432_x005e,
                                                     dtaDeadkey_00000432_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0060(dtaDeadkey_00000432_x0060,
                                                     dtaDeadkey_00000432_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000432_x007e(dtaDeadkey_00000432_x007e,
                                                     dtaDeadkey_00000432_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0027(dtaDeadkey_00000432_x0027,
                                                     dtaDeadkey_00000432_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0022(dtaDeadkey_00000432_x0022,
                                                     dtaDeadkey_00000432_x0022 + 13);

//
// Keyboard 00000438 - Faeroese deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000438_x007e(dtaDeadkey_00000438_x007e,
                                                     dtaDeadkey_00000438_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000438_x00b4(dtaDeadkey_00000438_x00b4,
                                                     dtaDeadkey_00000438_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000438_x0060(dtaDeadkey_00000438_x0060,
                                                     dtaDeadkey_00000438_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000438_x00a8(dtaDeadkey_00000438_x00a8,
                                                     dtaDeadkey_00000438_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000438_x005e(dtaDeadkey_00000438_x005e,
                                                     dtaDeadkey_00000438_x005e + 12);

//
// Keyboard 0000043B - Norwegian with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x00a8(dtaDeadkey_0000043B_x00a8,
                                                     dtaDeadkey_0000043B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x005e(dtaDeadkey_0000043B_x005e,
                                                     dtaDeadkey_0000043B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x007e(dtaDeadkey_0000043B_x007e,
                                                     dtaDeadkey_0000043B_x007e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x0060(dtaDeadkey_0000043B_x0060,
                                                     dtaDeadkey_0000043B_x0060 + 16);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x00b4[34] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x27, 0x00,  194 },  //   28
  { 0x27, 0x01,  195 },  //   29
  { 0x1a, 0x00,  196 },  //   30
  { 0x1a, 0x01,  197 },  //   31
  { 0x28, 0x00,  198 },  //   32
  { 0x28, 0x01,  199 },  //   33
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x00b4(dtaDeadkey_0000043B_x00b4,
                                                     dtaDeadkey_0000043B_x00b4 + 34);

//
// Keyboard 00000452 - United Kingdom Extended deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x00a8(dtaDeadkey_00000452_x00a8,
                                                     dtaDeadkey_00000452_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x005e[16] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
  { 0x11, 0x00,  180 },  //   12
  { 0x11, 0x01,  181 },  //   13
  { 0x15, 0x00,  182 },  //   14
  { 0x15, 0x01,  183 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x005e(dtaDeadkey_00000452_x005e,
                                                     dtaDeadkey_00000452_x005e + 16);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x11, 0x00,  192 },  //   12
  { 0x11, 0x01,  193 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x00b4(dtaDeadkey_00000452_x00b4,
                                                     dtaDeadkey_00000452_x00b4 + 16);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000452_x007e(dtaDeadkey_00000452_x007e,
                                                     dtaDeadkey_00000452_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x0060(dtaDeadkey_00000452_x0060,
                                                     dtaDeadkey_00000452_x0060 + 16);

//
// Keyboard 0000046A - Yoruba deadkeys
//

// Deadkey 0x005b
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x005b[14] = {
  { 0x39, 0x00,  200 },  //    0
  { 0x39, 0x01,  200 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x31, 0x00,  201 },  //    8
  { 0x31, 0x01,  202 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x16, 0x00,   63 },  //   12
  { 0x16, 0x01,   64 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x005b(dtaDeadkey_0000046A_x005b,
                                                     dtaDeadkey_0000046A_x005b + 14);

// Deadkey 0x005c
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x005c[8] = {
  { 0x39, 0x00,  203 },  //    0
  { 0x39, 0x01,  203 },  //    1
  { 0x12, 0x00,  204 },  //    2
  { 0x12, 0x01,  205 },  //    3
  { 0x18, 0x00,  206 },  //    4
  { 0x18, 0x01,  207 },  //    5
  { 0x1f, 0x00,  208 },  //    6
  { 0x1f, 0x01,  209 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x005c(dtaDeadkey_0000046A_x005c,
                                                     dtaDeadkey_0000046A_x005c + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x0027[14] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x31, 0x00,   83 },  //    8
  { 0x31, 0x01,   84 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x0027(dtaDeadkey_0000046A_x0027,
                                                     dtaDeadkey_0000046A_x0027 + 14);

//
// Keyboard 0000046C - Sesotho sa Leboa deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x005e(dtaDeadkey_0000046C_x005e,
                                                     dtaDeadkey_0000046C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0060(dtaDeadkey_0000046C_x0060,
                                                     dtaDeadkey_0000046C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x007e(dtaDeadkey_0000046C_x007e,
                                                     dtaDeadkey_0000046C_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0027(dtaDeadkey_0000046C_x0027,
                                                     dtaDeadkey_0000046C_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0022(dtaDeadkey_0000046C_x0022,
                                                     dtaDeadkey_0000046C_x0022 + 13);

//
// Keyboard 00000470 - Igbo deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000470_x005e(dtaDeadkey_00000470_x005e,
                                                     dtaDeadkey_00000470_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x31, 0x00,  201 },  //    8
  { 0x31, 0x01,  202 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x16, 0x00,   63 },  //   12
  { 0x16, 0x01,   64 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000470_x0060(dtaDeadkey_00000470_x0060,
                                                     dtaDeadkey_00000470_x0060 + 14);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x007e[16] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x32, 0x00,  220 },  //    8
  { 0x32, 0x01,  221 },  //    9
  { 0x31, 0x00,   83 },  //   10
  { 0x31, 0x01,   84 },  //   11
  { 0x18, 0x00,   85 },  //   12
  { 0x18, 0x01,   86 },  //   13
  { 0x16, 0x00,   91 },  //   14
  { 0x16, 0x01,   92 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000470_x007e(dtaDeadkey_00000470_x007e,
                                                     dtaDeadkey_00000470_x007e + 16);

//
// Keyboard 00000481 - Maori deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000481_x0060[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000481_x0060(dtaDeadkey_00000481_x0060,
                                                     dtaDeadkey_00000481_x0060 + 12);

//
// Keyboard 00000488 - Wolof deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000488_x007e(dtaDeadkey_00000488_x007e,
                                                     dtaDeadkey_00000488_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000488_x0060(dtaDeadkey_00000488_x0060,
                                                     dtaDeadkey_00000488_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000488_x005e(dtaDeadkey_00000488_x005e,
                                                     dtaDeadkey_00000488_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000488_x00a8(dtaDeadkey_00000488_x00a8,
                                                     dtaDeadkey_00000488_x00a8 + 13);

//
// Keyboard 00000807 - Swiss German deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000807_x00a8(dtaDeadkey_00000807_x00a8,
                                                     dtaDeadkey_00000807_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000807_x00b4(dtaDeadkey_00000807_x00b4,
                                                     dtaDeadkey_00000807_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000807_x005e(dtaDeadkey_00000807_x005e,
                                                     dtaDeadkey_00000807_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000807_x0060(dtaDeadkey_00000807_x0060,
                                                     dtaDeadkey_00000807_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000807_x007e(dtaDeadkey_00000807_x007e,
                                                     dtaDeadkey_00000807_x007e + 8);

//
// Keyboard 0000080A - Latin American deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x00b4(dtaDeadkey_0000080A_x00b4,
                                                     dtaDeadkey_0000080A_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x00a8(dtaDeadkey_0000080A_x00a8,
                                                     dtaDeadkey_0000080A_x00a8 + 13);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x0060(dtaDeadkey_0000080A_x0060,
                                                     dtaDeadkey_0000080A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x005e(dtaDeadkey_0000080A_x005e,
                                                     dtaDeadkey_0000080A_x005e + 12);

//
// Keyboard 0000080C - Belgian French deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x007e(dtaDeadkey_0000080C_x007e,
                                                     dtaDeadkey_0000080C_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x00b4(dtaDeadkey_0000080C_x00b4,
                                                     dtaDeadkey_0000080C_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x0060(dtaDeadkey_0000080C_x0060,
                                                     dtaDeadkey_0000080C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x005e(dtaDeadkey_0000080C_x005e,
                                                     dtaDeadkey_0000080C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x00a8(dtaDeadkey_0000080C_x00a8,
                                                     dtaDeadkey_0000080C_x00a8 + 13);

//
// Keyboard 00000813 - Belgian (Period) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000813_x007e(dtaDeadkey_00000813_x007e,
                                                     dtaDeadkey_00000813_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000813_x00b4(dtaDeadkey_00000813_x00b4,
                                                     dtaDeadkey_00000813_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000813_x0060(dtaDeadkey_00000813_x0060,
                                                     dtaDeadkey_00000813_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000813_x005e(dtaDeadkey_00000813_x005e,
                                                     dtaDeadkey_00000813_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000813_x00a8(dtaDeadkey_00000813_x00a8,
                                                     dtaDeadkey_00000813_x00a8 + 13);

//
// Keyboard 00000816 - Portuguese deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000816_x00b4(dtaDeadkey_00000816_x00b4,
                                                     dtaDeadkey_00000816_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000816_x0060(dtaDeadkey_00000816_x0060,
                                                     dtaDeadkey_00000816_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000816_x00a8(dtaDeadkey_00000816_x00a8,
                                                     dtaDeadkey_00000816_x00a8 + 13);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000816_x007e(dtaDeadkey_00000816_x007e,
                                                     dtaDeadkey_00000816_x007e + 8);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000816_x005e(dtaDeadkey_00000816_x005e,
                                                     dtaDeadkey_00000816_x005e + 12);

//
// Keyboard 0000081A - Serbian (Latin) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02dd(dtaDeadkey_0000081A_x02dd,
                                                     dtaDeadkey_0000081A_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02c7(dtaDeadkey_0000081A_x02c7,
                                                     dtaDeadkey_0000081A_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x005e(dtaDeadkey_0000081A_x005e,
                                                     dtaDeadkey_0000081A_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02d8(dtaDeadkey_0000081A_x02d8,
                                                     dtaDeadkey_0000081A_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b0(dtaDeadkey_0000081A_x00b0,
                                                     dtaDeadkey_0000081A_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02db(dtaDeadkey_0000081A_x02db,
                                                     dtaDeadkey_0000081A_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02d9(dtaDeadkey_0000081A_x02d9,
                                                     dtaDeadkey_0000081A_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b4(dtaDeadkey_0000081A_x00b4,
                                                     dtaDeadkey_0000081A_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b8(dtaDeadkey_0000081A_x00b8,
                                                     dtaDeadkey_0000081A_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00a8(dtaDeadkey_0000081A_x00a8,
                                                     dtaDeadkey_0000081A_x00a8 + 10);

// Deadkey 0x201a
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x201a[6] = {
  { 0x39, 0x00,  222 },  //    0
  { 0x39, 0x01,  222 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x201a(dtaDeadkey_0000081A_x201a,
                                                     dtaDeadkey_0000081A_x201a + 6);

//
// Keyboard 0000083B - Swedish with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x00a8(dtaDeadkey_0000083B_x00a8,
                                                     dtaDeadkey_0000083B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x005e(dtaDeadkey_0000083B_x005e,
                                                     dtaDeadkey_0000083B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x007e(dtaDeadkey_0000083B_x007e,
                                                     dtaDeadkey_0000083B_x007e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x1a, 0x00,  196 },  //   28
  { 0x1a, 0x01,  197 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x00b4(dtaDeadkey_0000083B_x00b4,
                                                     dtaDeadkey_0000083B_x00b4 + 30);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x0060(dtaDeadkey_0000083B_x0060,
                                                     dtaDeadkey_0000083B_x0060 + 16);

//
// Keyboard 00000C0C - Canadian French (Legacy) deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00b4(dtaDeadkey_00000C0C_x00b4,
                                                     dtaDeadkey_00000C0C_x00b4 + 14);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00b8[2] = {
  { 0x2e, 0x00,  111 },  //    0
  { 0x2e, 0x01,  112 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00b8(dtaDeadkey_00000C0C_x00b8,
                                                     dtaDeadkey_00000C0C_x00b8 + 2);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x005e(dtaDeadkey_00000C0C_x005e,
                                                     dtaDeadkey_00000C0C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x0060(dtaDeadkey_00000C0C_x0060,
                                                     dtaDeadkey_00000C0C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x007e(dtaDeadkey_00000C0C_x007e,
                                                     dtaDeadkey_00000C0C_x007e + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00a8(dtaDeadkey_00000C0C_x00a8,
                                                     dtaDeadkey_00000C0C_x00a8 + 13);

//
// Keyboard 00000C1A - Serbian (Cyrillic) deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00000C1A_x0027[6] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x22, 0x00,  223 },  //    2
  { 0x22, 0x01,  224 },  //    3
  { 0x25, 0x00,  225 },  //    4
  { 0x25, 0x01,  226 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000C1A_x0027(dtaDeadkey_00000C1A_x0027,
                                                     dtaDeadkey_00000C1A_x0027 + 6);

//
// Keyboard 00001009 - Canadian French deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00b4(dtaDeadkey_00001009_x00b4,
                                                     dtaDeadkey_00001009_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001009_x0060(dtaDeadkey_00001009_x0060,
                                                     dtaDeadkey_00001009_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001009_x005e(dtaDeadkey_00001009_x005e,
                                                     dtaDeadkey_00001009_x005e + 12);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00b8[4] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00b8(dtaDeadkey_00001009_x00b8,
                                                     dtaDeadkey_00001009_x00b8 + 4);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00a8(dtaDeadkey_00001009_x00a8,
                                                     dtaDeadkey_00001009_x00a8 + 13);

//
// Keyboard 0000100C - Swiss French deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x00a8[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x00a8(dtaDeadkey_0000100C_x00a8,
                                                     dtaDeadkey_0000100C_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x00b4(dtaDeadkey_0000100C_x00b4,
                                                     dtaDeadkey_0000100C_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x005e(dtaDeadkey_0000100C_x005e,
                                                     dtaDeadkey_0000100C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x0060(dtaDeadkey_0000100C_x0060,
                                                     dtaDeadkey_0000100C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x007e(dtaDeadkey_0000100C_x007e,
                                                     dtaDeadkey_0000100C_x007e + 8);

//
// Keyboard 00001809 - Irish deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00001809_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00001809_x00b4(dtaDeadkey_00001809_x00b4,
                                                     dtaDeadkey_00001809_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00001809_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001809_x0060(dtaDeadkey_00001809_x0060,
                                                     dtaDeadkey_00001809_x0060 + 12);

//
// Keyboard 0000201A - Bosnian (Cyrillic) deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000201A_x0027[6] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x22, 0x00,  223 },  //    2
  { 0x22, 0x01,  224 },  //    3
  { 0x25, 0x00,  225 },  //    4
  { 0x25, 0x01,  226 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000201A_x0027(dtaDeadkey_0000201A_x0027,
                                                     dtaDeadkey_0000201A_x0027 + 6);

//
// Keyboard 00010405 - Czech (QWERTY) deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00b4(dtaDeadkey_00010405_x00b4,
                                                     dtaDeadkey_00010405_x00b4 + 26);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00010405_x02c7(dtaDeadkey_00010405_x02c7,
                                                     dtaDeadkey_00010405_x02c7 + 20);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00b0(dtaDeadkey_00010405_x00b0,
                                                     dtaDeadkey_00010405_x00b0 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00a8(dtaDeadkey_00010405_x00a8,
                                                     dtaDeadkey_00010405_x00a8 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010405_x005e(dtaDeadkey_00010405_x005e,
                                                     dtaDeadkey_00010405_x005e + 12);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010405_x02dd(dtaDeadkey_00010405_x02dd,
                                                     dtaDeadkey_00010405_x02dd + 6);

//
// Keyboard 00010407 - German (IBM) deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010407_x005e(dtaDeadkey_00010407_x005e,
                                                     dtaDeadkey_00010407_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010407_x00b4(dtaDeadkey_00010407_x00b4,
                                                     dtaDeadkey_00010407_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010407_x0060(dtaDeadkey_00010407_x0060,
                                                     dtaDeadkey_00010407_x0060 + 12);

//
// Keyboard 00010408 - Greek (220) deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00010408_x0384(dtaDeadkey_00010408_x0384,
                                                     dtaDeadkey_00010408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010408_x00a8(dtaDeadkey_00010408_x00a8,
                                                     dtaDeadkey_00010408_x00a8 + 6);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010408_x0385(dtaDeadkey_00010408_x0385,
                                                     dtaDeadkey_00010408_x0385 + 4);

//
// Keyboard 0001040A - Spanish Variation deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x0060(dtaDeadkey_0001040A_x0060,
                                                     dtaDeadkey_0001040A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x005e(dtaDeadkey_0001040A_x005e,
                                                     dtaDeadkey_0001040A_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x00b4[13] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x00b4(dtaDeadkey_0001040A_x00b4,
                                                     dtaDeadkey_0001040A_x00b4 + 13);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x00a8(dtaDeadkey_0001040A_x00a8,
                                                     dtaDeadkey_0001040A_x00a8 + 13);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x007e(dtaDeadkey_0001040A_x007e,
                                                     dtaDeadkey_0001040A_x007e + 8);

//
// Keyboard 00010415 - Polish (214) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02dd(dtaDeadkey_00010415_x02dd,
                                                     dtaDeadkey_00010415_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02c7[18] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x31, 0x00,   14 },  //    8
  { 0x31, 0x01,   15 },  //    9
  { 0x13, 0x00,   16 },  //   10
  { 0x13, 0x01,   17 },  //   11
  { 0x1f, 0x00,   18 },  //   12
  { 0x1f, 0x01,   19 },  //   13
  { 0x14, 0x00,   20 },  //   14
  { 0x14, 0x01,   21 },  //   15
  { 0x15, 0x00,   22 },  //   16
  { 0x15, 0x01,   23 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02c7(dtaDeadkey_00010415_x02c7,
                                                     dtaDeadkey_00010415_x02c7 + 18);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010415_x005e(dtaDeadkey_00010415_x005e,
                                                     dtaDeadkey_00010415_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02d8(dtaDeadkey_00010415_x02d8,
                                                     dtaDeadkey_00010415_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b0(dtaDeadkey_00010415_x00b0,
                                                     dtaDeadkey_00010415_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02db(dtaDeadkey_00010415_x02db,
                                                     dtaDeadkey_00010415_x02db + 6);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b7[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b7(dtaDeadkey_00010415_x00b7,
                                                     dtaDeadkey_00010415_x00b7 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b4(dtaDeadkey_00010415_x00b4,
                                                     dtaDeadkey_00010415_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00a8(dtaDeadkey_00010415_x00a8,
                                                     dtaDeadkey_00010415_x00a8 + 10);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b8(dtaDeadkey_00010415_x00b8,
                                                     dtaDeadkey_00010415_x00b8 + 8);

//
// Keyboard 00010418 - Romanian (Standard) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02dd(dtaDeadkey_00010418_x02dd,
                                                     dtaDeadkey_00010418_x02dd + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x007e[2] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00010418_x007e(dtaDeadkey_00010418_x007e,
                                                     dtaDeadkey_00010418_x007e + 2);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02c7(dtaDeadkey_00010418_x02c7,
                                                     dtaDeadkey_00010418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010418_x005e(dtaDeadkey_00010418_x005e,
                                                     dtaDeadkey_00010418_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02d8(dtaDeadkey_00010418_x02d8,
                                                     dtaDeadkey_00010418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b0(dtaDeadkey_00010418_x00b0,
                                                     dtaDeadkey_00010418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02db(dtaDeadkey_00010418_x02db,
                                                     dtaDeadkey_00010418_x02db + 6);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010418_x0060(dtaDeadkey_00010418_x0060,
                                                     dtaDeadkey_00010418_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02d9(dtaDeadkey_00010418_x02d9,
                                                     dtaDeadkey_00010418_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b4(dtaDeadkey_00010418_x00b4,
                                                     dtaDeadkey_00010418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b8(dtaDeadkey_00010418_x00b8,
                                                     dtaDeadkey_00010418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00a8(dtaDeadkey_00010418_x00a8,
                                                     dtaDeadkey_00010418_x00a8 + 14);

//
// Keyboard 0001041B - Slovak (QWERTY) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02dd(dtaDeadkey_0001041B_x02dd,
                                                     dtaDeadkey_0001041B_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02c7(dtaDeadkey_0001041B_x02c7,
                                                     dtaDeadkey_0001041B_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x005e(dtaDeadkey_0001041B_x005e,
                                                     dtaDeadkey_0001041B_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02d8(dtaDeadkey_0001041B_x02d8,
                                                     dtaDeadkey_0001041B_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b0(dtaDeadkey_0001041B_x00b0,
                                                     dtaDeadkey_0001041B_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02db(dtaDeadkey_0001041B_x02db,
                                                     dtaDeadkey_0001041B_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02d9(dtaDeadkey_0001041B_x02d9,
                                                     dtaDeadkey_0001041B_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b4(dtaDeadkey_0001041B_x00b4,
                                                     dtaDeadkey_0001041B_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b8(dtaDeadkey_0001041B_x00b8,
                                                     dtaDeadkey_0001041B_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00a8(dtaDeadkey_0001041B_x00a8,
                                                     dtaDeadkey_0001041B_x00a8 + 10);

//
// Keyboard 0001041F - Turkish F deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x005e[14] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x21, 0x00,   25 },  //    2
  { 0x21, 0x01,   26 },  //    3
  { 0x20, 0x00,   27 },  //    4
  { 0x20, 0x01,   28 },  //    5
  { 0x13, 0x00,   29 },  //    6
  { 0x13, 0x01,   30 },  //    7
  { 0x14, 0x00,   31 },  //    8
  { 0x14, 0x01,   32 },  //    9
  { 0x1e, 0x00,   33 },  //   10
  { 0x1e, 0x01,   34 },  //   11
  { 0x1f, 0x00,   29 },  //   12
  { 0x1f, 0x01,   30 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x005e(dtaDeadkey_0001041F_x005e,
                                                     dtaDeadkey_0001041F_x005e + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x00a8[15] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x21, 0x00,   98 },  //    2
  { 0x21, 0x01,   99 },  //    3
  { 0x20, 0x00,  100 },  //    4
  { 0x20, 0x01,  101 },  //    5
  { 0x13, 0x00,  102 },  //    6
  { 0x13, 0x01,  103 },  //    7
  { 0x14, 0x00,  104 },  //    8
  { 0x14, 0x01,  105 },  //    9
  { 0x1e, 0x00,  106 },  //   10
  { 0x1e, 0x01,  107 },  //   11
  { 0x27, 0x00,  108 },  //   12
  { 0x1f, 0x00,  102 },  //   13
  { 0x1f, 0x01,  103 },  //   14
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x00a8(dtaDeadkey_0001041F_x00a8,
                                                     dtaDeadkey_0001041F_x00a8 + 15);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x21, 0x00,  128 },  //    2
  { 0x21, 0x01,  129 },  //    3
  { 0x17, 0x00,  130 },  //    4
  { 0x17, 0x01,  131 },  //    5
  { 0x14, 0x00,  132 },  //    6
  { 0x14, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x007e(dtaDeadkey_0001041F_x007e,
                                                     dtaDeadkey_0001041F_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x21, 0x00,   55 },  //    2
  { 0x21, 0x01,   56 },  //    3
  { 0x20, 0x00,   57 },  //    4
  { 0x20, 0x01,   58 },  //    5
  { 0x13, 0x00,   59 },  //    6
  { 0x13, 0x01,   60 },  //    7
  { 0x14, 0x00,   61 },  //    8
  { 0x14, 0x01,   62 },  //    9
  { 0x1e, 0x00,   63 },  //   10
  { 0x1e, 0x01,   64 },  //   11
  { 0x1f, 0x00,   59 },  //   12
  { 0x1f, 0x01,   60 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x0060(dtaDeadkey_0001041F_x0060,
                                                     dtaDeadkey_0001041F_x0060 + 14);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x21, 0x00,   73 },  //    2
  { 0x21, 0x01,   74 },  //    3
  { 0x20, 0x00,   77 },  //    4
  { 0x20, 0x01,   78 },  //    5
  { 0x13, 0x00,   79 },  //    6
  { 0x13, 0x01,   80 },  //    7
  { 0x14, 0x00,   85 },  //    8
  { 0x14, 0x01,   86 },  //    9
  { 0x1e, 0x00,   91 },  //   10
  { 0x1e, 0x01,   92 },  //   11
  { 0x1f, 0x00,   79 },  //   12
  { 0x1f, 0x01,   80 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x00b4(dtaDeadkey_0001041F_x00b4,
                                                     dtaDeadkey_0001041F_x00b4 + 14);

//
// Keyboard 00010426 - Latvian (QWERTY) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x18, 0x00,  132 },  //    2
  { 0x18, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010426_x007e(dtaDeadkey_00010426_x007e,
                                                     dtaDeadkey_00010426_x007e + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00b0[9] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x12, 0x00,   66 },  //    4
  { 0x12, 0x01,   67 },  //    5
  { 0x22, 0x00,  163 },  //    6
  { 0x2c, 0x00,   70 },  //    7
  { 0x2c, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00b0(dtaDeadkey_00010426_x00b0,
                                                     dtaDeadkey_00010426_x00b0 + 9);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x1f, 0x00,   89 },  //   10
  { 0x1f, 0x01,   90 },  //   11
  { 0x2c, 0x00,   95 },  //   12
  { 0x2c, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00b4(dtaDeadkey_00010426_x00b4,
                                                     dtaDeadkey_00010426_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x18, 0x00,  104 },  //    4
  { 0x18, 0x01,  105 },  //    5
  { 0x16, 0x00,  106 },  //    6
  { 0x16, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00a8(dtaDeadkey_00010426_x00a8,
                                                     dtaDeadkey_00010426_x00a8 + 8);

//
// Keyboard 0001043B - Sami Extended Norway deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x007e(dtaDeadkey_0001043B_x007e,
                                                     dtaDeadkey_0001043B_x007e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x02c7[26] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x22, 0x00,  227 },  //    8
  { 0x22, 0x01,  228 },  //    9
  { 0x23, 0x00,  229 },  //   10
  { 0x23, 0x01,  230 },  //   11
  { 0x25, 0x00,  231 },  //   12
  { 0x25, 0x01,  232 },  //   13
  { 0x26, 0x00,   12 },  //   14
  { 0x26, 0x01,   13 },  //   15
  { 0x31, 0x00,   14 },  //   16
  { 0x31, 0x01,   15 },  //   17
  { 0x13, 0x00,   16 },  //   18
  { 0x13, 0x01,   17 },  //   19
  { 0x1f, 0x00,   18 },  //   20
  { 0x1f, 0x01,   19 },  //   21
  { 0x14, 0x00,   20 },  //   22
  { 0x14, 0x01,   21 },  //   23
  { 0x2c, 0x00,   22 },  //   24
  { 0x2c, 0x01,   23 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x02c7(dtaDeadkey_0001043B_x02c7,
                                                     dtaDeadkey_0001043B_x02c7 + 26);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x0060(dtaDeadkey_0001043B_x0060,
                                                     dtaDeadkey_0001043B_x0060 + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   95 },  //   22
  { 0x2c, 0x01,   96 },  //   23
  { 0x27, 0x00,  194 },  //   24
  { 0x27, 0x01,  195 },  //   25
  { 0x1a, 0x00,  196 },  //   26
  { 0x1a, 0x01,  197 },  //   27
  { 0x28, 0x00,  198 },  //   28
  { 0x28, 0x01,  199 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x00b4(dtaDeadkey_0001043B_x00b4,
                                                     dtaDeadkey_0001043B_x00b4 + 30);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x00a8[12] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x00a8(dtaDeadkey_0001043B_x00a8,
                                                     dtaDeadkey_0001043B_x00a8 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x005e(dtaDeadkey_0001043B_x005e,
                                                     dtaDeadkey_0001043B_x005e + 22);

//
// Keyboard 0001080C - Belgian (Comma) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x007e(dtaDeadkey_0001080C_x007e,
                                                     dtaDeadkey_0001080C_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x00b4(dtaDeadkey_0001080C_x00b4,
                                                     dtaDeadkey_0001080C_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x0060(dtaDeadkey_0001080C_x0060,
                                                     dtaDeadkey_0001080C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x005e(dtaDeadkey_0001080C_x005e,
                                                     dtaDeadkey_0001080C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x00a8(dtaDeadkey_0001080C_x00a8,
                                                     dtaDeadkey_0001080C_x00a8 + 13);

//
// Keyboard 0001083B - Finnish with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x00a8(dtaDeadkey_0001083B_x00a8,
                                                     dtaDeadkey_0001083B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x005e(dtaDeadkey_0001083B_x005e,
                                                     dtaDeadkey_0001083B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x007e(dtaDeadkey_0001083B_x007e,
                                                     dtaDeadkey_0001083B_x007e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x1a, 0x00,  196 },  //   28
  { 0x1a, 0x01,  197 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x00b4(dtaDeadkey_0001083B_x00b4,
                                                     dtaDeadkey_0001083B_x00b4 + 30);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x0060(dtaDeadkey_0001083B_x0060,
                                                     dtaDeadkey_0001083B_x0060 + 16);

//
// Keyboard 00011009 - Canadian Multilingual Standard deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b4(dtaDeadkey_00011009_x00b4,
                                                     dtaDeadkey_00011009_x00b4 + 26);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02dd(dtaDeadkey_00011009_x02dd,
                                                     dtaDeadkey_00011009_x02dd + 6);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b8[18] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x22, 0x00,  113 },  //    4
  { 0x22, 0x01,  114 },  //    5
  { 0x25, 0x00,  115 },  //    6
  { 0x25, 0x01,  116 },  //    7
  { 0x26, 0x00,  117 },  //    8
  { 0x26, 0x01,  118 },  //    9
  { 0x31, 0x00,  119 },  //   10
  { 0x31, 0x01,  120 },  //   11
  { 0x13, 0x00,  121 },  //   12
  { 0x13, 0x01,  122 },  //   13
  { 0x1f, 0x00,  123 },  //   14
  { 0x1f, 0x01,  124 },  //   15
  { 0x14, 0x00,  125 },  //   16
  { 0x14, 0x01,  126 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b8(dtaDeadkey_00011009_x00b8,
                                                     dtaDeadkey_00011009_x00b8 + 18);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02db[10] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
  { 0x17, 0x00,   50 },  //    6
  { 0x17, 0x01,   51 },  //    7
  { 0x16, 0x00,   52 },  //    8
  { 0x16, 0x01,   53 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02db(dtaDeadkey_00011009_x02db,
                                                     dtaDeadkey_00011009_x02db + 10);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b7[11] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2e, 0x00,  233 },  //    2
  { 0x2e, 0x01,  234 },  //    3
  { 0x12, 0x00,   66 },  //    4
  { 0x12, 0x01,   67 },  //    5
  { 0x22, 0x00,  163 },  //    6
  { 0x22, 0x01,  235 },  //    7
  { 0x17, 0x01,   69 },  //    8
  { 0x2c, 0x00,   70 },  //    9
  { 0x2c, 0x01,   71 },  //   10
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b7(dtaDeadkey_00011009_x00b7,
                                                     dtaDeadkey_00011009_x00b7 + 11);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02c7(dtaDeadkey_00011009_x02c7,
                                                     dtaDeadkey_00011009_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00011009_x005e(dtaDeadkey_00011009_x005e,
                                                     dtaDeadkey_00011009_x005e + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00a8(dtaDeadkey_00011009_x00a8,
                                                     dtaDeadkey_00011009_x00a8 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x0060(dtaDeadkey_00011009_x0060,
                                                     dtaDeadkey_00011009_x0060 + 12);

// Deadkey 0x02da
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02da[6] = {
  { 0x39, 0x00,  236 },  //    0
  { 0x39, 0x01,  236 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02da(dtaDeadkey_00011009_x02da,
                                                     dtaDeadkey_00011009_x02da + 6);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02d8[8] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
  { 0x22, 0x00,   38 },  //    4
  { 0x22, 0x01,   39 },  //    5
  { 0x16, 0x00,  237 },  //    6
  { 0x16, 0x01,  238 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02d8(dtaDeadkey_00011009_x02d8,
                                                     dtaDeadkey_00011009_x02d8 + 8);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x007e(dtaDeadkey_00011009_x007e,
                                                     dtaDeadkey_00011009_x007e + 12);

// Deadkey 0x00af
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00af[12] = {
  { 0x39, 0x00,  239 },  //    0
  { 0x39, 0x01,  239 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00af(dtaDeadkey_00011009_x00af,
                                                     dtaDeadkey_00011009_x00af + 12);

//
// Keyboard 00011809 - Gaelic deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00011809_x0027[14] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00011809_x0027(dtaDeadkey_00011809_x0027,
                                                     dtaDeadkey_00011809_x0027 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00011809_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011809_x0060(dtaDeadkey_00011809_x0060,
                                                     dtaDeadkey_00011809_x0060 + 12);

//
// Keyboard 00020405 - Czech Programmers deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00b4(dtaDeadkey_00020405_x00b4,
                                                     dtaDeadkey_00020405_x00b4 + 26);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00020405_x02c7(dtaDeadkey_00020405_x02c7,
                                                     dtaDeadkey_00020405_x02c7 + 20);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00b0(dtaDeadkey_00020405_x00b0,
                                                     dtaDeadkey_00020405_x00b0 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00a8(dtaDeadkey_00020405_x00a8,
                                                     dtaDeadkey_00020405_x00a8 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020405_x005e(dtaDeadkey_00020405_x005e,
                                                     dtaDeadkey_00020405_x005e + 12);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020405_x02dd(dtaDeadkey_00020405_x02dd,
                                                     dtaDeadkey_00020405_x02dd + 6);

//
// Keyboard 00020408 - Greek (319) deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00020408_x0384(dtaDeadkey_00020408_x0384,
                                                     dtaDeadkey_00020408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020408_x00a8(dtaDeadkey_00020408_x00a8,
                                                     dtaDeadkey_00020408_x00a8 + 6);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020408_x0385(dtaDeadkey_00020408_x0385,
                                                     dtaDeadkey_00020408_x0385 + 4);

//
// Keyboard 00020409 - United States-International deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020409_x005e(dtaDeadkey_00020409_x005e,
                                                     dtaDeadkey_00020409_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0060(dtaDeadkey_00020409_x0060,
                                                     dtaDeadkey_00020409_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00020409_x007e(dtaDeadkey_00020409_x007e,
                                                     dtaDeadkey_00020409_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0027(dtaDeadkey_00020409_x0027,
                                                     dtaDeadkey_00020409_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0022(dtaDeadkey_00020409_x0022,
                                                     dtaDeadkey_00020409_x0022 + 13);

//
// Keyboard 00020418 - Romanian (Programmers) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02dd(dtaDeadkey_00020418_x02dd,
                                                     dtaDeadkey_00020418_x02dd + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x007e[2] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00020418_x007e(dtaDeadkey_00020418_x007e,
                                                     dtaDeadkey_00020418_x007e + 2);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02c7(dtaDeadkey_00020418_x02c7,
                                                     dtaDeadkey_00020418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020418_x005e(dtaDeadkey_00020418_x005e,
                                                     dtaDeadkey_00020418_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02d8(dtaDeadkey_00020418_x02d8,
                                                     dtaDeadkey_00020418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b0(dtaDeadkey_00020418_x00b0,
                                                     dtaDeadkey_00020418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02db(dtaDeadkey_00020418_x02db,
                                                     dtaDeadkey_00020418_x02db + 6);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020418_x0060(dtaDeadkey_00020418_x0060,
                                                     dtaDeadkey_00020418_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02d9(dtaDeadkey_00020418_x02d9,
                                                     dtaDeadkey_00020418_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b4(dtaDeadkey_00020418_x00b4,
                                                     dtaDeadkey_00020418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b8(dtaDeadkey_00020418_x00b8,
                                                     dtaDeadkey_00020418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00a8(dtaDeadkey_00020418_x00a8,
                                                     dtaDeadkey_00020418_x00a8 + 14);

//
// Keyboard 0002042E - Sorbian Standard deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x12, 0x00,   10 },  //    4
  { 0x12, 0x01,   11 },  //    5
  { 0x13, 0x00,   16 },  //    6
  { 0x13, 0x01,   17 },  //    7
  { 0x1f, 0x00,   18 },  //    8
  { 0x1f, 0x01,   19 },  //    9
  { 0x15, 0x00,   22 },  //   10
  { 0x15, 0x01,   23 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x005e(dtaDeadkey_0002042E_x005e,
                                                     dtaDeadkey_0002042E_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x26, 0x00,  157 },  //    4
  { 0x26, 0x01,  158 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x13, 0x00,   87 },  //   10
  { 0x13, 0x01,   88 },  //   11
  { 0x1f, 0x00,   89 },  //   12
  { 0x1f, 0x01,   90 },  //   13
  { 0x15, 0x00,   95 },  //   14
  { 0x15, 0x01,   96 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x00b4(dtaDeadkey_0002042E_x00b4,
                                                     dtaDeadkey_0002042E_x00b4 + 16);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x0060(dtaDeadkey_0002042E_x0060,
                                                     dtaDeadkey_0002042E_x0060 + 12);

//
// Keyboard 0002083B - Sami Extended Finland-Sweden deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x007e(dtaDeadkey_0002083B_x007e,
                                                     dtaDeadkey_0002083B_x007e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x02c7[26] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x22, 0x00,  227 },  //    8
  { 0x22, 0x01,  228 },  //    9
  { 0x23, 0x00,  229 },  //   10
  { 0x23, 0x01,  230 },  //   11
  { 0x25, 0x00,  231 },  //   12
  { 0x25, 0x01,  232 },  //   13
  { 0x26, 0x00,   12 },  //   14
  { 0x26, 0x01,   13 },  //   15
  { 0x31, 0x00,   14 },  //   16
  { 0x31, 0x01,   15 },  //   17
  { 0x13, 0x00,   16 },  //   18
  { 0x13, 0x01,   17 },  //   19
  { 0x1f, 0x00,   18 },  //   20
  { 0x1f, 0x01,   19 },  //   21
  { 0x14, 0x00,   20 },  //   22
  { 0x14, 0x01,   21 },  //   23
  { 0x2c, 0x00,   22 },  //   24
  { 0x2c, 0x01,   23 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x02c7(dtaDeadkey_0002083B_x02c7,
                                                     dtaDeadkey_0002083B_x02c7 + 26);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   95 },  //   22
  { 0x2c, 0x01,   96 },  //   23
  { 0x1a, 0x00,  196 },  //   24
  { 0x1a, 0x01,  197 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x00b4(dtaDeadkey_0002083B_x00b4,
                                                     dtaDeadkey_0002083B_x00b4 + 26);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x0060(dtaDeadkey_0002083B_x0060,
                                                     dtaDeadkey_0002083B_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x00a8[12] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x00a8(dtaDeadkey_0002083B_x00a8,
                                                     dtaDeadkey_0002083B_x00a8 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x005e(dtaDeadkey_0002083B_x005e,
                                                     dtaDeadkey_0002083B_x005e + 22);

//
// Keyboard 00030408 - Greek (220) Latin deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x0384[2] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x0384(dtaDeadkey_00030408_x0384,
                                                     dtaDeadkey_00030408_x0384 + 2);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x00a8[2] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x00a8(dtaDeadkey_00030408_x00a8,
                                                     dtaDeadkey_00030408_x00a8 + 2);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x0385[2] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x0385(dtaDeadkey_00030408_x0385,
                                                     dtaDeadkey_00030408_x0385 + 2);

//
// Keyboard 00040408 - Greek (319) Latin deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00040408_x00b4(dtaDeadkey_00040408_x00b4,
                                                     dtaDeadkey_00040408_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00040408_x00a8(dtaDeadkey_00040408_x00a8,
                                                     dtaDeadkey_00040408_x00a8 + 13);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00040408_x0060(dtaDeadkey_00040408_x0060,
                                                     dtaDeadkey_00040408_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00040408_x005e(dtaDeadkey_00040408_x005e,
                                                     dtaDeadkey_00040408_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00040408_x007e(dtaDeadkey_00040408_x007e,
                                                     dtaDeadkey_00040408_x007e + 8);

//
// Keyboard 00050408 - Greek Latin deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00050408_x005e(dtaDeadkey_00050408_x005e,
                                                     dtaDeadkey_00050408_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00050408_x0060(dtaDeadkey_00050408_x0060,
                                                     dtaDeadkey_00050408_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00050408_x007e(dtaDeadkey_00050408_x007e,
                                                     dtaDeadkey_00050408_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00050408_x00b4(dtaDeadkey_00050408_x00b4,
                                                     dtaDeadkey_00050408_x00b4 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  240 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00050408_x00a8(dtaDeadkey_00050408_x00a8,
                                                     dtaDeadkey_00050408_x00a8 + 14);

//
// Keyboard 00060408 - Greek Polytonic deadkeys
//

// Deadkey 0x003b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003b[17] = {
  { 0x39, 0x00,  241 },  //    0
  { 0x39, 0x01,  241 },  //    1
  { 0x1e, 0x00,  242 },  //    2
  { 0x1e, 0x01,  243 },  //    3
  { 0x12, 0x00,  244 },  //    4
  { 0x12, 0x01,  245 },  //    5
  { 0x23, 0x00,  246 },  //    6
  { 0x23, 0x01,  247 },  //    7
  { 0x17, 0x00,  248 },  //    8
  { 0x17, 0x01,  249 },  //    9
  { 0x18, 0x00,  250 },  //   10
  { 0x18, 0x01,  251 },  //   11
  { 0x2f, 0x00,  252 },  //   12
  { 0x2f, 0x01,  253 },  //   13
  { 0x15, 0x00,  254 },  //   14
  { 0x15, 0x01,  255 },  //   15
  { 0x34, 0x00,  256 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003b(dtaDeadkey_00060408_x003b,
                                                     dtaDeadkey_00060408_x003b + 17);

// Deadkey 0x003a
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003a[7] = {
  { 0x39, 0x00,  257 },  //    0
  { 0x39, 0x01,  257 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
  { 0x34, 0x00,   97 },  //    6
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003a(dtaDeadkey_00060408_x003a,
                                                     dtaDeadkey_00060408_x003a + 7);

// Deadkey 0x1ffd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1ffd[3] = {
  { 0x1e, 0x00,  258 },  //    0
  { 0x23, 0x00,  259 },  //    1
  { 0x2f, 0x00,  260 },  //    2
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1ffd(dtaDeadkey_00060408_x1ffd,
                                                     dtaDeadkey_00060408_x1ffd + 3);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0385[5] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
  { 0x34, 0x00,  134 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0385(dtaDeadkey_00060408_x0385,
                                                     dtaDeadkey_00060408_x0385 + 5);

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0384[17] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
  { 0x34, 0x00,  137 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0384(dtaDeadkey_00060408_x0384,
                                                     dtaDeadkey_00060408_x0384 + 17);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00a8[7] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
  { 0x34, 0x00,   97 },  //    6
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00a8(dtaDeadkey_00060408_x00a8,
                                                     dtaDeadkey_00060408_x00a8 + 7);

// Deadkey 0x003d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003d[12] = {
  { 0x39, 0x00,  261 },  //    0
  { 0x39, 0x01,  261 },  //    1
  { 0x1e, 0x00,  262 },  //    2
  { 0x1e, 0x01,  263 },  //    3
  { 0x23, 0x00,  264 },  //    4
  { 0x23, 0x01,  265 },  //    5
  { 0x17, 0x00,  266 },  //    6
  { 0x17, 0x01,  267 },  //    7
  { 0x2f, 0x00,  268 },  //    8
  { 0x2f, 0x01,  269 },  //    9
  { 0x15, 0x00,  270 },  //   10
  { 0x34, 0x00,  271 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003d(dtaDeadkey_00060408_x003d,
                                                     dtaDeadkey_00060408_x003d + 12);

// Deadkey 0x002b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002b[13] = {
  { 0x39, 0x00,  272 },  //    0
  { 0x39, 0x01,  272 },  //    1
  { 0x1e, 0x00,  273 },  //    2
  { 0x1e, 0x01,  274 },  //    3
  { 0x23, 0x00,  275 },  //    4
  { 0x23, 0x01,  276 },  //    5
  { 0x17, 0x00,  277 },  //    6
  { 0x17, 0x01,  278 },  //    7
  { 0x2f, 0x00,  279 },  //    8
  { 0x2f, 0x01,  280 },  //    9
  { 0x15, 0x00,  281 },  //   10
  { 0x15, 0x01,  282 },  //   11
  { 0x34, 0x00,  283 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002b(dtaDeadkey_00060408_x002b,
                                                     dtaDeadkey_00060408_x002b + 13);

// Deadkey 0x00bd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00bd[8] = {
  { 0x39, 0x00,  284 },  //    0
  { 0x39, 0x01,  284 },  //    1
  { 0x1e, 0x00,  285 },  //    2
  { 0x1e, 0x01,  286 },  //    3
  { 0x23, 0x00,  287 },  //    4
  { 0x23, 0x01,  288 },  //    5
  { 0x2f, 0x00,  289 },  //    6
  { 0x2f, 0x01,  290 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00bd(dtaDeadkey_00060408_x00bd,
                                                     dtaDeadkey_00060408_x00bd + 8);

// Deadkey 0x1fdf
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fdf[6] = {
  { 0x1e, 0x00,  291 },  //    0
  { 0x1e, 0x01,  292 },  //    1
  { 0x23, 0x00,  293 },  //    2
  { 0x23, 0x01,  294 },  //    3
  { 0x2f, 0x00,  295 },  //    4
  { 0x2f, 0x01,  296 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fdf(dtaDeadkey_00060408_x1fdf,
                                                     dtaDeadkey_00060408_x1fdf + 6);

// Deadkey 0x002d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002d[9] = {
  { 0x39, 0x00,  297 },  //    0
  { 0x39, 0x01,  297 },  //    1
  { 0x1e, 0x00,  298 },  //    2
  { 0x1e, 0x01,  299 },  //    3
  { 0x17, 0x00,  300 },  //    4
  { 0x17, 0x01,  301 },  //    5
  { 0x15, 0x00,  302 },  //    6
  { 0x15, 0x01,  303 },  //    7
  { 0x34, 0x00,  239 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002d(dtaDeadkey_00060408_x002d,
                                                     dtaDeadkey_00060408_x002d + 9);

// Deadkey 0x005f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005f[9] = {
  { 0x39, 0x00,  304 },  //    0
  { 0x39, 0x01,  304 },  //    1
  { 0x1e, 0x00,  305 },  //    2
  { 0x1e, 0x01,  306 },  //    3
  { 0x17, 0x00,  307 },  //    4
  { 0x17, 0x01,  308 },  //    5
  { 0x15, 0x00,  309 },  //    6
  { 0x15, 0x01,  310 },  //    7
  { 0x34, 0x00,   35 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005f(dtaDeadkey_00060408_x005f,
                                                     dtaDeadkey_00060408_x005f + 9);

// Deadkey 0x002f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002f[16] = {
  { 0x39, 0x00,  311 },  //    0
  { 0x39, 0x01,  311 },  //    1
  { 0x1e, 0x00,  312 },  //    2
  { 0x1e, 0x01,  313 },  //    3
  { 0x12, 0x00,  314 },  //    4
  { 0x12, 0x01,  315 },  //    5
  { 0x23, 0x00,  316 },  //    6
  { 0x23, 0x01,  317 },  //    7
  { 0x17, 0x00,  318 },  //    8
  { 0x17, 0x01,  319 },  //    9
  { 0x18, 0x00,  320 },  //   10
  { 0x18, 0x01,  321 },  //   11
  { 0x2f, 0x00,  322 },  //   12
  { 0x2f, 0x01,  323 },  //   13
  { 0x15, 0x00,  324 },  //   14
  { 0x34, 0x00,  325 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002f(dtaDeadkey_00060408_x002f,
                                                     dtaDeadkey_00060408_x002f + 16);

// Deadkey 0x003f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003f[17] = {
  { 0x39, 0x00,  326 },  //    0
  { 0x39, 0x01,  326 },  //    1
  { 0x1e, 0x00,  327 },  //    2
  { 0x1e, 0x01,  328 },  //    3
  { 0x12, 0x00,  329 },  //    4
  { 0x12, 0x01,  330 },  //    5
  { 0x23, 0x00,  331 },  //    6
  { 0x23, 0x01,  332 },  //    7
  { 0x17, 0x00,  333 },  //    8
  { 0x17, 0x01,  334 },  //    9
  { 0x18, 0x00,  335 },  //   10
  { 0x18, 0x01,  336 },  //   11
  { 0x2f, 0x00,  337 },  //   12
  { 0x2f, 0x01,  338 },  //   13
  { 0x15, 0x00,  339 },  //   14
  { 0x15, 0x01,  340 },  //   15
  { 0x34, 0x00,  341 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003f(dtaDeadkey_00060408_x003f,
                                                     dtaDeadkey_00060408_x003f + 17);

// Deadkey 0x1fbe
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fbe[6] = {
  { 0x1e, 0x00,  342 },  //    0
  { 0x1e, 0x01,  343 },  //    1
  { 0x23, 0x00,  344 },  //    2
  { 0x23, 0x01,  345 },  //    3
  { 0x2f, 0x00,  346 },  //    4
  { 0x2f, 0x01,  347 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fbe(dtaDeadkey_00060408_x1fbe,
                                                     dtaDeadkey_00060408_x1fbe + 6);

// Deadkey 0x1fde
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fde[6] = {
  { 0x1e, 0x00,  348 },  //    0
  { 0x1e, 0x01,  349 },  //    1
  { 0x23, 0x00,  350 },  //    2
  { 0x23, 0x01,  351 },  //    3
  { 0x2f, 0x00,  352 },  //    4
  { 0x2f, 0x01,  353 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fde(dtaDeadkey_00060408_x1fde,
                                                     dtaDeadkey_00060408_x1fde + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007e[5] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x17, 0x00,  354 },  //    2
  { 0x15, 0x00,  355 },  //    3
  { 0x34, 0x00,  356 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007e(dtaDeadkey_00060408_x007e,
                                                     dtaDeadkey_00060408_x007e + 5);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0060[5] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x17, 0x00,  357 },  //    2
  { 0x15, 0x00,  358 },  //    3
  { 0x34, 0x00,  359 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0060(dtaDeadkey_00060408_x0060,
                                                     dtaDeadkey_00060408_x0060 + 5);

// Deadkey 0x1fc1
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fc1[5] = {
  { 0x39, 0x00,  360 },  //    0
  { 0x39, 0x01,  360 },  //    1
  { 0x17, 0x00,  361 },  //    2
  { 0x15, 0x00,  362 },  //    3
  { 0x34, 0x00,  360 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fc1(dtaDeadkey_00060408_x1fc1,
                                                     dtaDeadkey_00060408_x1fc1 + 5);

// Deadkey 0x005b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005b[8] = {
  { 0x39, 0x00,  200 },  //    0
  { 0x39, 0x01,  200 },  //    1
  { 0x1e, 0x00,  363 },  //    2
  { 0x23, 0x00,  364 },  //    3
  { 0x17, 0x00,  365 },  //    4
  { 0x2f, 0x00,  366 },  //    5
  { 0x15, 0x00,  367 },  //    6
  { 0x34, 0x00,  368 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005b(dtaDeadkey_00060408_x005b,
                                                     dtaDeadkey_00060408_x005b + 8);

// Deadkey 0x007b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007b[9] = {
  { 0x39, 0x00,  369 },  //    0
  { 0x39, 0x01,  369 },  //    1
  { 0x1e, 0x00,  370 },  //    2
  { 0x1e, 0x01,  371 },  //    3
  { 0x23, 0x00,  372 },  //    4
  { 0x23, 0x01,  373 },  //    5
  { 0x2f, 0x00,  374 },  //    6
  { 0x2f, 0x01,  375 },  //    7
  { 0x34, 0x00,  376 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007b(dtaDeadkey_00060408_x007b,
                                                     dtaDeadkey_00060408_x007b + 9);

// Deadkey 0x00ab
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00ab[5] = {
  { 0x39, 0x00,  377 },  //    0
  { 0x39, 0x01,  377 },  //    1
  { 0x1e, 0x00,  378 },  //    2
  { 0x23, 0x00,  379 },  //    3
  { 0x2f, 0x00,  380 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00ab(dtaDeadkey_00060408_x00ab,
                                                     dtaDeadkey_00060408_x00ab + 5);

// Deadkey 0x005c
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005c[16] = {
  { 0x39, 0x00,  203 },  //    0
  { 0x39, 0x01,  203 },  //    1
  { 0x1e, 0x00,  381 },  //    2
  { 0x1e, 0x01,  382 },  //    3
  { 0x12, 0x00,  383 },  //    4
  { 0x12, 0x01,  384 },  //    5
  { 0x23, 0x00,  385 },  //    6
  { 0x23, 0x01,  386 },  //    7
  { 0x17, 0x00,  387 },  //    8
  { 0x17, 0x01,  388 },  //    9
  { 0x18, 0x00,  389 },  //   10
  { 0x18, 0x01,  390 },  //   11
  { 0x2f, 0x00,  391 },  //   12
  { 0x2f, 0x01,  392 },  //   13
  { 0x15, 0x00,  393 },  //   14
  { 0x34, 0x00,  394 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005c(dtaDeadkey_00060408_x005c,
                                                     dtaDeadkey_00060408_x005c + 16);

// Deadkey 0x007c
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007c[17] = {
  { 0x39, 0x00,  395 },  //    0
  { 0x39, 0x01,  395 },  //    1
  { 0x1e, 0x00,  396 },  //    2
  { 0x1e, 0x01,  397 },  //    3
  { 0x12, 0x00,  398 },  //    4
  { 0x12, 0x01,  399 },  //    5
  { 0x23, 0x00,  400 },  //    6
  { 0x23, 0x01,  401 },  //    7
  { 0x17, 0x00,  402 },  //    8
  { 0x17, 0x01,  403 },  //    9
  { 0x18, 0x00,  404 },  //   10
  { 0x18, 0x01,  405 },  //   11
  { 0x2f, 0x00,  406 },  //   12
  { 0x2f, 0x01,  407 },  //   13
  { 0x15, 0x00,  408 },  //   14
  { 0x15, 0x01,  409 },  //   15
  { 0x34, 0x00,  410 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007c(dtaDeadkey_00060408_x007c,
                                                     dtaDeadkey_00060408_x007c + 17);

// Deadkey 0x00ac
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00ac[8] = {
  { 0x39, 0x00,  411 },  //    0
  { 0x39, 0x01,  411 },  //    1
  { 0x1e, 0x00,  412 },  //    2
  { 0x1e, 0x01,  413 },  //    3
  { 0x23, 0x00,  414 },  //    4
  { 0x23, 0x01,  415 },  //    5
  { 0x2f, 0x00,  416 },  //    6
  { 0x2f, 0x01,  417 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00ac(dtaDeadkey_00060408_x00ac,
                                                     dtaDeadkey_00060408_x00ac + 8);

// Deadkey 0x1fdd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fdd[6] = {
  { 0x1e, 0x00,  418 },  //    0
  { 0x1e, 0x01,  419 },  //    1
  { 0x23, 0x00,  420 },  //    2
  { 0x23, 0x01,  421 },  //    3
  { 0x2f, 0x00,  422 },  //    4
  { 0x2f, 0x01,  423 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fdd(dtaDeadkey_00060408_x1fdd,
                                                     dtaDeadkey_00060408_x1fdd + 6);

// Deadkey 0x005d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005d[17] = {
  { 0x39, 0x00,  424 },  //    0
  { 0x39, 0x01,  424 },  //    1
  { 0x1e, 0x00,  425 },  //    2
  { 0x1e, 0x01,  426 },  //    3
  { 0x12, 0x00,  427 },  //    4
  { 0x12, 0x01,  428 },  //    5
  { 0x23, 0x00,  429 },  //    6
  { 0x23, 0x01,  430 },  //    7
  { 0x17, 0x00,  431 },  //    8
  { 0x17, 0x01,  432 },  //    9
  { 0x18, 0x00,  433 },  //   10
  { 0x18, 0x01,  434 },  //   11
  { 0x2f, 0x00,  435 },  //   12
  { 0x2f, 0x01,  436 },  //   13
  { 0x15, 0x00,  437 },  //   14
  { 0x15, 0x01,  438 },  //   15
  { 0x34, 0x00,  439 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005d(dtaDeadkey_00060408_x005d,
                                                     dtaDeadkey_00060408_x005d + 17);

// Deadkey 0x007d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007d[3] = {
  { 0x39, 0x00,  440 },  //    0
  { 0x39, 0x01,  440 },  //    1
  { 0x34, 0x00,  441 },  //    2
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007d(dtaDeadkey_00060408_x007d,
                                                     dtaDeadkey_00060408_x007d + 3);

// Deadkey 0x00bb
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00bb[5] = {
  { 0x39, 0x00,  442 },  //    0
  { 0x39, 0x01,  442 },  //    1
  { 0x1e, 0x00,  443 },  //    2
  { 0x23, 0x00,  444 },  //    3
  { 0x2f, 0x00,  445 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00bb(dtaDeadkey_00060408_x00bb,
                                                     dtaDeadkey_00060408_x00bb + 5);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0027[17] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,  446 },  //    2
  { 0x1e, 0x01,  447 },  //    3
  { 0x12, 0x00,  448 },  //    4
  { 0x12, 0x01,  449 },  //    5
  { 0x23, 0x00,  450 },  //    6
  { 0x23, 0x01,  451 },  //    7
  { 0x17, 0x00,  452 },  //    8
  { 0x17, 0x01,  453 },  //    9
  { 0x18, 0x00,  454 },  //   10
  { 0x18, 0x01,  455 },  //   11
  { 0x13, 0x00,  456 },  //   12
  { 0x2f, 0x00,  457 },  //   13
  { 0x2f, 0x01,  458 },  //   14
  { 0x15, 0x00,  459 },  //   15
  { 0x34, 0x00,  460 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0027(dtaDeadkey_00060408_x0027,
                                                     dtaDeadkey_00060408_x0027 + 17);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0022[19] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,  461 },  //    2
  { 0x1e, 0x01,  462 },  //    3
  { 0x12, 0x00,  463 },  //    4
  { 0x12, 0x01,  464 },  //    5
  { 0x23, 0x00,  465 },  //    6
  { 0x23, 0x01,  466 },  //    7
  { 0x17, 0x00,  467 },  //    8
  { 0x17, 0x01,  468 },  //    9
  { 0x18, 0x00,  469 },  //   10
  { 0x18, 0x01,  470 },  //   11
  { 0x13, 0x00,  471 },  //   12
  { 0x13, 0x01,  472 },  //   13
  { 0x2f, 0x00,  473 },  //   14
  { 0x2f, 0x01,  474 },  //   15
  { 0x15, 0x00,  475 },  //   16
  { 0x15, 0x01,  476 },  //   17
  { 0x34, 0x00,  477 },  //   18
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0022(dtaDeadkey_00060408_x0022,
                                                     dtaDeadkey_00060408_x0022 + 19);

// Deadkey 0x1fbf
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fbf[6] = {
  { 0x1e, 0x00,  478 },  //    0
  { 0x1e, 0x01,  479 },  //    1
  { 0x23, 0x00,  480 },  //    2
  { 0x23, 0x01,  481 },  //    3
  { 0x2f, 0x00,  482 },  //    4
  { 0x2f, 0x01,  483 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fbf(dtaDeadkey_00060408_x1fbf,
                                                     dtaDeadkey_00060408_x1fbf + 6);

// Deadkey 0x1ffe
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1ffe[6] = {
  { 0x1e, 0x00,  484 },  //    0
  { 0x1e, 0x01,  485 },  //    1
  { 0x23, 0x00,  486 },  //    2
  { 0x23, 0x01,  487 },  //    3
  { 0x2f, 0x00,  488 },  //    4
  { 0x2f, 0x01,  489 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1ffe(dtaDeadkey_00060408_x1ffe,
                                                     dtaDeadkey_00060408_x1ffe + 6);

static const wchar_t wcDK[490] = {
  { 0x02dd },  //    0; Use Count =  30
  { 0x0151 },  //    1; Use Count =  15
  { 0x0150 },  //    2; Use Count =  15
  { 0x0171 },  //    3; Use Count =  15
  { 0x0170 },  //    4; Use Count =  15
  { 0x02c7 },  //    5; Use Count =  36
  { 0x010d },  //    6; Use Count =  20
  { 0x010c },  //    7; Use Count =  20
  { 0x010f },  //    8; Use Count =  18
  { 0x010e },  //    9; Use Count =  18
  { 0x011b },  //   10; Use Count =  19
  { 0x011a },  //   11; Use Count =  19
  { 0x013e },  //   12; Use Count =  16
  { 0x013d },  //   13; Use Count =  16
  { 0x0148 },  //   14; Use Count =  18
  { 0x0147 },  //   15; Use Count =  18
  { 0x0159 },  //   16; Use Count =  19
  { 0x0158 },  //   17; Use Count =  19
  { 0x0161 },  //   18; Use Count =  20
  { 0x0160 },  //   19; Use Count =  20
  { 0x0165 },  //   20; Use Count =  18
  { 0x0164 },  //   21; Use Count =  18
  { 0x017e },  //   22; Use Count =  20
  { 0x017d },  //   23; Use Count =  20
  { 0x005e },  //   24; Use Count = 110
  { 0x00e2 },  //   25; Use Count =  52
  { 0x00c2 },  //   26; Use Count =  52
  { 0x00ea },  //   27; Use Count =  43
  { 0x00ca },  //   28; Use Count =  43
  { 0x00ee },  //   29; Use Count =  54
  { 0x00ce },  //   30; Use Count =  54
  { 0x00f4 },  //   31; Use Count =  52
  { 0x00d4 },  //   32; Use Count =  52
  { 0x00fb },  //   33; Use Count =  43
  { 0x00db },  //   34; Use Count =  43
  { 0x02d8 },  //   35; Use Count =  27
  { 0x0103 },  //   36; Use Count =  13
  { 0x0102 },  //   37; Use Count =  13
  { 0x011f },  //   38; Use Count =   2
  { 0x011e },  //   39; Use Count =   2
  { 0x00b0 },  //   40; Use Count =  34
  { 0x00e5 },  //   41; Use Count =   7
  { 0x00c5 },  //   42; Use Count =   7
  { 0x016f },  //   43; Use Count =  16
  { 0x016e },  //   44; Use Count =  16
  { 0x02db },  //   45; Use Count =  26
  { 0x0105 },  //   46; Use Count =  14
  { 0x0104 },  //   47; Use Count =  14
  { 0x0119 },  //   48; Use Count =  14
  { 0x0118 },  //   49; Use Count =  14
  { 0x012f },  //   50; Use Count =   2
  { 0x012e },  //   51; Use Count =   2
  { 0x0173 },  //   52; Use Count =   2
  { 0x0172 },  //   53; Use Count =   2
  { 0x0060 },  //   54; Use Count =  92
  { 0x00e0 },  //   55; Use Count =  47
  { 0x00c0 },  //   56; Use Count =  47
  { 0x00e8 },  //   57; Use Count =  47
  { 0x00c8 },  //   58; Use Count =  47
  { 0x00ec },  //   59; Use Count =  48
  { 0x00cc },  //   60; Use Count =  48
  { 0x00f2 },  //   61; Use Count =  47
  { 0x00d2 },  //   62; Use Count =  47
  { 0x00f9 },  //   63; Use Count =  47
  { 0x00d9 },  //   64; Use Count =  47
  { 0x00b7 },  //   65; Use Count =  14
  { 0x0117 },  //   66; Use Count =   5
  { 0x0116 },  //   67; Use Count =   5
  { 0x0131 },  //   68; Use Count =   1
  { 0x0130 },  //   69; Use Count =   2
  { 0x017c },  //   70; Use Count =  17
  { 0x017b },  //   71; Use Count =  17
  { 0x00b4 },  //   72; Use Count = 104
  { 0x00e1 },  //   73; Use Count =  54
  { 0x00c1 },  //   74; Use Count =  54
  { 0x0107 },  //   75; Use Count =  26
  { 0x0106 },  //   76; Use Count =  26
  { 0x00e9 },  //   77; Use Count =  57
  { 0x00c9 },  //   78; Use Count =  57
  { 0x00ed },  //   79; Use Count =  56
  { 0x00cd },  //   80; Use Count =  56
  { 0x013a },  //   81; Use Count =  21
  { 0x0139 },  //   82; Use Count =  21
  { 0x0144 },  //   83; Use Count =  28
  { 0x0143 },  //   84; Use Count =  28
  { 0x00f3 },  //   85; Use Count =  59
  { 0x00d3 },  //   86; Use Count =  59
  { 0x0155 },  //   87; Use Count =  22
  { 0x0154 },  //   88; Use Count =  22
  { 0x015b },  //   89; Use Count =  26
  { 0x015a },  //   90; Use Count =  26
  { 0x00fa },  //   91; Use Count =  54
  { 0x00da },  //   92; Use Count =  54
  { 0x00fd },  //   93; Use Count =  48
  { 0x00dd },  //   94; Use Count =  47
  { 0x017a },  //   95; Use Count =  26
  { 0x0179 },  //   96; Use Count =  26
  { 0x00a8 },  //   97; Use Count = 106
  { 0x00e4 },  //   98; Use Count =  51
  { 0x00c4 },  //   99; Use Count =  51
  { 0x00eb },  //  100; Use Count =  48
  { 0x00cb },  //  101; Use Count =  48
  { 0x00ef },  //  102; Use Count =  42
  { 0x00cf },  //  103; Use Count =  42
  { 0x00f6 },  //  104; Use Count =  51
  { 0x00d6 },  //  105; Use Count =  51
  { 0x00fc },  //  106; Use Count =  51
  { 0x00dc },  //  107; Use Count =  51
  { 0x00ff },  //  108; Use Count =  37
  { 0x0178 },  //  109; Use Count =  10
  { 0x00b8 },  //  110; Use Count =  30
  { 0x00e7 },  //  111; Use Count =  22
  { 0x00c7 },  //  112; Use Count =  22
  { 0x0123 },  //  113; Use Count =   2
  { 0x0122 },  //  114; Use Count =   2
  { 0x0137 },  //  115; Use Count =   2
  { 0x0136 },  //  116; Use Count =   2
  { 0x013c },  //  117; Use Count =   2
  { 0x013b },  //  118; Use Count =   2
  { 0x0146 },  //  119; Use Count =   2
  { 0x0145 },  //  120; Use Count =   2
  { 0x0157 },  //  121; Use Count =   2
  { 0x0156 },  //  122; Use Count =   2
  { 0x015f },  //  123; Use Count =  14
  { 0x015e },  //  124; Use Count =  14
  { 0x0163 },  //  125; Use Count =  10
  { 0x0162 },  //  126; Use Count =  10
  { 0x007e },  //  127; Use Count =  82
  { 0x00e3 },  //  128; Use Count =  32
  { 0x00c3 },  //  129; Use Count =  32
  { 0x00f1 },  //  130; Use Count =  32
  { 0x00d1 },  //  131; Use Count =  32
  { 0x00f5 },  //  132; Use Count =  35
  { 0x00d5 },  //  133; Use Count =  35
  { 0x0385 },  //  134; Use Count =  11
  { 0x0390 },  //  135; Use Count =   4
  { 0x03b0 },  //  136; Use Count =   4
  { 0x0384 },  //  137; Use Count =  11
  { 0x03ac },  //  138; Use Count =   4
  { 0x0386 },  //  139; Use Count =   4
  { 0x03ad },  //  140; Use Count =   4
  { 0x0388 },  //  141; Use Count =   4
  { 0x03ae },  //  142; Use Count =   4
  { 0x0389 },  //  143; Use Count =   4
  { 0x03af },  //  144; Use Count =   4
  { 0x038a },  //  145; Use Count =   4
  { 0x03cc },  //  146; Use Count =   4
  { 0x038c },  //  147; Use Count =   4
  { 0x03ce },  //  148; Use Count =   4
  { 0x038f },  //  149; Use Count =   4
  { 0x03cd },  //  150; Use Count =   4
  { 0x038e },  //  151; Use Count =   4
  { 0x03ca },  //  152; Use Count =   5
  { 0x03aa },  //  153; Use Count =   5
  { 0x03cb },  //  154; Use Count =   5
  { 0x03ab },  //  155; Use Count =   5
  { 0x02d9 },  //  156; Use Count =  12
  { 0x0142 },  //  157; Use Count =   2
  { 0x0141 },  //  158; Use Count =   2
  { 0x0219 },  //  159; Use Count =   1
  { 0x0218 },  //  160; Use Count =   1
  { 0x011d },  //  161; Use Count =   7
  { 0x011c },  //  162; Use Count =   7
  { 0x0121 },  //  163; Use Count =   3
  { 0x0307 },  //  164; Use Count =   2
  { 0x017f },  //  165; Use Count =   1
  { 0x0111 },  //  166; Use Count =   1
  { 0x0110 },  //  167; Use Count =   1
  { 0x0027 },  //  168; Use Count =  18
  { 0x0022 },  //  169; Use Count =  10
  { 0x1e85 },  //  170; Use Count =   4
  { 0x1e84 },  //  171; Use Count =   4
  { 0x0109 },  //  172; Use Count =   6
  { 0x0108 },  //  173; Use Count =   6
  { 0x0125 },  //  174; Use Count =   6
  { 0x0124 },  //  175; Use Count =   6
  { 0x0135 },  //  176; Use Count =   6
  { 0x0134 },  //  177; Use Count =   6
  { 0x015d },  //  178; Use Count =   6
  { 0x015c },  //  179; Use Count =   6
  { 0x0175 },  //  180; Use Count =   5
  { 0x0174 },  //  181; Use Count =   5
  { 0x0177 },  //  182; Use Count =   5
  { 0x0176 },  //  183; Use Count =   5
  { 0x0129 },  //  184; Use Count =   6
  { 0x0128 },  //  185; Use Count =   6
  { 0x0169 },  //  186; Use Count =   6
  { 0x0168 },  //  187; Use Count =   6
  { 0x1e81 },  //  188; Use Count =   4
  { 0x1e80 },  //  189; Use Count =   4
  { 0x1ef3 },  //  190; Use Count =   4
  { 0x1ef2 },  //  191; Use Count =   4
  { 0x1e83 },  //  192; Use Count =   4
  { 0x1e82 },  //  193; Use Count =   4
  { 0x01ff },  //  194; Use Count =   2
  { 0x01fe },  //  195; Use Count =   2
  { 0x01fb },  //  196; Use Count =   5
  { 0x01fa },  //  197; Use Count =   5
  { 0x01fd },  //  198; Use Count =   2
  { 0x01fc },  //  199; Use Count =   2
  { 0x005b },  //  200; Use Count =   4
  { 0x01f9 },  //  201; Use Count =   2
  { 0x01f8 },  //  202; Use Count =   2
  { 0x005c },  //  203; Use Count =   4
  { 0x1eb9 },  //  204; Use Count =   1
  { 0x1eb8 },  //  205; Use Count =   1
  { 0x1ecd },  //  206; Use Count =   1
  { 0x1ecc },  //  207; Use Count =   1
  { 0x1e63 },  //  208; Use Count =   1
  { 0x1e62 },  //  209; Use Count =   1
  { 0x0101 },  //  210; Use Count =   3
  { 0x0100 },  //  211; Use Count =   3
  { 0x0113 },  //  212; Use Count =   3
  { 0x0112 },  //  213; Use Count =   3
  { 0x012b },  //  214; Use Count =   3
  { 0x012a },  //  215; Use Count =   3
  { 0x014d },  //  216; Use Count =   3
  { 0x014c },  //  217; Use Count =   3
  { 0x016b },  //  218; Use Count =   3
  { 0x016a },  //  219; Use Count =   3
  { 0x1e3f },  //  220; Use Count =   1
  { 0x1e3e },  //  221; Use Count =   1
  { 0x201a },  //  222; Use Count =   2
  { 0x0453 },  //  223; Use Count =   2
  { 0x0403 },  //  224; Use Count =   2
  { 0x045c },  //  225; Use Count =   2
  { 0x040c },  //  226; Use Count =   2
  { 0x01e7 },  //  227; Use Count =   2
  { 0x01e6 },  //  228; Use Count =   2
  { 0x021f },  //  229; Use Count =   2
  { 0x021e },  //  230; Use Count =   2
  { 0x01e9 },  //  231; Use Count =   2
  { 0x01e8 },  //  232; Use Count =   2
  { 0x010b },  //  233; Use Count =   1
  { 0x010a },  //  234; Use Count =   1
  { 0x0120 },  //  235; Use Count =   1
  { 0x02da },  //  236; Use Count =   2
  { 0x016d },  //  237; Use Count =   1
  { 0x016c },  //  238; Use Count =   1
  { 0x00af },  //  239; Use Count =   3
  { 0x009f },  //  240; Use Count =   1
  { 0x003b },  //  241; Use Count =   2
  { 0x1f71 },  //  242; Use Count =   1
  { 0x1fbb },  //  243; Use Count =   1
  { 0x1f73 },  //  244; Use Count =   1
  { 0x1fc9 },  //  245; Use Count =   1
  { 0x1f75 },  //  246; Use Count =   1
  { 0x1fcb },  //  247; Use Count =   1
  { 0x1f77 },  //  248; Use Count =   1
  { 0x1fdb },  //  249; Use Count =   1
  { 0x1f79 },  //  250; Use Count =   1
  { 0x1ff9 },  //  251; Use Count =   1
  { 0x1f7d },  //  252; Use Count =   1
  { 0x1ffb },  //  253; Use Count =   1
  { 0x1f7b },  //  254; Use Count =   1
  { 0x1feb },  //  255; Use Count =   1
  { 0x1ffd },  //  256; Use Count =   1
  { 0x003a },  //  257; Use Count =   2
  { 0x1fb4 },  //  258; Use Count =   1
  { 0x1fc4 },  //  259; Use Count =   1
  { 0x1ff4 },  //  260; Use Count =   1
  { 0x003d },  //  261; Use Count =   2
  { 0x1f06 },  //  262; Use Count =   1
  { 0x1f0e },  //  263; Use Count =   1
  { 0x1f26 },  //  264; Use Count =   1
  { 0x1f2e },  //  265; Use Count =   1
  { 0x1f36 },  //  266; Use Count =   1
  { 0x1f3e },  //  267; Use Count =   1
  { 0x1f66 },  //  268; Use Count =   1
  { 0x1f6e },  //  269; Use Count =   1
  { 0x1f56 },  //  270; Use Count =   1
  { 0x1fcf },  //  271; Use Count =   1
  { 0x002b },  //  272; Use Count =   2
  { 0x1f07 },  //  273; Use Count =   1
  { 0x1f0f },  //  274; Use Count =   1
  { 0x1f27 },  //  275; Use Count =   1
  { 0x1f2f },  //  276; Use Count =   1
  { 0x1f37 },  //  277; Use Count =   1
  { 0x1f3f },  //  278; Use Count =   1
  { 0x1f67 },  //  279; Use Count =   1
  { 0x1f6f },  //  280; Use Count =   1
  { 0x1f57 },  //  281; Use Count =   1
  { 0x1f5f },  //  282; Use Count =   1
  { 0x1fdf },  //  283; Use Count =   1
  { 0x00bd },  //  284; Use Count =   2
  { 0x1f86 },  //  285; Use Count =   1
  { 0x1f8e },  //  286; Use Count =   1
  { 0x1f96 },  //  287; Use Count =   1
  { 0x1f9e },  //  288; Use Count =   1
  { 0x1fa6 },  //  289; Use Count =   1
  { 0x1fae },  //  290; Use Count =   1
  { 0x1f87 },  //  291; Use Count =   1
  { 0x1f8f },  //  292; Use Count =   1
  { 0x1f97 },  //  293; Use Count =   1
  { 0x1f9f },  //  294; Use Count =   1
  { 0x1fa7 },  //  295; Use Count =   1
  { 0x1faf },  //  296; Use Count =   1
  { 0x002d },  //  297; Use Count =   2
  { 0x1fb1 },  //  298; Use Count =   1
  { 0x1fb9 },  //  299; Use Count =   1
  { 0x1fd1 },  //  300; Use Count =   1
  { 0x1fd9 },  //  301; Use Count =   1
  { 0x1fe1 },  //  302; Use Count =   1
  { 0x1fe9 },  //  303; Use Count =   1
  { 0x005f },  //  304; Use Count =   2
  { 0x1fb0 },  //  305; Use Count =   1
  { 0x1fb8 },  //  306; Use Count =   1
  { 0x1fd0 },  //  307; Use Count =   1
  { 0x1fd8 },  //  308; Use Count =   1
  { 0x1fe0 },  //  309; Use Count =   1
  { 0x1fe8 },  //  310; Use Count =   1
  { 0x002f },  //  311; Use Count =   2
  { 0x1f04 },  //  312; Use Count =   1
  { 0x1f0c },  //  313; Use Count =   1
  { 0x1f14 },  //  314; Use Count =   1
  { 0x1f1c },  //  315; Use Count =   1
  { 0x1f24 },  //  316; Use Count =   1
  { 0x1f2c },  //  317; Use Count =   1
  { 0x1f34 },  //  318; Use Count =   1
  { 0x1f3c },  //  319; Use Count =   1
  { 0x1f44 },  //  320; Use Count =   1
  { 0x1f4c },  //  321; Use Count =   1
  { 0x1f64 },  //  322; Use Count =   1
  { 0x1f6c },  //  323; Use Count =   1
  { 0x1f54 },  //  324; Use Count =   1
  { 0x1fce },  //  325; Use Count =   1
  { 0x003f },  //  326; Use Count =   2
  { 0x1f05 },  //  327; Use Count =   1
  { 0x1f0d },  //  328; Use Count =   1
  { 0x1f15 },  //  329; Use Count =   1
  { 0x1f1d },  //  330; Use Count =   1
  { 0x1f25 },  //  331; Use Count =   1
  { 0x1f2d },  //  332; Use Count =   1
  { 0x1f35 },  //  333; Use Count =   1
  { 0x1f3d },  //  334; Use Count =   1
  { 0x1f45 },  //  335; Use Count =   1
  { 0x1f4d },  //  336; Use Count =   1
  { 0x1f65 },  //  337; Use Count =   1
  { 0x1f6d },  //  338; Use Count =   1
  { 0x1f55 },  //  339; Use Count =   1
  { 0x1f5d },  //  340; Use Count =   1
  { 0x1fde },  //  341; Use Count =   1
  { 0x1f84 },  //  342; Use Count =   1
  { 0x1f8c },  //  343; Use Count =   1
  { 0x1f94 },  //  344; Use Count =   1
  { 0x1f9c },  //  345; Use Count =   1
  { 0x1fa4 },  //  346; Use Count =   1
  { 0x1fac },  //  347; Use Count =   1
  { 0x1f85 },  //  348; Use Count =   1
  { 0x1f8d },  //  349; Use Count =   1
  { 0x1f95 },  //  350; Use Count =   1
  { 0x1f9d },  //  351; Use Count =   1
  { 0x1fa5 },  //  352; Use Count =   1
  { 0x1fad },  //  353; Use Count =   1
  { 0x1fd3 },  //  354; Use Count =   1
  { 0x1fe3 },  //  355; Use Count =   1
  { 0x1fee },  //  356; Use Count =   1
  { 0x1fd2 },  //  357; Use Count =   1
  { 0x1fe2 },  //  358; Use Count =   1
  { 0x1fed },  //  359; Use Count =   1
  { 0x1fc1 },  //  360; Use Count =   3
  { 0x1fd7 },  //  361; Use Count =   1
  { 0x1fe7 },  //  362; Use Count =   1
  { 0x1fb6 },  //  363; Use Count =   1
  { 0x1fc6 },  //  364; Use Count =   1
  { 0x1fd6 },  //  365; Use Count =   1
  { 0x1ff6 },  //  366; Use Count =   1
  { 0x1fe6 },  //  367; Use Count =   1
  { 0x1fc0 },  //  368; Use Count =   1
  { 0x007b },  //  369; Use Count =   2
  { 0x1fb3 },  //  370; Use Count =   1
  { 0x1fbc },  //  371; Use Count =   1
  { 0x1fc3 },  //  372; Use Count =   1
  { 0x1fcc },  //  373; Use Count =   1
  { 0x1ff3 },  //  374; Use Count =   1
  { 0x1ffc },  //  375; Use Count =   1
  { 0x1fbe },  //  376; Use Count =   1
  { 0x00ab },  //  377; Use Count =   2
  { 0x1fb7 },  //  378; Use Count =   1
  { 0x1fc7 },  //  379; Use Count =   1
  { 0x1ff7 },  //  380; Use Count =   1
  { 0x1f02 },  //  381; Use Count =   1
  { 0x1f0a },  //  382; Use Count =   1
  { 0x1f12 },  //  383; Use Count =   1
  { 0x1f1a },  //  384; Use Count =   1
  { 0x1f22 },  //  385; Use Count =   1
  { 0x1f2a },  //  386; Use Count =   1
  { 0x1f32 },  //  387; Use Count =   1
  { 0x1f3a },  //  388; Use Count =   1
  { 0x1f42 },  //  389; Use Count =   1
  { 0x1f4a },  //  390; Use Count =   1
  { 0x1f62 },  //  391; Use Count =   1
  { 0x1f6a },  //  392; Use Count =   1
  { 0x1f52 },  //  393; Use Count =   1
  { 0x1fcd },  //  394; Use Count =   1
  { 0x007c },  //  395; Use Count =   2
  { 0x1f03 },  //  396; Use Count =   1
  { 0x1f0b },  //  397; Use Count =   1
  { 0x1f13 },  //  398; Use Count =   1
  { 0x1f1b },  //  399; Use Count =   1
  { 0x1f23 },  //  400; Use Count =   1
  { 0x1f2b },  //  401; Use Count =   1
  { 0x1f33 },  //  402; Use Count =   1
  { 0x1f3b },  //  403; Use Count =   1
  { 0x1f43 },  //  404; Use Count =   1
  { 0x1f4b },  //  405; Use Count =   1
  { 0x1f63 },  //  406; Use Count =   1
  { 0x1f6b },  //  407; Use Count =   1
  { 0x1f53 },  //  408; Use Count =   1
  { 0x1f5b },  //  409; Use Count =   1
  { 0x1fdd },  //  410; Use Count =   1
  { 0x00ac },  //  411; Use Count =   2
  { 0x1f82 },  //  412; Use Count =   1
  { 0x1f8a },  //  413; Use Count =   1
  { 0x1f92 },  //  414; Use Count =   1
  { 0x1f9a },  //  415; Use Count =   1
  { 0x1fa2 },  //  416; Use Count =   1
  { 0x1faa },  //  417; Use Count =   1
  { 0x1f83 },  //  418; Use Count =   1
  { 0x1f8b },  //  419; Use Count =   1
  { 0x1f93 },  //  420; Use Count =   1
  { 0x1f9b },  //  421; Use Count =   1
  { 0x1fa3 },  //  422; Use Count =   1
  { 0x1fab },  //  423; Use Count =   1
  { 0x005d },  //  424; Use Count =   2
  { 0x1f70 },  //  425; Use Count =   1
  { 0x1fba },  //  426; Use Count =   1
  { 0x1f72 },  //  427; Use Count =   1
  { 0x1fc8 },  //  428; Use Count =   1
  { 0x1f74 },  //  429; Use Count =   1
  { 0x1fca },  //  430; Use Count =   1
  { 0x1f76 },  //  431; Use Count =   1
  { 0x1fda },  //  432; Use Count =   1
  { 0x1f78 },  //  433; Use Count =   1
  { 0x1ff8 },  //  434; Use Count =   1
  { 0x1f7c },  //  435; Use Count =   1
  { 0x1ffa },  //  436; Use Count =   1
  { 0x1f7a },  //  437; Use Count =   1
  { 0x1fea },  //  438; Use Count =   1
  { 0x1fef },  //  439; Use Count =   1
  { 0x007d },  //  440; Use Count =   2
  { 0x0387 },  //  441; Use Count =   1
  { 0x00bb },  //  442; Use Count =   2
  { 0x1fb2 },  //  443; Use Count =   1
  { 0x1fc2 },  //  444; Use Count =   1
  { 0x1ff2 },  //  445; Use Count =   1
  { 0x1f00 },  //  446; Use Count =   1
  { 0x1f08 },  //  447; Use Count =   1
  { 0x1f10 },  //  448; Use Count =   1
  { 0x1f18 },  //  449; Use Count =   1
  { 0x1f20 },  //  450; Use Count =   1
  { 0x1f28 },  //  451; Use Count =   1
  { 0x1f30 },  //  452; Use Count =   1
  { 0x1f38 },  //  453; Use Count =   1
  { 0x1f40 },  //  454; Use Count =   1
  { 0x1f48 },  //  455; Use Count =   1
  { 0x1fe4 },  //  456; Use Count =   1
  { 0x1f60 },  //  457; Use Count =   1
  { 0x1f68 },  //  458; Use Count =   1
  { 0x1f50 },  //  459; Use Count =   1
  { 0x1fbf },  //  460; Use Count =   1
  { 0x1f01 },  //  461; Use Count =   1
  { 0x1f09 },  //  462; Use Count =   1
  { 0x1f11 },  //  463; Use Count =   1
  { 0x1f19 },  //  464; Use Count =   1
  { 0x1f21 },  //  465; Use Count =   1
  { 0x1f29 },  //  466; Use Count =   1
  { 0x1f31 },  //  467; Use Count =   1
  { 0x1f39 },  //  468; Use Count =   1
  { 0x1f41 },  //  469; Use Count =   1
  { 0x1f49 },  //  470; Use Count =   1
  { 0x1fe5 },  //  471; Use Count =   1
  { 0x1fec },  //  472; Use Count =   1
  { 0x1f61 },  //  473; Use Count =   1
  { 0x1f69 },  //  474; Use Count =   1
  { 0x1f51 },  //  475; Use Count =   1
  { 0x1f59 },  //  476; Use Count =   1
  { 0x1ffe },  //  477; Use Count =   1
  { 0x1f80 },  //  478; Use Count =   1
  { 0x1f88 },  //  479; Use Count =   1
  { 0x1f90 },  //  480; Use Count =   1
  { 0x1f98 },  //  481; Use Count =   1
  { 0x1fa0 },  //  482; Use Count =   1
  { 0x1fa8 },  //  483; Use Count =   1
  { 0x1f81 },  //  484; Use Count =   1
  { 0x1f89 },  //  485; Use Count =   1
  { 0x1f91 },  //  486; Use Count =   1
  { 0x1f99 },  //  487; Use Count =   1
  { 0x1fa1 },  //  488; Use Count =   1
  { 0x1fa9 }   //  489; Use Count =   1
};
