/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_SCSS2Offset dtaSCSS2MC3_00000439[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000439(dtaSCSS2MC3_00000439,
                                               dtaSCSS2MC3_00000439 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000445[] = {
 { 0x0601,   4 },  //    0
 { 0x0611,   4 },  //    1
 { 0x0701,   5 },  //    2
 { 0x0711,   5 },  //    3
 { 0x0801,   6 },  //    4
 { 0x0811,   6 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000445(dtaSCSS2MC3_00000445,
                                               dtaSCSS2MC3_00000445 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000447[] = {
 { 0x0601,   8 },  //    0
 { 0x0611,   8 },  //    1
 { 0x0701,   9 },  //    2
 { 0x0711,   9 },  //    3
 { 0x0801,  10 },  //    4
 { 0x0811,  10 },  //    5
 { 0x0901,  11 },  //    6
 { 0x0911,  11 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000447(dtaSCSS2MC3_00000447,
                                               dtaSCSS2MC3_00000447 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000448[] = {
 { 0x0601,  12 },  //    0
 { 0x0611,  12 },  //    1
 { 0x0701,  13 },  //    2
 { 0x0711,  13 },  //    3
 { 0x0801,  14 },  //    4
 { 0x0811,  14 },  //    5
 { 0x0901,  15 },  //    6
 { 0x0911,  15 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000448(dtaSCSS2MC3_00000448,
                                               dtaSCSS2MC3_00000448 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000449[] = {
 { 0x0701,  16 },  //    0
 { 0x0711,  16 },  //    1
 { 0x0801,  17 },  //    2
 { 0x0811,  17 },  //    3
 { 0x0901,  18 },  //    4
 { 0x0911,  18 },  //    5
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000449(dtaSCSS2MC3_00000449,
                                               dtaSCSS2MC3_00000449 + 6);

static const st_SCSS2Offset dtaSCSS2MC3_0000044A[] = {
 { 0x0601,  19 },  //    0
 { 0x0611,  19 },  //    1
 { 0x0701,  20 },  //    2
 { 0x0711,  20 },  //    3
 { 0x0801,  21 },  //    4
 { 0x0811,  21 },  //    5
 { 0x0901,  22 },  //    6
 { 0x0911,  22 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044A(dtaSCSS2MC3_0000044A,
                                               dtaSCSS2MC3_0000044A + 8);

static const st_SCSS2Offset dtaSCSS2MC3_0000044B[] = {
 { 0x0601,  23 },  //    0
 { 0x0611,  23 },  //    1
 { 0x0701,  24 },  //    2
 { 0x0711,  24 },  //    3
 { 0x0801,  25 },  //    4
 { 0x0811,  25 },  //    5
 { 0x0901,  26 },  //    6
 { 0x0911,  26 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044B(dtaSCSS2MC3_0000044B,
                                               dtaSCSS2MC3_0000044B + 8);

static const st_SCSS2Offset dtaSCSS2MC3_0000044E[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044E(dtaSCSS2MC3_0000044E,
                                               dtaSCSS2MC3_0000044E + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00010439[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00010439(dtaSCSS2MC3_00010439,
                                               dtaSCSS2MC3_00010439 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00010445[] = {
 { 0x0601,  27 },  //    0
 { 0x0611,  27 },  //    1
 { 0x0701,  28 },  //    2
 { 0x0711,  28 },  //    3
 { 0x0801,  29 },  //    4
 { 0x0811,  29 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00010445(dtaSCSS2MC3_00010445,
                                               dtaSCSS2MC3_00010445 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00020445[] = {
 { 0x0601,  27 },  //    0
 { 0x0611,  27 },  //    1
 { 0x0701,  28 },  //    2
 { 0x0711,  28 },  //    3
 { 0x0801,  29 },  //    4
 { 0x0811,  29 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00020445(dtaSCSS2MC3_00020445,
                                               dtaSCSS2MC3_00020445 + 8);

static const wchar_t wcMC3[30][3] = {
  { 0x091c, 0x094d, 0x091e},  //    0; Use Count =   6
  { 0x0924, 0x094d, 0x0930},  //    1; Use Count =   6
  { 0x0915, 0x094d, 0x0937},  //    2; Use Count =   6
  { 0x0936, 0x094d, 0x0930},  //    3; Use Count =   6
  { 0x099c, 0x09cd, 0x09b0},  //    4; Use Count =   2
  { 0x09a4, 0x09cd, 0x09b7},  //    5; Use Count =   2
  { 0x0995, 0x09cd, 0x09b0},  //    6; Use Count =   2
  { 0x09b6, 0x09cd, 0x09b0},  //    7; Use Count =   6
  { 0x0a9c, 0x0acd, 0x0a9e},  //    8; Use Count =   2
  { 0x0aa4, 0x0acd, 0x0ab0},  //    9; Use Count =   2
  { 0x0a95, 0x0acd, 0x0ab7},  //   10; Use Count =   2
  { 0x0ab6, 0x0acd, 0x0ab0},  //   11; Use Count =   2
  { 0x0b1c, 0x0b4d, 0x0b1e},  //   12; Use Count =   2
  { 0x0b24, 0x0b4d, 0x0b30},  //   13; Use Count =   2
  { 0x0b15, 0x0b4d, 0x0b37},  //   14; Use Count =   2
  { 0x0b36, 0x0b4d, 0x0b30},  //   15; Use Count =   2
  { 0x0ba4, 0x0bcd, 0x0bb0},  //   16; Use Count =   2
  { 0x0b95, 0x0bcd, 0x0bb7},  //   17; Use Count =   2
  { 0x0bb7, 0x0bcd, 0x0bb0},  //   18; Use Count =   2
  { 0x0c1c, 0x0c4d, 0x0c1e},  //   19; Use Count =   2
  { 0x0c24, 0x0c4d, 0x0c30},  //   20; Use Count =   2
  { 0x0c15, 0x0c4d, 0x0c37},  //   21; Use Count =   2
  { 0x0c36, 0x0c4d, 0x0c30},  //   22; Use Count =   2
  { 0x0c9c, 0x0ccd, 0x0c9e},  //   23; Use Count =   2
  { 0x0ca4, 0x0ccd, 0x0cb0},  //   24; Use Count =   2
  { 0x0c95, 0x0ccd, 0x0cb7},  //   25; Use Count =   2
  { 0x0cb6, 0x0ccd, 0x0cb0},  //   26; Use Count =   2
  { 0x099c, 0x09cd, 0x099e},  //   27; Use Count =   4
  { 0x09a4, 0x09cd, 0x09b0},  //   28; Use Count =   4
  { 0x0995, 0x09cd, 0x09b7}   //   29; Use Count =   4
};
