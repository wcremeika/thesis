
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 0
/*
* Copyright (c) 2009 David Kelvin <c-273@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

// pws_osk.cpp : Defines the initialization routines for the DLL.
//

                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\stdafx.h" 0
// stdafx.h : include file for standard system include files,
// or project specific include files that are used frequently, but
// are changed infrequently

       

                                                                         

// Windows Header Files:
                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 12

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.h" 0
/*
* Copyright (c) 2009 David Kelvin <c-273@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

//
// pws_osk.h : main header file for the pws_osk DLL
//

                  
                  
                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\voskeys.h" 0
/*
* Copyright (c) 2009 David Kelvin <c-273@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

// File: voskeys.h
//

                  
                  

                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_voskeys.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/

                                       
                                       

                                       
                                       
                                       
                                       
                                       

                                       
                                       
                                       

                                       
                                       

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\voskeys.h" 18

                
                
             

typedef unsigned short int ushort;

// Per scancode - scancode, deadkey and 16 possible states
// with/without shift, alt, ctrl, alt+ctrl, capslock etc.
struct st_SC2CHAR {
  BYTE SC;
  std::bitset<16> bsDeadKey;
  wchar_t wcChar[16];
};

// For bitset below
// b == Base character
// l == Base + Left Control
// g == Base + Alt Gr
// r == Base + Right Control
// s == with Shift key
// C == with Caps Lock Key
enum eSpecials { b, bC, sb, sbC, l, lC, sl, slC, g, gC, sg, sgC, r, rC, sr, srC};
           
struct st_VKBD {
  unsigned short int uiCtrlID;
  BYTE numScanCodes;
  // l, lC, sl, slC, g, gC, sg, sgC, r, rC, sr, srC
  std::bitset<16> bsValidSpecials;
  // On Vista - 3 x 45, 5 x 46, 3 x 47, 11 x 48, 122 x 49, 2 x 51
  st_SC2CHAR stSC2CHAR[51];
};

//----------------------------------------------------------------------
// Following structures (starting with I) are used Internally by pws_osk
//----------------------------------------------------------------------

// Pack storage to single byte boundaries -
// but should have no impact wih these structure definitions
       

// Ketboard scan code data
// Deadkey bitmap saved as integer
// Display Characters saved as offsets into common data areas
struct st_ISC2CHAR {
  BYTE SC;                // Scan code for this key
  ushort uiDeadKey;       // Bitmap indicating if any states of this key are Dead Keys (saved as an integer)
  ushort uiOffset1;       // Offset for base character quartet
  ushort uiOffset2;       // Offset for base character + Left Control quartet
  ushort uiOffset3;       // Offset for base character + AltGr quartet
  ushort uiOffset4;       // Offset for base character + Right Control quartet
};

// Keyboard data
struct st_IVKBD {
  ushort uiCtrlID;                  // Control ID of resource containing name of this keyboard
  BYTE numScanCodes;                // Number of scan codes valid in this keyboard
  st_ISC2CHAR stISC2CHAR[51]; // Key data for each valid scan code
};

// Multi-character area:
// 1. SC + shiftstate 
// 2. Offset to appropriate common character table
struct st_SCSS2Offset {
  ushort uiSCSS;               // Scan code * 256 + shift state
  ushort uiOffset;             // Offset into multi-character table
};

// Valid Combination characters for a Dead Key
// 1. Shiftstate 
// 2. Scan code
// 3. Dead Key combination character
struct st_SCSSCC {
  BYTE SC;                     // Scan code
  BYTE SS;                     // Shift state
  wchar_t wcCC;                // Dead Key combination character
};

// Dead Keydata area internally
// 1. Scan code 
// 2. Shiftstate
// 3. Offset to appropriate common character table
struct st_IDKSCSS2Offset {
  BYTE SC;                     // Scan code
  BYTE SS;                     // Shift state
  ushort uiDKOffset;           // Offset to Dead Key value
};

typedef std::vector<const st_SCSS2Offset> Vct_ISCSS2MC;
typedef Vct_ISCSS2MC::const_iterator CIter_Vct_ISCSS2MC;

// Disable warning can't create const fields - we never do - they are constant values
       
       
struct st_IKLID2SCSS2MC {
  const unsigned int uiKLID;
  const Vct_ISCSS2MC * pvctISCSS2MC;
};
       

// Entry in an array of structures pointing to the keyboard data for a given KLID
struct st_IKLID2VKBD {
  unsigned int uiKLID;
  st_IVKBD * pstIVKBD;
};

// Revert packing
       

// Maps given keyboard's key's 'scancode + shiftstate' to
// a multi-character values
typedef std::map<ushort, ushort> Map_SCSS2MC;
typedef Map_SCSS2MC::const_iterator CIter_Map_SCSS2MC;

// Maps a given keyboard's DeadKey to map of scancode + shiftstate to character
typedef std::multimap<wchar_t, st_SCSSCC> MMap_DK2SCSSCC;
typedef MMap_DK2SCSSCC::iterator Iter_MMap_DK2SCSSCC;

// Used to build the deadkey maps when user selects a keyboard.
// Input: KLID
// Output: Corresponding Map_DK2SCSS2WC & Map_SCSS2WL maps

// Vector of scan codes and corresponding offset into common Deadkey data
// for a specific deadkey for a specific keyboard
typedef std::vector<const st_IDKSCSS2Offset> Vct_IDeadkeys;
typedef Vct_IDeadkeys::const_iterator CIter_Vct_IDeadkeys;

// Maps a given KLID's DeadKey to data area of scancode + shiftstate to character
typedef std::map<wchar_t, const Vct_IDeadkeys *> Map_IDK2SCSSCC;
typedef Map_IDK2SCSSCC::iterator Iter_Map_IDK2SCSSCC;

// Maps a given KLID to map of DeadKeys to map of scancode
// to lower + upper case offset
typedef std::map<unsigned int, Map_IDK2SCSSCC *> Map_IKLID2DK2SCSSCC;
typedef Map_IKLID2DK2SCSSCC::iterator Iter_Map_IKLID2DK2SCSSCC;

// Implementation structure
struct st_KBImpl {
  // Standard Keyboard
  st_VKBD stVKBD;
  
  // Pointers to 2-, 3- and 4-multibyte characters (if any)
  wchar_t * wcMC2; // [NUM_UNIQUE_MC2][2];
  wchar_t * wcMC3; // [NUM_UNIQUE_MC3][3];
  wchar_t * wcMC4; // [NUM_UNIQUE_MC4][4];
  
  // Pointers to Dead Key characters (if any)
  wchar_t * wcDK;  // [ NUM_UNIQUE_DK];
  
  // Maps to 2-, 3- and 4-multibyte characters (if any)
  Map_SCSS2MC * pmapSCSS2MC2;
  Map_SCSS2MC * pmapSCSS2MC3;
  Map_SCSS2MC * pmapSCSS2MC4;

  // Map to DeadKeys (if any)
  MMap_DK2SCSSCC  * pmmapDK2SCSSCC;
};

       /* _VOSKEYS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.h" 18

                        

                      
                                     
     
                                     
       /* PWS_OSK_EXPORTS */

                  
extern "C" {
       /* Start bracket of __cplusplus */

__declspec(dllimport) void OSK_ListKeyboards(UINT &uiKLID, UINT &uiCtrlID);
__declspec(dllimport) BOOL OSK_GetKeyboardData(UINT uiKLID, st_KBImpl &stKBImpl);
__declspec(dllimport) int  OSK_GetVersion();

                  
}
       /* End bracket of __cplusplus */

       /* _PWS_OSK_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 14

                   

// Internal routines
static void SetupDeadKeyMaps();
static void ClearDeadKeyMaps();

// Data

// Keyboard Layout Data including:
// Standard Character arrays (1-4), Standard Character Arrays (5-12)
// Extended Character Arrays (13-16) & Multi-character arrays
                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/

// Keyboard Layouts - 00000401:Arabic (101)
static st_IVKBD VKBD_00000401 = {
  8201, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,    2,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,   12,    0,    0,    0,
  0x30,      0,   13,    0,    0,    0,
  0x2e,      0,   14,    0,    0,    0,
  0x20,      0,   15,    0,    0,    0,
  0x12,      0,   16,    0,    0,    0,
  0x21,      0,   17,    0,    0,    0,
  0x22,      0,   18,    0,    0,    0,
  0x23,      0,   19,    0,    0,    0,
  0x17,      0,   20,    0,    0,    0,
  0x24,      0,   21,    0,    0,    0,
  0x25,      0,   22,    0,    0,    0,
  0x26,      0,   23,    0,    0,    0,
  0x32,      0,   24,    0,    0,    0,
  0x31,      0,   25,    0,    0,    0,
  0x18,      0,   26,    0,    0,    0,
  0x19,      0,   27,    0,    0,    0,
  0x10,      0,   28,    0,    0,    0,
  0x13,      0,   29,    0,    0,    0,
  0x1f,      0,   30,    0,    0,    0,
  0x14,      0,   31,    0,    0,    0,
  0x16,      0,   32,    0,    0,    0,
  0x2f,      0,   33,    0,    0,    0,
  0x11,      0,   34,    0,    0,    0,
  0x2d,      0,   35,    0,    0,    0,
  0x15,      0,   36,    0,    0,    0,
  0x2c,      0,   37,    0,    0,    0,
  0x27,      0,   38,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   40,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   42,    0,    0,    0,
  0x35,      0,   43,    0,    0,    0,
  0x29,      0,   44,    0,    0,    0,
  0x1a,      0,   45,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,   47,    0,    0,    0,
  0x28,      0,   48,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000402:Bulgarian (Typewriter)
static st_IVKBD VKBD_00000402 = {
  8202, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,   49,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,   50,    0,    0,    0,
  0x04,      0,   51,    0,    0,    0,
  0x05,      0,   52,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,   53,    0,    0,    0,
  0x08,      0,   54,    0,    0,    0,
  0x09,      0,   55,    0,    0,    0,
  0x0a,      0,   56,    0,    0,    0,
  0x1e,      0,   57,    0,    0,    0,
  0x30,      0,   58,    0,    0,    0,
  0x2e,      0,   59,    0,    0,    0,
  0x20,      0,   60,    0,    0,    0,
  0x12,      0,   61,    0,    0,    0,
  0x21,      0,   62,    0,    0,    0,
  0x22,      0,   63,    0,    0,    0,
  0x23,      0,   64,    0,    0,    0,
  0x17,      0,   65,    0,    0,    0,
  0x24,      0,   66,    0,    0,    0,
  0x25,      0,   67,    0,    0,    0,
  0x26,      0,   68,    0,    0,    0,
  0x32,      0,   69,    0,    0,    0,
  0x31,      0,   70,    0,    0,    0,
  0x18,      0,   71,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x34,      0,   73,    0,    0,    0,
  0x13,      0,   74,    0,    0,    0,
  0x1f,      0,   75,    0,    0,    0,
  0x14,      0,   76,    0,    0,    0,
  0x16,      0,   77,    0,    0,    0,
  0x2f,      0,   78,    0,    0,    0,
  0x11,      0,   79,    0,    0,    0,
  0x2d,      0,   80,    0,    0,    0,
  0x15,      0,   81,    0,    0,    0,
  0x2c,      0,   82,    0,    0,    0,
  0x27,      0,   83,    0,    0,    0,
  0x10,      0,   84,    0,    0,    0,
  0x0c,      0,   85,    0,    0,    0,
  0x0d,      0,   86,    0,    0,    0,
  0x35,      0,   87,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,   89,    0,    0,    0,
  0x2b,      0,   90,    0,    0,    0,
  0x1b,      0,   91,    0,    0,    0,
  0x28,      0,   92,    0,    0,    0,
  0x33,      0,   93,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000405:Czech
static st_IVKBD VKBD_00000405 = {
  8203, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,   94,    0,   95,    0,
  0x02,      0,   96,    0,   97,    0,
  0x03,    768,   98,    0,   99,    0,
  0x04,    768,  100,    0,  101,    0,
  0x05,    768,  102,    0,  103,    0,
  0x06,    768,  104,    0,  105,    0,
  0x07,    768,  106,    0,  107,    0,
  0x08,    768,  108,    0,  109,    0,
  0x09,    768,  110,    0,  111,    0,
  0x0a,    768,  112,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,  118,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,  151,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  154,    0,  155,    0,
  0x0c,    768,  156,    0,  157,    0,
  0x33,      0,  158,    0,  159,    0,
  0x35,      0,   41,    0,  160,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0d,    783,  163,    0,  164,    0,
  0x29,     12,  165,    0,    0,    0,
  0x1a,      0,  166,    0,  167,    0,
  0x2b,      3,  168,    0,  169,    0,
  0x1b,      0,  170,    0,  171,    0,
  0x28,      0,  172,    0,  173,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000406:Danish
static st_IVKBD VKBD_00000406 = {
  8204, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  186,    0,    0,    0,
  0x0d,     15,  187,    0,  149,    0,
  0x29,      0,  188,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  190,    0,    0,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00000407:German
static st_IVKBD VKBD_00000407 = {
  8205, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  192,    0,  136,    0,
  0x02,      0,  193,    0,    0,    0,
  0x03,      0,  194,    0,  195,    0,
  0x04,      0,  196,    0,  197,    0,
  0x05,      0,  198,    0,    0,    0,
  0x06,      0,  199,    0,    0,    0,
  0x07,      0,  200,    0,    0,    0,
  0x08,      0,  201,    0,  116,    0,
  0x09,      0,  202,    0,  124,    0,
  0x0a,      0,  203,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0,  204,    0,    0,    0,
  0x1b,      0,  205,    0,   97,    0,
  0x33,      0,  206,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  207,    0,    0,    0,
  0x2b,      0,  208,    0,    0,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0c,      0,  210,    0,  140,    0,
  0x29,      3,  211,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00000408:Greek
static st_IVKBD VKBD_00000408 = {
  8206, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  105,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  176,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,    8,    0,  215,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,  169,    0,
  0x0a,      0,  216,    0,  217,    0,
  0x1e,      0,  218,    0,    0,    0,
  0x30,      0,  219,    0,    0,    0,
  0x2e,      0,  220,    0,  221,    0,
  0x20,      0,  222,    0,    0,    0,
  0x12,      0,  223,    0,  122,    0,
  0x21,      0,  224,    0,    0,    0,
  0x22,      0,  225,    0,    0,    0,
  0x23,      0,  226,    0,    0,    0,
  0x17,      0,  227,    0,    0,    0,
  0x24,      0,  228,    0,    0,    0,
  0x25,      0,  229,    0,    0,    0,
  0x26,      0,  230,    0,    0,    0,
  0x32,      0,  231,    0,    0,    0,
  0x31,      0,  232,    0,    0,    0,
  0x18,      0,  233,    0,    0,    0,
  0x19,      0,  234,    0,    0,    0,
  0x10,      0,  235,    0,    0,    0,
  0x13,      0,  236,    0,  237,    0,
  0x1f,      0,  238,    0,    0,    0,
  0x14,      0,  239,    0,    0,    0,
  0x16,      0,  240,    0,    0,    0,
  0x2f,      0,  241,    0,    0,    0,
  0x11,     12,  242,    0,    0,    0,
  0x2d,      0,  243,    0,    0,    0,
  0x15,      0,  244,    0,  245,    0,
  0x2c,      0,  246,    0,    0,    0,
  0x27,    783,  247,    0,  248,    0,
  0x0d,      0,   39,    0,  249,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,  251,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  255,    0,
  0x2b,      0,   46,    0,  256,    0,
  0x1b,      0,  257,    0,  258,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000409:US
static st_IVKBD VKBD_00000409 = {
  8207, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0000040A:Spanish
static st_IVKBD VKBD_0000040A = {
  8208, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,  149,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,  260,    0,  151,    0,
  0x05,    768,    6,    0,   97,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,  256,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1a,     15,  261,    0,  124,    0,
  0x1b,      0,  262,    0,  126,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  263,    0,  136,    0,
  0x27,      0,  264,    0,    0,    0,
  0x0c,      0,  265,    0,    0,    0,
  0x29,      0,  266,    0,  140,    0,
  0x0d,      0,  267,    0,    0,    0,
  0x28,     15,  268,    0,  116,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000040B:Finnish
static st_IVKBD VKBD_0000040B = {
  8209, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,  140,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x29,      0,  269,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 0000040C:French
static st_IVKBD VKBD_0000040C = {
  8210, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  270,    0,  147,    0,
  0x02,      0,  271,    0,    0,    0,
  0x03,    768,  272,    0,   97,    0,
  0x04,      0,  273,    0,  151,    0,
  0x05,      0,  274,    0,  116,    0,
  0x06,      0,  275,    0,  124,    0,
  0x07,      0,  276,    0,  149,    0,
  0x08,    768,  277,    0,  109,    0,
  0x09,      0,  278,    0,  140,    0,
  0x0a,      0,  279,    0,  101,    0,
  0x10,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x27,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x1e,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x2c,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x11,      0,  153,    0,    0,    0,
  0x1b,      0,  280,    0,  169,    0,
  0x0d,      0,  281,    0,  136,    0,
  0x32,      0,  282,    0,    0,    0,
  0x33,      0,  283,    0,    0,    0,
  0x34,      0,  284,    0,    0,    0,
  0x28,      0,  285,    0,    0,    0,
  0x0c,      0,  286,    0,  126,    0,
  0x2b,      0,  287,    0,    0,    0,
  0x1a,     15,  288,    0,    0,    0,
  0x29,      0,  195,    0,    0,    0,
  0x35,      0,  289,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000040D:Hebrew
static st_IVKBD VKBD_0000040D = {
  8211, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  290,    0,    0,    0,
  0x02,      0,  291,    0,    0,    0,
  0x03,      0,  292,    0,    0,    0,
  0x04,      0,  293,    0,    0,    0,
  0x05,      0,  294,    0,  295,    0,
  0x06,      0,  296,    0,    0,    0,
  0x07,      0,  297,    0,    0,    0,
  0x08,      0,  298,    0,    0,    0,
  0x09,      0,  299,    0,    0,    0,
  0x0a,      0,  300,    0,    0,    0,
  0x1e,      0,  301,    0,    0,    0,
  0x30,      0,  302,    0,    0,    0,
  0x2e,      0,  303,    0,    0,    0,
  0x20,      0,  304,    0,    0,    0,
  0x12,      0,  305,    0,  122,    0,
  0x21,      0,  306,    0,    0,    0,
  0x22,      0,  307,    0,    0,    0,
  0x23,      0,  308,    0,  309,    0,
  0x17,      0,  310,    0,    0,    0,
  0x24,      0,  311,    0,  312,    0,
  0x25,      0,  313,    0,    0,    0,
  0x26,      0,  314,    0,    0,    0,
  0x32,      0,  315,    0,    0,    0,
  0x31,      0,  316,    0,    0,    0,
  0x18,      0,  317,    0,    0,    0,
  0x19,      0,  318,    0,    0,    0,
  0x10,      0,  319,    0,    0,    0,
  0x13,      0,  320,    0,    0,    0,
  0x1f,      0,  321,    0,    0,    0,
  0x14,      0,  322,    0,    0,    0,
  0x16,      0,  323,    0,  324,    0,
  0x2f,      0,  325,    0,    0,    0,
  0x11,      0,  326,    0,    0,    0,
  0x2d,      0,  327,    0,    0,    0,
  0x15,      0,  328,    0,    0,    0,
  0x2c,      0,  329,    0,    0,    0,
  0x27,      0,  330,    0,    0,    0,
  0x0d,      0,  331,    0,    0,    0,
  0x33,      0,  332,    0,    0,    0,
  0x0c,      0,  333,    0,  334,    0,
  0x34,      0,  335,    0,    0,    0,
  0x35,      0,  336,    0,    0,    0,
  0x29,      0,  337,    0,    0,    0,
  0x1a,      0,  338,    0,    0,    0,
  0x2b,      0,  339,    0,    0,    0,
  0x1b,      0,  340,    0,    0,    0,
  0x28,      0,  341,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0000040E:Hungarian
static st_IVKBD VKBD_0000040E = {
  8212, 49,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0,  342,    0,    0,    0,
  0x02,      0,  343,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,   51,    0,  101,    0,
  0x05,    768,  344,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  345,    0,  107,    0,
  0x08,      0,  346,    0,  109,    0,
  0x09,    768,  180,    0,  111,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,  347,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,  118,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,  348,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  349,    0,
  0x24,      0,  129,    0,  350,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  159,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  122,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,  151,    0,
  0x2c,      0,  152,    0,  162,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  351,    0,  155,    0,
  0x0d,    768,  352,    0,  164,    0,
  0x33,      0,  158,    0,  353,    0,
  0x35,      0,   41,    0,  160,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0c,    768,  204,    0,  157,    0,
  0x0b,    768,  209,    0,   95,    0,
  0x1a,      0,  354,    0,  167,    0,
  0x2b,      0,  355,    0,  169,    0,
  0x1b,      0,  356,    0,  171,    0,
  0x28,      0,  357,    0,  173,    0,
  0x56,      0,  358,    0,  159,    0
};

// Keyboard Layouts - 0000040F:Icelandic
static st_IVKBD VKBD_0000040F = {
  8213, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,      0,  265,    0,   97,    0,
  0x0c,      0,  209,    0,  140,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,  359,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,    768,  262,    0,  109,    0,
  0x27,      0,  186,    0,    0,    0,
  0x0d,      0,   41,    0,    0,    0,
  0x29,     15,  360,    0,  105,    0,
  0x1a,      0,  361,    0,    0,    0,
  0x28,    771,  362,    0,  101,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00000410:Italian
static st_IVKBD VKBD_00000410 = {
  8214, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1a,      0,  364,    0,  254,    0,
  0x1b,      0,  262,    0,  257,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  365,    0,    0,    0,
  0x27,      0,  366,    0,  147,    0,
  0x0c,      0,  265,    0,    0,    0,
  0x29,      0,   46,    0,    0,    0,
  0x0d,      0,  367,    0,    0,    0,
  0x28,      0,  368,    0,  151,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000413:Dutch
static st_IVKBD VKBD_00000413 = {
  8215, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  369,    0,    0,    0,
  0x02,      0,    3,    0,  370,    0,
  0x03,      0,  175,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  371,    0,
  0x06,      0,    7,    0,  249,    0,
  0x07,      0,  178,    0,  372,    0,
  0x08,      0,  373,    0,  176,    0,
  0x09,      0,  180,    0,  116,    0,
  0x0a,      0,   11,    0,  136,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  374,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,  215,    0,
  0x1f,      0,  142,    0,  173,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,  258,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  255,    0,
  0x1b,      0,  375,    0,    0,    0,
  0x27,      0,  376,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,  377,    0,    0,    0,
  0x34,      0,  161,    0,  378,    0,
  0x0d,    780,  379,    0,  164,    0,
  0x28,     15,  187,    0,    0,    0,
  0x0c,      0,  253,    0,  140,    0,
  0x2b,      0,  191,    0,    0,    0,
  0x1a,     15,  182,    0,    0,    0,
  0x29,      0,  380,    0,  256,    0,
  0x56,      0,  381,    0,  217,    0
};

// Keyboard Layouts - 00000414:Norwegian
static st_IVKBD VKBD_00000414 = {
  8216, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  190,    0,    0,    0,
  0x0d,    780,  382,    0,  113,    0,
  0x29,      0,  383,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  186,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000415:Polish (Programmers)
static st_IVKBD VKBD_00000415 = {
  8217, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  384,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  385,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  386,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  387,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,  388,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  389,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  122,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,  390,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  391,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,     12,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000416:Portuguese (Brazilian ABNT)
static st_IVKBD VKBD_00000416 = {
  8218, 51,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,  370,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  176,    0,
  0x06,      0,    7,    0,  374,    0,
  0x07,     12,  392,    0,  256,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  393,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  105,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  394,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  395,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  263,    0,    0,    0,
  0x0d,      0,   39,    0,  214,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  235,    0,    0,    0,
  0x29,      0,  259,    0,    0,    0,
  0x73,      0,  253,    0,  105,    0,
  0x7e,      0,  396,    0,    0,    0,
  0x1a,     15,  187,    0,    0,    0,
  0x2b,      0,  257,    0,  397,    0,
  0x1b,      0,  254,    0,  398,    0,
  0x28,     15,  399,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000418:Romanian (Legacy)
static st_IVKBD VKBD_00000418 = {
  8219, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  174,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,  177,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  178,    0,  107,    0,
  0x08,      0,  179,    0,  109,    0,
  0x09,    768,  180,    0,  378,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  400,    0,  155,    0,
  0x0d,    768,  185,    0,  164,    0,
  0x33,      0,  184,    0,  159,    0,
  0x0c,    768,  183,    0,  157,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,   41,    0,    0,    0,
  0x29,      0,  381,    0,    0,    0,
  0x1a,      0,  401,    0,  167,    0,
  0x2b,      0,  402,    0,    0,    0,
  0x1b,      0,  403,    0,  171,    0,
  0x28,      0,  404,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000419:Russian
static st_IVKBD VKBD_00000419 = {
  8220, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  412,    0,    0,    0
};

// Keyboard Layouts - 0000041A:Croatian
static st_IVKBD VKBD_0000041A = {
  8221, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  174,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  178,    0,  107,    0,
  0x08,      0,  179,    0,  109,    0,
  0x09,    768,  180,    0,  111,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  413,    0,    0,    0,
  0x0d,    768,  262,    0,  164,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0c,    768,  265,    0,  157,    0,
  0x29,     15,  414,    0,    0,    0,
  0x1a,      0,  415,    0,  167,    0,
  0x2b,      0,  416,    0,  169,    0,
  0x1b,      0,  417,    0,  171,    0,
  0x28,      0,  385,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000041B:Slovak
static st_IVKBD VKBD_0000041B = {
  8222, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  418,    0,   95,    0,
  0x02,      0,   96,    0,   97,    0,
  0x03,    768,  419,    0,   99,    0,
  0x04,    768,  420,    0,  101,    0,
  0x05,    768,  421,    0,  103,    0,
  0x06,    768,  422,    0,  105,    0,
  0x07,    768,  423,    0,  107,    0,
  0x08,      0,  424,    0,  109,    0,
  0x09,    768,  425,    0,  111,    0,
  0x0a,    768,  426,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,  118,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,  427,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,  151,    0,
  0x2c,      0,  152,    0,  162,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  428,    0,  155,    0,
  0x33,      0,  158,    0,  159,    0,
  0x35,      0,   41,    0,  160,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0c,    768,  156,    0,  157,    0,
  0x29,     12,  165,    0,    0,    0,
  0x1a,      0,  429,    0,  167,    0,
  0x2b,      0,  430,    0,  169,    0,
  0x1b,      0,  431,    0,  171,    0,
  0x28,      0,  172,    0,  173,    0,
  0x0d,    783,  163,    0,  164,    0,
  0x56,      0,  432,    0,  159,    0
};

// Keyboard Layouts - 0000041C:Albanian
static st_IVKBD VKBD_0000041C = {
  8223, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  213,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,    8,    0,  107,    0,
  0x08,      0,    9,    0,  109,    0,
  0x09,    768,   10,    0,  111,    0,
  0x0a,    768,  216,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  433,    0,  155,    0,
  0x0d,    768,   39,    0,  164,    0,
  0x33,      0,  184,    0,  159,    0,
  0x0c,    768,   41,    0,  157,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   46,    0,    0,    0,
  0x1a,      0,  263,    0,  167,    0,
  0x2b,      0,  257,    0,  169,    0,
  0x1b,      0,  434,    0,  171,    0,
  0x28,      0,  254,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000041D:Swedish
static st_IVKBD VKBD_0000041D = {
  8224, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,  140,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x29,      0,  269,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 0000041E:Thai Kedmanee
static st_IVKBD VKBD_0000041E = {
  8225, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  435,    0,    0,    0,
  0x02,      0,  436,    0,    0,    0,
  0x03,      0,  437,    0,    0,    0,
  0x04,      0,  438,    0,    0,    0,
  0x05,      0,  439,    0,    0,    0,
  0x06,      0,  440,    0,    0,    0,
  0x07,      0,  441,    0,    0,    0,
  0x08,      0,  442,    0,    0,    0,
  0x09,      0,  443,    0,    0,    0,
  0x0a,      0,  444,    0,    0,    0,
  0x1e,      0,  445,    0,    0,    0,
  0x30,      0,  446,    0,    0,    0,
  0x2e,      0,  447,    0,    0,    0,
  0x20,      0,  448,    0,    0,    0,
  0x12,      0,  449,    0,    0,    0,
  0x21,      0,  450,    0,    0,    0,
  0x22,      0,  451,    0,    0,    0,
  0x23,      0,  452,    0,    0,    0,
  0x17,      0,  453,    0,    0,    0,
  0x24,      0,  454,    0,    0,    0,
  0x25,      0,  455,    0,    0,    0,
  0x26,      0,  456,    0,    0,    0,
  0x32,      0,  457,    0,    0,    0,
  0x31,      0,  458,    0,    0,    0,
  0x18,      0,  459,    0,    0,    0,
  0x19,      0,  460,    0,    0,    0,
  0x10,      0,  461,    0,    0,    0,
  0x13,      0,  462,    0,    0,    0,
  0x1f,      0,  463,    0,    0,    0,
  0x14,      0,  464,    0,    0,    0,
  0x16,      0,  465,    0,    0,    0,
  0x2f,      0,  466,    0,    0,    0,
  0x11,      0,  467,    0,    0,    0,
  0x2d,      0,  468,    0,    0,    0,
  0x15,      0,  469,    0,    0,    0,
  0x2c,      0,  470,    0,    0,    0,
  0x27,      0,  471,    0,    0,    0,
  0x0d,      0,  472,    0,    0,    0,
  0x33,      0,  473,    0,    0,    0,
  0x0c,      0,  474,    0,    0,    0,
  0x34,      0,  475,    0,    0,    0,
  0x35,      0,  476,    0,    0,    0,
  0x29,      0,  477,    0,    0,    0,
  0x1a,      0,  478,  479,    0,    0,
  0x2b,      0,  480,  481,    0,    0,
  0x1b,      0,  482,  483,    0,    0,
  0x28,      0,  484,    0,    0,    0,
  0x56,      0,  480,  485,    0,    0
};

// Keyboard Layouts - 0000041F:Turkish Q
static st_IVKBD VKBD_0000041F = {
  8226, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,  162,    0,
  0x03,      0,  486,    0,  176,    0,
  0x04,     12,  487,    0,  151,    0,
  0x05,      0,  488,    0,  155,    0,
  0x06,      0,    7,    0,  249,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  186,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  489,    0,  490,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  173,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,    768,  400,    0,  113,    0,
  0x2b,    768,  184,    0,  109,    0,
  0x0d,      0,   41,    0,  149,    0,
  0x35,      0,  161,    0,    0,    0,
  0x33,      0,  209,    0,    0,    0,
  0x29,      0,  491,    0,  159,    0,
  0x1a,    768,  492,    0,  157,    0,
  0x34,      0,  263,    0,    0,    0,
  0x1b,    768,  204,    0,   97,    0,
  0x28,      0,  490,    0,    0,    0,
  0x0c,      0,  493,    0,  140,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00000420:Urdu
static st_IVKBD VKBD_00000420 = {
  8227, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,    2,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,  494,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,  495,    0,    0,    0,
  0x09,      0,  496,  497,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  498,  499,    0,    0,
  0x30,      0,  500,    0,    0,    0,
  0x2e,      0,  501,    0,    0,    0,
  0x20,      0,  502,    0,    0,    0,
  0x12,      0,  503,  504,    0,    0,
  0x21,      0,  505,    0,    0,    0,
  0x22,      0,  506,    0,    0,    0,
  0x23,      0,  507,  508,    0,    0,
  0x17,      0,  509,    0,    0,    0,
  0x24,      0,  510,  511,    0,    0,
  0x25,      0,  512,    0,    0,    0,
  0x26,      0,  513,    0,    0,    0,
  0x32,      0,  514,    0,    0,    0,
  0x31,      0,  515,    0,    0,    0,
  0x18,      0,  516,  517,    0,    0,
  0x19,      0,  518,  519,    0,    0,
  0x10,      0,  520,    0,    0,    0,
  0x13,      0,  521,  522,    0,    0,
  0x1f,      0,  523,    0,    0,    0,
  0x14,      0,  524,    0,    0,    0,
  0x16,      0,  525,    0,    0,    0,
  0x2f,      0,  526,    0,    0,    0,
  0x11,      0,  527,  528,    0,    0,
  0x2d,      0,  529,    0,    0,    0,
  0x15,      0,  530,    0,    0,    0,
  0x2c,      0,  531,    0,    0,    0,
  0x27,      0,  532,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  533,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  534,    0,    0,    0,
  0x35,      0,  535,    0,    0,    0,
  0x29,      0,   88,  536,    0,    0,
  0x1a,      0,  257,  537,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  254,  538,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000422:Ukrainian
static st_IVKBD VKBD_00000422 = {
  8228, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  539,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,  540,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,  541,    0,    0,    0,
  0x28,      0,  542,    0,    0,    0,
  0x56,      0,  540,    0,    0,    0
};

// Keyboard Layouts - 00000423:Belarusian
static st_IVKBD VKBD_00000423 = {
  8229, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,  539,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,  543,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,  544,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  412,    0,    0,    0
};

// Keyboard Layouts - 00000424:Slovenian
static st_IVKBD VKBD_00000424 = {
  8230, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  174,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  178,    0,  107,    0,
  0x08,      0,  179,    0,  109,    0,
  0x09,    768,  180,    0,  111,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  413,    0,    0,    0,
  0x0d,    768,  262,    0,  164,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0c,    768,  265,    0,  157,    0,
  0x29,     15,  414,    0,    0,    0,
  0x1a,      0,  415,    0,  167,    0,
  0x2b,      0,  416,    0,  169,    0,
  0x1b,      0,  417,    0,  171,    0,
  0x28,      0,  385,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000425:Estonian
static st_IVKBD VKBD_00000425 = {
  8231, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  545,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  546,    0,
  0x04,      0,    5,    0,  547,    0,
  0x05,      0,  177,    0,  548,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  549,    0,
  0x09,      0,  180,    0,  550,    0,
  0x0a,      0,   11,    0,  551,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  415,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  416,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x0c,      0,  183,    0,  552,    0,
  0x34,      0,  161,    0,    0,    0,
  0x28,    768,  212,    0,  553,    0,
  0x1a,      0,  204,    0,    0,    0,
  0x1b,      0,  554,    0,  555,    0,
  0x2b,      0,  185,    0,  556,    0,
  0x35,      0,   41,    0,    0,    0,
  0x29,     15,  557,    0,    0,    0,
  0x56,      0,  191,    0,  558,    0
};

// Keyboard Layouts - 00000426:Latvian
static st_IVKBD VKBD_00000426 = {
  8232, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,  255,    0,
  0x03,      0,  559,    0,  560,    0,
  0x04,      0,  561,    0,  562,    0,
  0x05,      0,    6,    0,  563,    0,
  0x06,   3072,    7,    0,  564,    0,
  0x07,      0,  345,    0,  565,    0,
  0x08,      0,    9,    0,  566,    0,
  0x09,      0,  567,    0,  568,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x24,      0,  114,    0,    0,    0,
  0x2d,      0,  115,    0,  150,    0,
  0x27,      0,  117,    0,    0,    0,
  0x23,      0,  119,    0,    0,    0,
  0x26,      0,  121,    0,  122,    0,
  0x0d,      0,  123,    0,  569,    0,
  0x11,      0,  125,    0,  570,    0,
  0x1b,      0,  127,    0,  257,    0,
  0x21,      0,  128,    0,    0,    0,
  0x12,      0,  129,    0,    0,    0,
  0x2f,      0,  130,    0,  571,    0,
  0x22,      0,  132,    0,    0,    0,
  0x14,      0,  134,    0,  148,    0,
  0x16,      0,  135,    0,    0,    0,
  0x31,      0,  137,    0,  554,    0,
  0x30,      0,  138,    0,    0,    0,
  0x10,      0,  572,    0,  139,    0,
  0x13,      0,  141,    0,  573,    0,
  0x20,      0,  142,    0,    0,    0,
  0x25,      0,  144,    0,    0,    0,
  0x1f,      0,  145,    0,    0,    0,
  0x15,      0,  146,    0,  152,    0,
  0x18,      0,  574,    0,    0,    0,
  0x19,      0,  413,    0,    0,    0,
  0x1a,      0,  416,    0,  254,    0,
  0x17,      0,  153,    0,    0,    0,
  0x1e,      0,  415,    0,    0,    0,
  0x33,      0,  184,    0,  159,    0,
  0x0c,      0,   41,    0,  575,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,  576,    0,    0,    0,
  0x29,      0,  577,    0,    0,    0,
  0x2c,      0,  578,    0,    0,    0,
  0x2b,      0,  571,    0,    0,    0,
  0x2e,      0,  579,    0,    0,    0,
  0x28,   3855,  580,    0,  268,    0,
  0x32,      0,  581,    0,    0,    0,
  0x56,      0,  570,    0,   46,    0
};

// Keyboard Layouts - 00000427:Lithuanian IBM
static st_IVKBD VKBD_00000427 = {
  8233, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  582,    0,  136,    0,
  0x02,      0,  583,    0,    0,    0,
  0x03,      0,  584,    0,    0,    0,
  0x04,      0,  585,    0,    0,    0,
  0x05,      0,  586,    0,    0,    0,
  0x06,      0,  587,    0,    0,    0,
  0x07,      0,  588,    0,    0,    0,
  0x08,      0,  589,    0,  116,    0,
  0x09,      0,  590,    0,  124,    0,
  0x0a,      0,  591,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  384,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  416,    0,    0,    0,
  0x2d,      0,  572,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  592,    0,    0,    0,
  0x0d,      0,  593,    0,    0,    0,
  0x33,      0,  413,    0,    0,    0,
  0x0c,      0,  594,    0,    0,    0,
  0x34,      0,  415,    0,    0,    0,
  0x35,      0,  386,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  595,    0,    0,    0,
  0x2b,      0,  596,    0,    0,    0,
  0x1b,      0,  597,    0,    0,    0,
  0x28,      0,  598,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000428:Tajik
static st_IVKBD VKBD_00000428 = {
  8234, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,  599,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,  600,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  601,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,  602,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,  603,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,  604,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  605,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  605,    0,    0,    0
};

// Keyboard Layouts - 00000429:Persian
static st_IVKBD VKBD_00000429 = {
  8235, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,    2,  606,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  607,    0,    0,    0,
  0x30,      0,  608,    0,    0,    0,
  0x2e,      0,  609,    0,    0,    0,
  0x20,      0,  610,    0,    0,    0,
  0x12,      0,  611,    0,    0,    0,
  0x21,      0,  612,    0,    0,    0,
  0x22,      0,  613,    0,    0,    0,
  0x23,      0,  510,    0,    0,    0,
  0x17,      0,  614,    0,    0,    0,
  0x24,      0,   21,    0,    0,    0,
  0x25,      0,  615,    0,    0,    0,
  0x26,      0,  616,    0,    0,    0,
  0x32,      0,  617,    0,    0,    0,
  0x31,      0,  618,    0,    0,    0,
  0x18,      0,  619,    0,    0,    0,
  0x19,      0,  620,    0,    0,    0,
  0x10,      0,  621,    0,    0,    0,
  0x13,      0,  622,    0,    0,    0,
  0x1f,      0,  623,    0,    0,    0,
  0x14,      0,  624,    0,    0,    0,
  0x16,      0,  625,    0,    0,    0,
  0x2f,      0,  626,    0,    0,    0,
  0x11,      0,  627,    0,    0,    0,
  0x2d,      0,  628,    0,    0,    0,
  0x15,      0,  629,    0,    0,    0,
  0x2c,      0,  630,    0,    0,    0,
  0x27,      0,  631,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  632,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  535,    0,    0,    0,
  0x29,      0,  633,    0,    0,    0,
  0x1a,      0,  634,    0,    0,    0,
  0x2b,      0,  635,    0,    0,    0,
  0x1b,      0,  636,    0,    0,    0,
  0x28,      0,  637,    0,    0,    0,
  0x56,      0,  635,    0,    0,    0
};

// Keyboard Layouts - 0000042A:Vietnamese
static st_IVKBD VKBD_0000042A = {
  8236, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  417,    0,  213,    0,
  0x02,      0,  401,    0,    3,    0,
  0x03,      0,  402,    0,    4,    0,
  0x04,      0,  638,    0,    5,    0,
  0x05,      0,  639,    0,    6,    0,
  0x06,      0,  640,    0,    7,    0,
  0x07,      0,  641,    0,    8,    0,
  0x08,      0,  642,    0,    9,    0,
  0x09,      0,  643,    0,   10,    0,
  0x0a,      0,  644,    0,  216,    0,
  0x1e,      0,  114,    0,  114,    0,
  0x30,      0,  115,    0,  115,    0,
  0x2e,      0,  117,    0,  117,    0,
  0x20,      0,  119,    0,  119,    0,
  0x12,      0,  121,    0,  121,    0,
  0x21,      0,  123,    0,  123,    0,
  0x22,      0,  125,    0,  125,    0,
  0x23,      0,  127,    0,  127,    0,
  0x17,      0,  128,    0,  128,    0,
  0x24,      0,  129,    0,  129,    0,
  0x25,      0,  130,    0,  130,    0,
  0x26,      0,  132,    0,  132,    0,
  0x32,      0,  134,    0,  134,    0,
  0x31,      0,  135,    0,  135,    0,
  0x18,      0,  137,    0,  137,    0,
  0x19,      0,  138,    0,  138,    0,
  0x10,      0,  139,    0,  139,    0,
  0x13,      0,  141,    0,  141,    0,
  0x1f,      0,  142,    0,  142,    0,
  0x14,      0,  144,    0,  144,    0,
  0x16,      0,  145,    0,  145,    0,
  0x2f,      0,  146,    0,  146,    0,
  0x11,      0,  148,    0,  148,    0,
  0x2d,      0,  150,    0,  150,    0,
  0x15,      0,  152,    0,  152,    0,
  0x2c,      0,  153,    0,  153,    0,
  0x27,      0,  235,    0,  235,    0,
  0x0d,      0,  645,    0,   39,    0,
  0x33,      0,  250,    0,  250,    0,
  0x0c,      0,   41,    0,   41,    0,
  0x34,      0,  252,    0,  252,    0,
  0x35,      0,  253,    0,  253,    0,
  0x29,      0,   88,    0,   88,    0,
  0x1a,      0,  646,    0,  254,    0,
  0x2b,      0,   46,    0,   46,    0,
  0x1b,      0,  647,    0,  257,    0,
  0x28,      0,  259,    0,  259,    0,
  0x56,      0,   46,    0,   46,    0
};

// Keyboard Layouts - 0000042B:Armenian Eastern
static st_IVKBD VKBD_0000042B = {
  8237, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  648,    0,    0,    0,
  0x02,      0,  649,    0,    0,    0,
  0x03,      0,  650,    0,    0,    0,
  0x04,      0,  651,    0,    0,    0,
  0x05,      0,  652,    0,    0,    0,
  0x06,      0,  653,    0,    0,    0,
  0x07,      0,  654,    0,    0,    0,
  0x08,      0,  655,    0,    0,    0,
  0x09,      0,  656,    0,    0,    0,
  0x0a,      0,  657,    0,    0,    0,
  0x1e,      0,  658,    0,    0,    0,
  0x30,      0,  659,    0,    0,    0,
  0x2e,      0,  660,    0,    0,    0,
  0x20,      0,  661,    0,    0,    0,
  0x12,      0,  662,    0,    0,    0,
  0x21,      0,  663,    0,    0,    0,
  0x22,      0,  664,    0,    0,    0,
  0x23,      0,  665,    0,    0,    0,
  0x17,      0,  666,    0,    0,    0,
  0x24,      0,  667,    0,    0,    0,
  0x25,      0,  668,    0,    0,    0,
  0x26,      0,  669,    0,    0,    0,
  0x32,      0,  670,    0,    0,    0,
  0x31,      0,  671,    0,    0,    0,
  0x18,      0,  672,    0,    0,    0,
  0x19,      0,  673,    0,    0,    0,
  0x10,      0,  674,    0,    0,    0,
  0x13,      0,  675,    0,    0,    0,
  0x1f,      0,  676,    0,    0,    0,
  0x14,      0,  677,    0,    0,    0,
  0x16,      0,  678,    0,    0,    0,
  0x2f,      0,  679,    0,    0,    0,
  0x11,      0,  680,    0,    0,    0,
  0x2d,      0,  681,    0,    0,    0,
  0x15,      0,  682,    0,    0,    0,
  0x2c,      0,  683,    0,    0,    0,
  0x1b,      0,  684,    0,    0,    0,
  0x27,      0,  685,    0,    0,    0,
  0x33,      0,  686,    0,    0,    0,
  0x35,      0,  687,    0,    0,    0,
  0x34,      0,  688,    0,    0,    0,
  0x0d,      0,  689,    0,    0,    0,
  0x28,      0,  690,    0,    0,    0,
  0x0c,      0,  691,    0,    0,    0,
  0x2b,      0,  692,    0,    0,    0,
  0x1a,      0,  693,    0,    0,    0,
  0x29,      0,  694,    0,    0,    0,
  0x56,      0,  692,    0,    0,    0
};

// Keyboard Layouts - 0000042C:Azeri Latin
static st_IVKBD VKBD_0000042C = {
  8238, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  695,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  490,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  204,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  489,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  263,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  400,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x28,      0,  696,    0,    0,    0,
  0x1a,      0,  209,    0,    0,    0,
  0x56,      0,  412,    0,    0,    0,
  0x1b,      0,  492,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0
};

// Keyboard Layouts - 0000042E:Sorbian Standard (Legacy)
static st_IVKBD VKBD_0000042E = {
  8239, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  192,    0,  136,    0,
  0x02,      0,  193,    0,  258,    0,
  0x03,      0,  194,    0,  255,    0,
  0x04,      0,  196,    0,  697,    0,
  0x05,      0,  198,    0,  698,    0,
  0x06,      0,  199,    0,  699,    0,
  0x07,      0,  200,    0,  700,    0,
  0x08,      0,  201,    0,  116,    0,
  0x09,      0,  202,    0,  124,    0,
  0x0a,      0,  203,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0,  204,    0,    0,    0,
  0x1b,      0,  205,    0,   97,    0,
  0x33,      0,  206,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  207,    0,    0,    0,
  0x2b,      0,  387,    0,  151,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0c,      0,  210,    0,  140,    0,
  0x29,     15,  211,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00000432:Setswana
static st_IVKBD VKBD_00000432 = {
  8240, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,  702,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  703,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,     12,    8,    0,  371,    0,
  0x08,      0,    9,    0,  249,    0,
  0x09,      0,   10,    0,  372,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  704,    0,
  0x20,      0,  119,    0,  361,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  190,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  264,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,  209,    0,
  0x10,      0,  139,    0,  212,    0,
  0x13,      0,  141,    0,  237,    0,
  0x1f,      0,  142,    0,  705,    0,
  0x14,      0,  144,    0,  359,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  189,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  204,    0,
  0x2c,      0,  153,    0,  186,    0,
  0x27,      0,  235,    0,  706,    0,
  0x0d,      0,   39,    0,  707,    0,
  0x33,      0,  250,    0,  263,    0,
  0x0c,      0,   41,    0,  245,    0,
  0x34,      0,  252,    0,  415,    0,
  0x35,      0,  253,    0,  708,    0,
  0x29,     15,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  255,    0,
  0x2b,      0,   46,    0,  709,    0,
  0x1b,      0,  257,    0,  258,    0,
  0x28,     15,  259,    0,  268,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000437:Georgian
static st_IVKBD VKBD_00000437 = {
  8241, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  710,    0,    0,    0,
  0x02,      0,  583,    0,    0,    0,
  0x03,      0,  711,    0,    0,    0,
  0x04,      0,  712,    0,    0,    0,
  0x05,      0,  713,    0,    0,    0,
  0x06,      0,  714,    0,    0,    0,
  0x07,      0,  715,    0,    0,    0,
  0x08,      0,  589,    0,    0,    0,
  0x09,      0,  716,    0,    0,    0,
  0x0a,      0,  717,    0,    0,    0,
  0x1e,      0,  718,    0,  719,    0,
  0x30,      0,  720,    0,    0,    0,
  0x2e,      0,  721,    0,    0,    0,
  0x20,      0,  722,    0,  723,    0,
  0x12,      0,  724,    0,    0,    0,
  0x21,      0,  725,    0,    0,    0,
  0x22,      0,  726,    0,    0,    0,
  0x23,      0,  727,    0,    0,    0,
  0x17,      0,  728,    0,    0,    0,
  0x24,      0,  729,    0,    0,    0,
  0x25,      0,  730,    0,    0,    0,
  0x26,      0,  731,    0,    0,    0,
  0x32,      0,  732,    0,    0,    0,
  0x31,      0,  733,    0,  734,    0,
  0x18,      0,  735,    0,    0,    0,
  0x19,      0,  736,    0,    0,    0,
  0x10,      0,  737,    0,    0,    0,
  0x13,      0,  738,    0,    0,    0,
  0x1f,      0,  739,    0,    0,    0,
  0x14,      0,  740,    0,  741,    0,
  0x16,      0,  742,    0,    0,    0,
  0x2f,      0,  743,    0,    0,    0,
  0x11,      0,  744,    0,    0,    0,
  0x2d,      0,  745,    0,    0,    0,
  0x15,      0,  746,    0,    0,    0,
  0x2c,      0,  747,    0,    0,    0,
  0x27,      0,  748,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  749,    0,    0,    0,
  0x0c,      0,  750,    0,    0,    0,
  0x34,      0,  751,    0,    0,    0,
  0x35,      0,  752,    0,  753,    0,
  0x29,      0,  754,    0,    0,    0,
  0x1a,      0,  755,    0,  756,    0,
  0x2b,      0,   90,    0,    0,    0,
  0x1b,      0,  757,    0,    0,    0,
  0x28,      0,  758,    0,    0,    0,
  0x56,      0,   90,    0,    0,    0
};

// Keyboard Layouts - 00000438:Faeroese
static st_IVKBD VKBD_00000438 = {
  8242, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,    768,  361,    0,   97,    0,
  0x0c,      0,  183,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  186,    0,    0,    0,
  0x0d,     15,  187,    0,  149,    0,
  0x29,      0,  188,    0,    0,    0,
  0x1a,    768,  189,    0,  157,    0,
  0x28,    768,  190,    0,  101,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00000439:Devanagari - INSCRIPT
static st_IVKBD VKBD_00000439 = {
  8243, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  759,    0,
  0x02,      0,  760,    0,  761,    0,
  0x03,      0,  762,    0,  763,    0,
  0x04,      0,  764,    0,  765,    0,
  0x05,      0,  766,    0,  767,    0,
  0x06,      0,  768,    0,  769,    0,
  0x07,      0,  770,    0,  771,    0,
  0x08,      0,  772,    0,  773,    0,
  0x09,      0,  774,    0,  775,    0,
  0x0a,      0,  216,    0,  776,    0,
  0x1e,      0,  777,    0,    0,    0,
  0x30,      0,  778,    0,    0,    0,
  0x2e,      0,  779,    0,  780,    0,
  0x20,      0,  781,    0,    0,    0,
  0x12,      0,  782,    0,    0,    0,
  0x21,      0,  783,    0,  784,    0,
  0x22,      0,  785,    0,    0,    0,
  0x23,      0,  786,    0,  787,    0,
  0x17,      0,  788,    0,  789,    0,
  0x24,      0,  790,    0,    0,    0,
  0x25,      0,  791,    0,  792,    0,
  0x26,      0,  793,    0,    0,    0,
  0x32,      0,  794,    0,    0,    0,
  0x31,      0,  795,    0,    0,    0,
  0x18,      0,  796,    0,    0,    0,
  0x19,      0,  797,    0,  798,    0,
  0x10,      0,  799,    0,    0,    0,
  0x13,      0,  800,    0,  801,    0,
  0x1f,      0,  802,    0,    0,    0,
  0x14,      0,  803,    0,    0,    0,
  0x16,      0,  804,    0,    0,    0,
  0x2f,      0,  805,    0,    0,    0,
  0x11,      0,  806,    0,    0,    0,
  0x2d,      0,  807,    0,  808,    0,
  0x15,      0,  809,    0,    0,    0,
  0x2c,      0,  810,    0,  811,    0,
  0x27,      0,  812,    0,  813,    0,
  0x0d,      0,  814,    0,  815,    0,
  0x33,      0,  816,    0,  817,    0,
  0x0c,      0,  818,    0,    0,    0,
  0x34,      0,  819,    0,  820,    0,
  0x35,      0,  821,    0,    0,    0,
  0x29,      0,  822,    0,    0,    0,
  0x1a,      0,  823,    0,  824,    0,
  0x2b,      0,  825,    0,    0,    0,
  0x1b,      0,  826,    0,    0,    0,
  0x28,      0,  827,    0,  828,    0,
  0x56,      0,  825,    0,    0,    0
};

// Keyboard Layouts - 0000043B:Norwegian with Sami
static st_IVKBD VKBD_0000043B = {
  8244, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,  829,    0,
  0x2e,      0,  117,    0,  413,    0,
  0x20,      0,  119,    0,  417,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  830,    0,
  0x22,      0,  125,    0,  831,    0,
  0x23,      0,  127,    0,  832,    0,
  0x17,      0,  128,    0,  833,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  834,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  835,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  402,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  415,    0,
  0x14,      0,  144,    0,  836,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  837,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  416,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  190,    0,  209,    0,
  0x0d,    780,  382,    0,  113,    0,
  0x29,      0,  383,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  186,    0,  212,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000043F:Kazakh
static st_IVKBD VKBD_0000043F = {
  8245, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  602,    0,    0,    0,
  0x02,      0,  838,    0,    0,    0,
  0x03,      0,  839,    0,    0,    0,
  0x04,      0,  539,    0,    0,    0,
  0x05,      0,  840,    0,    0,    0,
  0x06,      0,  604,    0,    0,    0,
  0x07,      0,  184,    0,    0,    0,
  0x08,      0,  161,    0,    0,    0,
  0x09,      0,  841,    0,    0,    0,
  0x0a,      0,  842,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,  843,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,  844,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  845,    0,    0,    0,
  0x29,      0,   90,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  846,    0,    0,    0
};

// Keyboard Layouts - 00000440:Kyrgyz Cyrillic
static st_IVKBD VKBD_00000440 = {
  8246, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,  841,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,  844,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,  840,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  412,    0,    0,    0
};

// Keyboard Layouts - 00000442:Turkmen
static st_IVKBD VKBD_00000442 = {
  8247, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  847,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  263,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  212,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  848,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  204,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,  140,    0,
  0x29,      0,  416,    0,    0,    0,
  0x1a,      0,  849,    0,    0,    0,
  0x2b,      0,  400,    0,  149,    0,
  0x1b,      0,  209,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000444:Tatar
static st_IVKBD VKBD_00000444 = {
  8248, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,  405,    0,  151,    0,
  0x05,      0,  406,    0,  155,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,  124,    0,
  0x09,      0,   10,    0,  126,    0,
  0x0a,      0,  216,    0,  116,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,  850,    0,   57,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,  839,    0,   81,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,  844,    0,   89,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,  840,    0,   63,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,  159,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,  162,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  843,    0,  411,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,  841,    0,   59,    0,
  0x28,      0,   78,    0,  427,    0,
  0x56,      0,  540,    0,    0,    0
};

// Keyboard Layouts - 00000445:Bengali
static st_IVKBD VKBD_00000445 = {
  8249, 45,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  851,    0,
  0x02,      0,  852,    0,  853,    0,
  0x03,      0,  854,    0,  855,    0,
  0x04,      0,  764,    0,  856,    0,
  0x05,      0,  766,    0,  857,    0,
  0x06,      0,  768,    0,  858,    0,
  0x07,      0,  770,    0,  859,    0,
  0x08,      0,  772,    0,  860,    0,
  0x09,      0,  774,    0,  861,    0,
  0x0a,      0,  216,    0,  862,    0,
  0x1e,      0,  863,    0,  864,    0,
  0x30,      0,  865,    0,    0,    0,
  0x2e,      0,  866,    0,    0,    0,
  0x20,      0,  867,    0,  868,    0,
  0x12,      0,  869,    0,    0,    0,
  0x21,      0,  870,    0,  871,    0,
  0x22,      0,  872,    0,    0,    0,
  0x23,      0,  873,    0,    0,    0,
  0x17,      0,  874,    0,    0,    0,
  0x24,      0,  875,    0,  876,    0,
  0x25,      0,  877,    0,    0,    0,
  0x26,      0,  878,    0,    0,    0,
  0x32,      0,  879,    0,    0,    0,
  0x31,      0,  880,    0,    0,    0,
  0x18,      0,  881,    0,    0,    0,
  0x19,      0,  882,    0,    0,    0,
  0x10,      0,  883,    0,  884,    0,
  0x13,      0,  885,    0,  886,    0,
  0x1f,      0,  887,    0,  888,    0,
  0x14,      0,  889,    0,    0,    0,
  0x16,      0,  890,    0,    0,    0,
  0x2f,      0,  891,    0,    0,    0,
  0x11,      0,  892,    0,    0,    0,
  0x2d,      0,  893,    0,  894,    0,
  0x15,      0,  895,    0,    0,    0,
  0x27,      0,  896,    0,    0,    0,
  0x0d,      0,  897,    0,  898,    0,
  0x33,      0,  899,    0,    0,    0,
  0x0c,      0,  900,    0,    0,    0,
  0x34,      0,  901,    0,    0,    0,
  0x35,      0,  902,    0,    0,    0,
  0x1a,      0,  903,    0,  904,    0,
  0x1b,      0,  905,    0,    0,    0,
  0x28,      0,  906,    0,    0,    0
};

// Keyboard Layouts - 00000446:Punjabi
static st_IVKBD VKBD_00000446 = {
  8250, 45,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  907,    0,
  0x02,      0,  908,    0,  909,    0,
  0x03,      0,  910,    0,  911,    0,
  0x04,      0,  764,    0,  912,    0,
  0x05,      0,  913,    0,  914,    0,
  0x06,      0,  915,    0,  916,    0,
  0x07,      0,  917,    0,  918,    0,
  0x08,      0,  919,    0,  920,    0,
  0x09,      0,  921,    0,  922,    0,
  0x0a,      0,  216,    0,  923,    0,
  0x1e,      0,  924,    0,    0,    0,
  0x30,      0,  925,    0,  926,    0,
  0x2e,      0,  927,    0,    0,    0,
  0x20,      0,  928,    0,    0,    0,
  0x12,      0,  929,    0,    0,    0,
  0x21,      0,  930,    0,    0,    0,
  0x22,      0,  931,    0,    0,    0,
  0x23,      0,  932,    0,  933,    0,
  0x17,      0,  934,    0,  935,    0,
  0x24,      0,  936,    0,    0,    0,
  0x25,      0,  937,    0,  938,    0,
  0x26,      0,  939,    0,    0,    0,
  0x32,      0,  940,    0,    0,    0,
  0x31,      0,  941,    0,    0,    0,
  0x18,      0,  942,    0,    0,    0,
  0x19,      0,  943,    0,  944,    0,
  0x10,      0,  945,    0,    0,    0,
  0x13,      0,  946,    0,    0,    0,
  0x1f,      0,  947,    0,    0,    0,
  0x14,      0,  948,    0,    0,    0,
  0x16,      0,  949,    0,    0,    0,
  0x2f,      0,  950,    0,    0,    0,
  0x11,      0,  951,    0,    0,    0,
  0x2d,      0,  952,    0,  953,    0,
  0x15,      0,  954,    0,    0,    0,
  0x27,      0,  955,    0,    0,    0,
  0x33,      0,  956,    0,    0,    0,
  0x0c,      0,  957,    0,    0,    0,
  0x34,      0,  819,    0,  958,    0,
  0x35,      0,  959,    0,    0,    0,
  0x29,      0,  960,    0,    0,    0,
  0x1a,      0,  961,    0,  962,    0,
  0x1b,      0,  963,    0,    0,    0,
  0x28,      0,  964,    0,    0,    0
};

// Keyboard Layouts - 00000447:Gujarati
static st_IVKBD VKBD_00000447 = {
  8251, 46,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  965,    0,
  0x02,      0,  966,    0,  967,    0,
  0x03,      0,  968,    0,  969,    0,
  0x04,      0,  764,    0,  970,    0,
  0x05,      0,  766,    0,  971,    0,
  0x06,      0,  768,    0,  972,    0,
  0x07,      0,  770,    0,  973,    0,
  0x08,      0,  772,    0,  974,    0,
  0x09,      0,  774,    0,  975,    0,
  0x0a,      0,  216,    0,  976,    0,
  0x1e,      0,  977,    0,    0,    0,
  0x30,      0,  978,    0,    0,    0,
  0x2e,      0,  979,    0,    0,    0,
  0x20,      0,  980,    0,    0,    0,
  0x12,      0,  981,    0,    0,    0,
  0x21,      0,  982,    0,    0,    0,
  0x22,      0,  983,    0,    0,    0,
  0x23,      0,  984,    0,    0,    0,
  0x17,      0,  985,    0,    0,    0,
  0x24,      0,  986,    0,    0,    0,
  0x25,      0,  987,    0,    0,    0,
  0x26,      0,  988,    0,    0,    0,
  0x32,      0,  989,    0,    0,    0,
  0x31,      0,  990,    0,    0,    0,
  0x18,      0,  991,    0,    0,    0,
  0x19,      0,  992,    0,    0,    0,
  0x10,      0,  993,    0,    0,    0,
  0x13,      0,  994,    0,    0,    0,
  0x1f,      0,  995,    0,    0,    0,
  0x14,      0,  996,    0,    0,    0,
  0x16,      0,  997,    0,    0,    0,
  0x2f,      0,  998,    0,    0,    0,
  0x11,      0,  999,    0,    0,    0,
  0x2d,      0, 1000,    0, 1001,    0,
  0x15,      0, 1002,    0,    0,    0,
  0x27,      0, 1003,    0,    0,    0,
  0x0d,      0, 1004,    0, 1005,    0,
  0x33,      0, 1006,    0,    0,    0,
  0x0c,      0, 1007,    0,    0,    0,
  0x34,      0,  819,    0, 1008,    0,
  0x35,      0, 1009,    0,    0,    0,
  0x1a,      0, 1010,    0,    0,    0,
  0x2b,      0, 1011,    0,    0,    0,
  0x1b,      0, 1012,    0,    0,    0,
  0x28,      0, 1013,    0,    0,    0
};

// Keyboard Layouts - 00000448:Oriya
static st_IVKBD VKBD_00000448 = {
  8252, 46,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1014,    0,
  0x02,      0,  852,    0, 1015,    0,
  0x03,      0,  854,    0, 1016,    0,
  0x04,      0,  764,    0, 1017,    0,
  0x05,      0,  766,    0, 1018,    0,
  0x06,      0,  768,    0, 1019,    0,
  0x07,      0,  770,    0, 1020,    0,
  0x08,      0,  772,    0, 1021,    0,
  0x09,      0,  774,    0, 1022,    0,
  0x0a,      0,  216,    0, 1023,    0,
  0x1e,      0, 1024,    0,    0,    0,
  0x30,      0, 1025,    0,    0,    0,
  0x2e,      0, 1026,    0,    0,    0,
  0x20,      0, 1027,    0,    0,    0,
  0x12,      0, 1028,    0,    0,    0,
  0x21,      0, 1029,    0, 1030,    0,
  0x22,      0, 1031,    0,    0,    0,
  0x23,      0, 1032,    0,    0,    0,
  0x17,      0, 1033,    0,    0,    0,
  0x24,      0, 1034,    0,    0,    0,
  0x25,      0, 1035,    0,    0,    0,
  0x26,      0, 1036,    0,    0,    0,
  0x32,      0, 1037,    0,    0,    0,
  0x31,      0, 1038,    0,    0,    0,
  0x18,      0, 1039,    0,    0,    0,
  0x19,      0, 1040,    0,    0,    0,
  0x10,      0, 1041,    0,    0,    0,
  0x13,      0, 1042,    0, 1043,    0,
  0x1f,      0, 1044,    0,    0,    0,
  0x14,      0, 1045,    0,    0,    0,
  0x16,      0, 1046,    0,    0,    0,
  0x2f,      0, 1047,    0,    0,    0,
  0x11,      0, 1048,    0,    0,    0,
  0x2d,      0, 1049,    0,    0,    0,
  0x15,      0, 1050,    0,    0,    0,
  0x2c,      0, 1051,    0,    0,    0,
  0x27,      0, 1052,    0,    0,    0,
  0x0d,      0, 1053,    0, 1054,    0,
  0x33,      0, 1055,    0,    0,    0,
  0x0c,      0, 1056,    0,    0,    0,
  0x34,      0, 1057,    0, 1058,    0,
  0x35,      0, 1059,    0, 1060,    0,
  0x1a,      0, 1061,    0, 1062,    0,
  0x1b,      0, 1063,    0,    0,    0,
  0x28,      0, 1064,    0,    0,    0
};

// Keyboard Layouts - 00000449:Tamil
static st_IVKBD VKBD_00000449 = {
  8253, 46,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1065,    0, 1066,    0,
  0x02,      0,  852,    0, 1067,    0,
  0x03,      0,  854,    0, 1068,    0,
  0x04,      0, 1069,    0, 1070,    0,
  0x05,      0, 1071,    0, 1072,    0,
  0x06,      0,  915,    0, 1073,    0,
  0x07,      0,  770,    0, 1074,    0,
  0x08,      0,  772,    0, 1075,    0,
  0x09,      0,  774,    0, 1076,    0,
  0x0a,      0, 1077,    0, 1078,    0,
  0x1e,      0, 1079,    0,    0,    0,
  0x30,      0, 1080,    0,    0,    0,
  0x2e,      0, 1081,    0,    0,    0,
  0x20,      0, 1082,    0,    0,    0,
  0x12,      0, 1083,    0,    0,    0,
  0x21,      0, 1084,    0,    0,    0,
  0x22,      0, 1085,    0,    0,    0,
  0x23,      0, 1086,    0,    0,    0,
  0x17,      0, 1087,    0,    0,    0,
  0x24,      0, 1088,    0,    0,    0,
  0x25,      0, 1087,    0,    0,    0,
  0x26,      0, 1089,    0,    0,    0,
  0x32,      0, 1090,    0,    0,    0,
  0x31,      0, 1091,    0,    0,    0,
  0x18,      0, 1089,    0,    0,    0,
  0x19,      0, 1092,    0,    0,    0,
  0x10,      0, 1093,    0,    0,    0,
  0x13,      0, 1094,    0,    0,    0,
  0x1f,      0, 1095,    0,    0,    0,
  0x14,      0, 1096,    0,    0,    0,
  0x16,      0, 1097,    0,    0,    0,
  0x2f,      0, 1098,    0,    0,    0,
  0x11,      0, 1099,    0,    0,    0,
  0x15,      0, 1086,    0,    0,    0,
  0x2c,      0, 1100,    0,    0,    0,
  0x27,      0, 1101,    0,    0,    0,
  0x0d,      0,    0,    0, 1102,    0,
  0x33,      0, 1103,    0,    0,    0,
  0x0c,      0, 1104,    0, 1105,    0,
  0x34,      0, 1106,    0,    0,    0,
  0x35,      0, 1107,    0,    0,    0,
  0x29,      0, 1108,    0,    0,    0,
  0x1a,      0, 1109,    0,    0,    0,
  0x1b,      0, 1110,    0,    0,    0,
  0x28,      0, 1109,    0,    0,    0
};

// Keyboard Layouts - 0000044A:Telugu
static st_IVKBD VKBD_0000044A = {
  8254, 47,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1111,    0,
  0x02,      0,  852,    0, 1112,    0,
  0x03,      0,  854,    0, 1113,    0,
  0x04,      0,  764,    0, 1114,    0,
  0x05,      0, 1071,    0, 1115,    0,
  0x06,      0,  768,    0, 1116,    0,
  0x07,      0,  770,    0, 1117,    0,
  0x08,      0,  772,    0, 1118,    0,
  0x09,      0,  774,    0, 1119,    0,
  0x0a,      0,  216,    0, 1120,    0,
  0x1e,      0, 1121,    0,    0,    0,
  0x30,      0, 1122,    0,    0,    0,
  0x2e,      0, 1123,    0,    0,    0,
  0x20,      0, 1124,    0,    0,    0,
  0x12,      0, 1125,    0,    0,    0,
  0x21,      0, 1126,    0, 1127,    0,
  0x22,      0, 1128,    0,    0,    0,
  0x23,      0, 1129,    0,    0,    0,
  0x17,      0, 1130,    0,    0,    0,
  0x24,      0, 1131,    0,    0,    0,
  0x25,      0, 1132,    0,    0,    0,
  0x26,      0, 1133,    0,    0,    0,
  0x32,      0, 1134,    0,    0,    0,
  0x31,      0, 1135,    0,    0,    0,
  0x18,      0, 1136,    0,    0,    0,
  0x19,      0, 1137,    0,    0,    0,
  0x10,      0, 1138,    0,    0,    0,
  0x13,      0, 1139,    0, 1140,    0,
  0x1f,      0, 1141,    0, 1142,    0,
  0x14,      0, 1143,    0,    0,    0,
  0x16,      0, 1144,    0,    0,    0,
  0x2f,      0, 1145,    0,    0,    0,
  0x11,      0, 1146,    0, 1147,    0,
  0x2d,      0, 1148,    0,    0,    0,
  0x15,      0, 1149,    0,    0,    0,
  0x2c,      0, 1150,    0,    0,    0,
  0x27,      0, 1151,    0,    0,    0,
  0x0d,      0, 1152,    0, 1153,    0,
  0x33,      0, 1154,    0,    0,    0,
  0x0c,      0, 1155,    0,    0,    0,
  0x34,      0, 1057,    0,    0,    0,
  0x35,      0, 1156,    0,    0,    0,
  0x29,      0, 1157,    0,    0,    0,
  0x1a,      0, 1158,    0,    0,    0,
  0x1b,      0, 1159,    0,    0,    0,
  0x28,      0, 1160,    0,    0,    0
};

// Keyboard Layouts - 0000044B:Kannada
static st_IVKBD VKBD_0000044B = {
  8255, 47,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1161,    0,
  0x02,      0,  852,    0, 1162,    0,
  0x03,      0,  854,    0, 1163,    0,
  0x04,      0,  764,    0, 1164,    0,
  0x05,      0,  766,    0, 1165,    0,
  0x06,      0,  768,    0, 1166,    0,
  0x07,      0,  770,    0, 1167,    0,
  0x08,      0,  772,    0, 1168,    0,
  0x09,      0,  774,    0, 1169,    0,
  0x0a,      0,  216,    0, 1170,    0,
  0x1e,      0, 1171,    0,    0,    0,
  0x30,      0, 1172,    0,    0,    0,
  0x2e,      0, 1173,    0,    0,    0,
  0x20,      0, 1174,    0,    0,    0,
  0x12,      0, 1175,    0,    0,    0,
  0x21,      0, 1176,    0, 1177,    0,
  0x22,      0, 1178,    0,    0,    0,
  0x23,      0, 1179,    0, 1180,    0,
  0x17,      0, 1181,    0,    0,    0,
  0x24,      0, 1182,    0,    0,    0,
  0x25,      0, 1183,    0,    0,    0,
  0x26,      0, 1184,    0,    0,    0,
  0x32,      0, 1185,    0,    0,    0,
  0x31,      0, 1186,    0,    0,    0,
  0x18,      0, 1187,    0,    0,    0,
  0x19,      0, 1188,    0,    0,    0,
  0x10,      0, 1189,    0,    0,    0,
  0x13,      0, 1190,    0, 1191,    0,
  0x1f,      0, 1192,    0, 1193,    0,
  0x14,      0, 1194,    0,    0,    0,
  0x16,      0, 1195,    0,    0,    0,
  0x2f,      0, 1196,    0,    0,    0,
  0x11,      0, 1197,    0, 1198,    0,
  0x2d,      0, 1199,    0,    0,    0,
  0x15,      0, 1200,    0,    0,    0,
  0x2c,      0, 1201,    0,    0,    0,
  0x27,      0, 1202,    0,    0,    0,
  0x0d,      0, 1203,    0, 1204,    0,
  0x33,      0, 1205,    0,    0,    0,
  0x0c,      0, 1206,    0,    0,    0,
  0x34,      0, 1207,    0,    0,    0,
  0x35,      0, 1208,    0,    0,    0,
  0x29,      0, 1209,    0,    0,    0,
  0x1a,      0, 1210,    0,    0,    0,
  0x1b,      0, 1211,    0,    0,    0,
  0x28,      0, 1212,    0,    0,    0
};

// Keyboard Layouts - 0000044E:Marathi
static st_IVKBD VKBD_0000044E = {
  8256, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1213,    0,  213,    0,
  0x02,      0, 1214,    0,    3,    0,
  0x03,      0, 1215,    0,    4,    0,
  0x04,      0, 1216,    0,    5,    0,
  0x05,      0, 1217,    0,    6,    0,
  0x06,      0, 1218,    0,    7,    0,
  0x07,      0, 1219,    0,    8,    0,
  0x08,      0, 1220,    0,    9,    0,
  0x09,      0, 1221,    0,   10,    0,
  0x0a,      0, 1222,    0,  216,    0,
  0x1e,      0,  777,    0,    0,    0,
  0x30,      0, 1223,    0,    0,    0,
  0x2e,      0,  779,    0,    0,    0,
  0x20,      0,  781,    0,    0,    0,
  0x12,      0,  782,    0,    0,    0,
  0x21,      0,  783,    0,    0,    0,
  0x22,      0,  785,    0,    0,    0,
  0x23,      0,  786,    0,    0,    0,
  0x17,      0,  788,    0,    0,    0,
  0x24,      0,  790,    0,    0,    0,
  0x25,      0,  791,    0,    0,    0,
  0x26,      0,  793,    0,    0,    0,
  0x32,      0,  794,    0,    0,    0,
  0x31,      0,  795,    0,    0,    0,
  0x18,      0,  796,    0,    0,    0,
  0x19,      0,  797,    0,    0,    0,
  0x10,      0,  799,    0,    0,    0,
  0x13,      0,  800,    0,    0,    0,
  0x1f,      0,  802,    0,    0,    0,
  0x14,      0,  803,    0,    0,    0,
  0x16,      0,  804,    0,    0,    0,
  0x2f,      0, 1224,    0,    0,    0,
  0x11,      0,  806,    0,    0,    0,
  0x2d,      0,  807,    0,  808,    0,
  0x15,      0,  809,    0,    0,    0,
  0x2c,      0,    0,    0, 1225,    0,
  0x27,      0,  812,    0,  235,    0,
  0x0d,      0,  814,    0,   39,    0,
  0x33,      0,  816,    0,  250,    0,
  0x0c,      0,  818,    0,   41,    0,
  0x34,      0,  819,    0,  252,    0,
  0x35,      0,  821,    0,  253,    0,
  0x29,      0,    0,    0,   88,    0,
  0x1a,      0,  823,    0,  254,    0,
  0x2b,      0,  825,    0,   46,    0,
  0x1b,      0,  826,    0,  257,    0,
  0x28,      0,  827,    0,  259,    0,
  0x56,      0,  825,    0,    0,    0
};

// Keyboard Layouts - 00000450:Mongolian Cyrillic
static st_IVKBD VKBD_00000450 = {
  8257, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1226,    0,    0,    0,
  0x02,      0, 1227,    0,    0,    0,
  0x03,      0, 1228,    0,    0,    0,
  0x04,      0, 1229,    0,    0,    0,
  0x05,      0, 1230,    0,    0,    0,
  0x06,      0,  587,    0,    0,    0,
  0x07,      0, 1231,    0,    0,    0,
  0x08,      0, 1232,    0,    0,    0,
  0x09,      0, 1233,    0,    0,    0,
  0x0a,      0, 1234,    0,    0,    0,
  0x1e,      0,   80,    0,    0,    0,
  0x30,      0,   83,    0,    0,    0,
  0x2e,      0,  411,    0,    0,    0,
  0x20,      0,   87,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,  844,    0,    0,    0,
  0x22,      0,   60,    0,    0,    0,
  0x23,      0,   70,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   93,    0,    0,    0,
  0x25,      0,   62,    0,    0,    0,
  0x26,      0,   73,    0,    0,    0,
  0x32,      0,   66,    0,    0,    0,
  0x31,      0,   74,    0,    0,    0,
  0x18,      0,  841,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   58,    0,    0,    0,
  0x13,      0,   63,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   78,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   65,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   71,    0,    0,    0,
  0x0d,      0,   81,    0,    0,    0,
  0x33,      0,   57,    0,    0,    0,
  0x0c,      0,   61,    0,    0,    0,
  0x34,      0,   68,    0,    0,    0,
  0x35,      0,   82,    0,    0,    0,
  0x29,      0,   39,    0,    0,    0,
  0x1a,      0,   77,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   69,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000452:United Kingdom Extended
static st_IVKBD VKBD_00000452 = {
  8258, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,    768,  175,    0,  157,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,  122,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,    768,    8,    0,  101,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  263,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0, 1235,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  848,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x28,    768, 1236,    0,  187,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,    768, 1237,    0,   97,    0,
  0x29,      3, 1238,    0,  217,    0
};

// Keyboard Layouts - 00000468:Hausa
static st_IVKBD VKBD_00000468 = {
  8259, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0, 1239,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0, 1240,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0, 1241,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0, 1242,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,  215,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0, 1243,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,  701,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0000046A:Yoruba
static st_IVKBD VKBD_0000046A = {
  8260, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,   13,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,   13,    0,
  0x26,      0,  132,    0,   13,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,   13,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,  215,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      3,  254,    0,    0,    0,
  0x2b,      3,   46,    0, 1243,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      3,  259,    0, 1244,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0000046C:Sesotho sa Leboa
static st_IVKBD VKBD_0000046C = {
  8261, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,  702,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  703,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,     12,    8,    0,  371,    0,
  0x08,      0,    9,    0,  249,    0,
  0x09,      0,   10,    0,  372,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  704,    0,
  0x20,      0,  119,    0,  361,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  190,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  264,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,  209,    0,
  0x10,      0,  139,    0,  212,    0,
  0x13,      0,  141,    0,  237,    0,
  0x1f,      0,  142,    0,  705,    0,
  0x14,      0,  144,    0,  359,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  189,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  204,    0,
  0x2c,      0,  153,    0,  186,    0,
  0x27,      0,  235,    0,  706,    0,
  0x0d,      0,   39,    0,  707,    0,
  0x33,      0,  250,    0,  263,    0,
  0x0c,      0,   41,    0,  245,    0,
  0x34,      0,  252,    0,  415,    0,
  0x35,      0,  253,    0,  708,    0,
  0x29,     15,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  255,    0,
  0x2b,      0,   46,    0,  709,    0,
  0x1b,      0,  257,    0,  258,    0,
  0x28,     15,  259,    0,  268,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000470:Igbo
static st_IVKBD VKBD_00000470 = {
  8262, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,     12,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,   13,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,   13,    0,
  0x12,      0,  121,    0,   13,    0,
  0x21,      0,  123,    0,   13,    0,
  0x22,      0,  125,    0,   13,    0,
  0x23,      0,  127,    0,   13,    0,
  0x17,      0,  128,    0, 1245,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,   13,    0,
  0x31,      0,  135,    0, 1246,    0,
  0x18,      0,  137,    0, 1247,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,   13,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,   13,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0, 1248,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,   13,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,  215,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,   13,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,   13,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,     15,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0, 1243,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,  113,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000481:Maori
static st_IVKBD VKBD_00000481 = {
  8263, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      3,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00000488:Wolof
static st_IVKBD VKBD_00000488 = {
  8264, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  270,    0,  147,    0,
  0x02,      0,  271,    0,    0,    0,
  0x03,    768,  272,    0,   97,    0,
  0x04,      0,  273,    0,  151,    0,
  0x05,      0,  274,    0,  116,    0,
  0x06,      0,  275,    0,  124,    0,
  0x07,      0,  276,    0,  149,    0,
  0x08,    768, 1249,    0,  109,    0,
  0x09,      0,  278,    0,  140,    0,
  0x0a,      0, 1250,    0,  101,    0,
  0x10,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x27,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x1e,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x2c,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x11,      0,  153,    0,    0,    0,
  0x1b,      0,  352,    0,  169,    0,
  0x0d,      0,  281,    0,  136,    0,
  0x32,      0,  282,    0,    0,    0,
  0x33,      0,  283,    0,    0,    0,
  0x34,      0,  284,    0,    0,    0,
  0x28,      0, 1251,    0,    0,    0,
  0x0c,      0, 1252,    0,  126,    0,
  0x2b,      0, 1253,    0,    0,    0,
  0x1a,     15, 1254,    0,    0,    0,
  0x29,      0, 1255,    0,    0,    0,
  0x35,      0, 1256,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00000807:Swiss German
static st_IVKBD VKBD_00000807 = {
  8265, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0, 1257,    0,  217,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0, 1258,    0,  151,    0,
  0x05,      0, 1259,    0,  105,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,  178,    0,  256,    0,
  0x08,      0,  179,    0,  149,    0,
  0x09,      0,  180,    0,  374,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0, 1260,    0,  124,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x29,      0, 1261,    0,    0,    0,
  0x1b,      3, 1262,    0,  126,    0,
  0x0c,    768,  265,    0,  113,    0,
  0x28,      0, 1263,    0,  116,    0,
  0x0d,    783, 1264,    0,   97,    0,
  0x27,      0, 1265,    0,    0,    0,
  0x2b,      0, 1266,    0,  136,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00000809:United Kingdom
static st_IVKBD VKBD_00000809 = {
  8266, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,  122,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x28,      0, 1236,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,      0, 1237,    0,    0,    0,
  0x29,      0, 1238,    0,  217,    0
};

// Keyboard Layouts - 0000080A:Latin American
static st_IVKBD VKBD_0000080A = {
  8267, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1a,     15,  268,    0,    0,    0,
  0x1b,      0,  262,    0,   97,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,    768, 1267,    0,  109,    0,
  0x27,      0,  264,    0,    0,    0,
  0x0c,      0,  265,    0,  140,    0,
  0x29,      0, 1268,    0,  256,    0,
  0x0d,      0, 1269,    0,    0,    0,
  0x28,    768, 1270,    0,  101,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000080C:Belgian French
static st_IVKBD VKBD_0000080C = {
  8268, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  270,    0,  136,    0,
  0x02,      0,  271,    0,  149,    0,
  0x03,      0,  272,    0,  147,    0,
  0x04,      0,  273,    0,  151,    0,
  0x05,      0,  274,    0,  116,    0,
  0x06,      0,  275,    0,  124,    0,
  0x07,      0, 1271,    0,  101,    0,
  0x08,      0,  277,    0,    0,    0,
  0x09,      0, 1272,    0,    0,    0,
  0x0a,      0,  279,    0,  116,    0,
  0x10,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x27,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x1e,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x2c,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x11,      0,  153,    0,    0,    0,
  0x1b,      0, 1273,    0,  126,    0,
  0x35,   3840,  281,    0, 1274,    0,
  0x32,      0,  282,    0,    0,    0,
  0x0d,      0, 1275,    0,    0,    0,
  0x33,      0,  283,    0,    0,    0,
  0x34,      0,  284,    0,    0,    0,
  0x28,   3840,  285,    0, 1276,    0,
  0x0c,      0,  286,    0,    0,    0,
  0x2b,   3840, 1277,    0, 1278,    0,
  0x1a,     15,  288,    0,  124,    0,
  0x29,      0, 1279,    0,    0,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00000813:Belgian (Period)
static st_IVKBD VKBD_00000813 = {
  8269, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  270,    0,  136,    0,
  0x02,      0,  271,    0,  149,    0,
  0x03,      0,  272,    0,  147,    0,
  0x04,      0,  273,    0,  151,    0,
  0x05,      0,  274,    0,  116,    0,
  0x06,      0,  275,    0,  124,    0,
  0x07,      0, 1271,    0,  101,    0,
  0x08,      0,  277,    0,    0,    0,
  0x09,      0, 1272,    0,    0,    0,
  0x0a,      0,  279,    0,  116,    0,
  0x10,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x27,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x1e,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x2c,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x11,      0,  153,    0,    0,    0,
  0x1b,      0, 1273,    0,  126,    0,
  0x35,   3840,  281,    0, 1274,    0,
  0x32,      0,  282,    0,    0,    0,
  0x0d,      0, 1275,    0,    0,    0,
  0x33,      0,  283,    0,    0,    0,
  0x34,      0,  284,    0,    0,    0,
  0x28,   3840,  285,    0, 1276,    0,
  0x0c,      0,  286,    0,    0,    0,
  0x2b,   3840, 1277,    0, 1278,    0,
  0x1a,     15,  288,    0,  124,    0,
  0x29,      0, 1279,    0,    0,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00000816:Portuguese
static st_IVKBD VKBD_00000816 = {
  8270, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,    6,    0,  214,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,     15,  187,    0,  126,    0,
  0x1a,    768,  262,    0,  157,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,     15,  399,    0,    0,    0,
  0x27,      0,  263,    0,    0,    0,
  0x0c,      0,  265,    0,    0,    0,
  0x29,      0,   46,    0,    0,    0,
  0x0d,      0, 1280,    0,    0,    0,
  0x28,      0,  266,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000081A:Serbian (Latin)
static st_IVKBD VKBD_0000081A = {
  8271, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  174,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  178,    0,  107,    0,
  0x08,      0,  179,    0,  109,    0,
  0x09,    768,  180,    0,  111,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  413,    0,    0,    0,
  0x0d,    768,  262,    0,  164,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0c,    768,  265,    0,  157,    0,
  0x29,      3, 1281,    0,    0,    0,
  0x1a,      0,  415,    0,  167,    0,
  0x2b,      0,  416,    0,  169,    0,
  0x1b,      0,  417,    0,  171,    0,
  0x28,      0,  385,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0000082C:Azeri Cyrillic
static st_IVKBD VKBD_0000082C = {
  8272, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,  604,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,  843,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0, 1282,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,  841,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,  839,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  844,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0, 1283,    0,    0,    0,
  0x28,      0, 1284,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0000083B:Swedish with Sami
static st_IVKBD VKBD_0000083B = {
  8273, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,  829,    0,
  0x2e,      0,  117,    0,  413,    0,
  0x20,      0,  119,    0,  417,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  830,    0,
  0x22,      0,  125,    0,  831,    0,
  0x23,      0,  127,    0,  832,    0,
  0x17,      0,  128,    0,  833,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  834,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  835,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  402,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  415,    0,
  0x14,      0,  144,    0,  836,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  837,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  416,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,  140,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  209,    0,  190,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x29,      0,  269,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  212,    0,  186,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00000843:Uzbek Cyrillic
static st_IVKBD VKBD_00000843 = {
  8274, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,  543,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  602,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,  600,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,  604,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0,  411,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  412,    0,    0,    0
};

// Keyboard Layouts - 00000C0C:Canadian French (Legacy)
static st_IVKBD VKBD_00000C0C = {
  8275, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  136,    0,
  0x02,      0,    3,    0, 1285,    0,
  0x03,      0,  175,    0, 1286,    0,
  0x04,      0,    5,    0, 1287,    0,
  0x05,      0,    6,    0, 1288,    0,
  0x06,      0,    7,    0,  249,    0,
  0x07,      0, 1289,    0,  372,    0,
  0x08,      0,    9,    0,  116,    0,
  0x09,      0,   10,    0,  124,    0,
  0x0a,      0,  216,    0, 1290,    0,
  0x1e,      0,  114,    0,  186,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0, 1291,    0,
  0x20,      0,  119,    0,  361,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,  398,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0, 1292,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  190,    0,
  0x19,      0,  138,    0,  359,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0, 1293,    0,
  0x1f,      0,  142,    0,  705,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,  258,    0,
  0x15,      0,  152,    0,  245,    0,
  0x2c,      0,  153,    0,  255,    0,
  0x27,   3840,  235,    0, 1276,    0,
  0x0d,    768,   39,    0,  164,    0,
  0x33,      0, 1294,    0,  159,    0,
  0x0c,      0,   41,    0, 1295,    0,
  0x34,      0,  396,    0,  162,    0,
  0x35,      0,  351,    0,  394,    0,
  0x28,      0, 1296,    0,    0,    0,
  0x1a,     15,  553,    0,  105,    0,
  0x2b,   3840, 1297,    0, 1278,    0,
  0x1b,   3840,  263,    0, 1298,    0,
  0x29,      0, 1299,    0,  256,    0,
  0x56,      0, 1300,    0,   46,    0
};

// Keyboard Layouts - 00000C1A:Serbian (Cyrillic)
static st_IVKBD VKBD_00000C1A = {
  8276, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,   60,    0,    0,    0,
  0x30,      0,   87,    0,    0,    0,
  0x2e,      0,   89,    0,    0,    0,
  0x20,      0,   71,    0,    0,    0,
  0x12,      0,   61,    0,  122,    0,
  0x21,      0,   58,    0,    0,    0,
  0x22,      0,   64,    0,    0,    0,
  0x23,      0,   70,    0,    0,    0,
  0x17,      0,   74,    0,    0,    0,
  0x24,      0, 1282,    0,    0,    0,
  0x25,      0,   77,    0,    0,    0,
  0x26,      0,   73,    0,    0,    0,
  0x32,      0,   83,    0,    0,    0,
  0x31,      0,   67,    0,    0,    0,
  0x18,      0,   62,    0,    0,    0,
  0x19,      0,   69,    0,    0,    0,
  0x10,      0, 1301,    0,    0,    0,
  0x13,      0,   93,    0,    0,    0,
  0x1f,      0,   65,    0,    0,    0,
  0x14,      0,   66,    0,    0,    0,
  0x16,      0,   79,    0,    0,    0,
  0x2f,      0,   68,    0,    0,    0,
  0x11,      0, 1302,    0,    0,    0,
  0x2d,      0, 1303,    0,    0,    0,
  0x15,      0,   72,    0,    0,    0,
  0x2c,      0, 1304,    0,    0,    0,
  0x27,      0,   92,    0,    0,    0,
  0x0d,      0,  262,    0,    0,    0,
  0x33,      0,  184,    0,  159,    0,
  0x0c,      3,  265,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,   41,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,   76,    0,    0,    0,
  0x2b,      0,   63,    0,    0,    0,
  0x1b,      0, 1305,    0,    0,    0,
  0x28,      0, 1306,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00001009:Canadian French
static st_IVKBD VKBD_00001009 = {
  8277, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  371,    0,
  0x02,      0,    3,    0,  251,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0, 1307,    0,  176,    0,
  0x05,      0,    6,    0,  374,    0,
  0x06,      0,    7,    0,  169,    0,
  0x07,      0, 1289,    0,  256,    0,
  0x08,      0,    9,    0,  217,    0,
  0x09,      0,   10,    0,  195,    0,
  0x0a,      0,  216,    0,  197,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  214,    0,
  0x19,      0,  138,    0,  215,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,   97,    0,
  0x0d,      0,   39,    0,  372,    0,
  0x33,      0, 1294,    0, 1308,    0,
  0x0c,      0,   41,    0,  249,    0,
  0x34,      0,  396,    0, 1309,    0,
  0x35,    768,  351,    0,  113,    0,
  0x28,     15, 1278,    0,  116,    0,
  0x1a,     15,  553,    0,  124,    0,
  0x2b,      0,  191,    0,  136,    0,
  0x1b,     15,  414,    0,  126,    0,
  0x29,      0, 1310,    0,  140,    0,
  0x56,      0, 1280,    0,  105,    0
};

// Keyboard Layouts - 0000100C:Swiss French
static st_IVKBD VKBD_0000100C = {
  8278, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0, 1257,    0,  217,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0, 1258,    0,  151,    0,
  0x05,      0, 1259,    0,  105,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,  178,    0,  256,    0,
  0x08,      0,  179,    0,  149,    0,
  0x09,      0,  180,    0,  374,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0, 1311,    0,  124,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x29,      0, 1261,    0,    0,    0,
  0x1b,      3, 1262,    0,  126,    0,
  0x0c,    768,  265,    0,  113,    0,
  0x28,      0, 1312,    0,  116,    0,
  0x0d,    783, 1264,    0,   97,    0,
  0x27,      0, 1313,    0,    0,    0,
  0x2b,      0, 1266,    0,  136,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 00001809:Irish
static st_IVKBD VKBD_00001809 = {
  8279, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,  122,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x28,    768, 1236,    0,  187,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,      0, 1237,    0,    0,    0,
  0x29,      3, 1238,    0, 1314,    0
};

// Keyboard Layouts - 0000201A:Bosnian (Cyrillic)
static st_IVKBD VKBD_0000201A = {
  8280, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,    5,    0,  101,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  105,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,   60,    0,    0,    0,
  0x30,      0,   87,    0,  116,    0,
  0x2e,      0,   89,    0,    0,    0,
  0x20,      0,   71,    0,    0,    0,
  0x12,      0,   61,    0,  122,    0,
  0x21,      0,   58,    0,  124,    0,
  0x22,      0,   64,    0,  126,    0,
  0x23,      0,   70,    0,    0,    0,
  0x17,      0,   74,    0,    0,    0,
  0x24,      0, 1282,    0,    0,    0,
  0x25,      0,   77,    0,    0,    0,
  0x26,      0,   73,    0,    0,    0,
  0x32,      0,   83,    0,  214,    0,
  0x31,      0,   67,    0,  136,    0,
  0x18,      0,   62,    0,    0,    0,
  0x19,      0,   69,    0,    0,    0,
  0x10,      0, 1301,    0,  140,    0,
  0x13,      0,   93,    0,    0,    0,
  0x1f,      0,   65,    0,    0,    0,
  0x14,      0,   66,    0,    0,    0,
  0x16,      0,   79,    0,    0,    0,
  0x2f,      0,   68,    0,  147,    0,
  0x11,      0, 1302,    0,  149,    0,
  0x2d,      0, 1303,    0,    0,    0,
  0x15,      0,   72,    0,    0,    0,
  0x2c,      0, 1304,    0,    0,    0,
  0x27,      0,   92,    0,    0,    0,
  0x0d,      0,  262,    0,    0,    0,
  0x33,      0,  184,    0,  159,    0,
  0x0c,      3,  265,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,   41,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,   76,    0,    0,    0,
  0x2b,      0,   63,    0,    0,    0,
  0x1b,      0, 1305,    0,    0,    0,
  0x28,      0, 1306,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00010402:Bulgarian (Latin)
static st_IVKBD VKBD_00010402 = {
  8281, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00010405:Czech (QWERTY)
static st_IVKBD VKBD_00010405 = {
  8282, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,   94,    0, 1315,    0,
  0x02,      0,   96,    0, 1316,    0,
  0x03,      0,   98,    0,  147,    0,
  0x04,      0,  100,    0,  151,    0,
  0x05,      0,  102,    0,  155,    0,
  0x06,      0,  104,    0,  479,    0,
  0x07,      0,  106,    0,  101,    0,
  0x08,      0,  108,    0,  118,    0,
  0x09,      0,  110,    0,  160,    0,
  0x0a,      0,  112,    0, 1317,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  154,    0,  235,    0,
  0x0d,     15,  163,    0,   39,    0,
  0x33,      0,  158,    0, 1318,    0,
  0x0c,      0,  156,    0,   41,    0,
  0x34,      0,  161,    0, 1319,    0,
  0x35,      0,   41,    0,  253,    0,
  0x29,     12,  165,    0,   88,    0,
  0x1a,      0,  166,    0,  254,    0,
  0x2b,      3,  168,    0,   46,    0,
  0x1b,      0,  170,    0,  257,    0,
  0x28,   3072,  172,    0, 1320,    0,
  0x56,   3072,   46,    0, 1321,    0
};

// Keyboard Layouts - 00010407:German (IBM)
static st_IVKBD VKBD_00010407 = {
  8283, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  545,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0, 1322,    0,
  0x04,      0, 1323,    0, 1324,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  549,    0,
  0x09,      0,  180,    0,  550,    0,
  0x0a,      0,   11,    0,  551,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0, 1325,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  546,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0,  204,    0,    0,    0,
  0x1b,      0,  262,    0, 1274,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0, 1326,    0,    0,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0c,      0, 1327,    0,  552,    0,
  0x29,      3,  211,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  558,    0
};

// Keyboard Layouts - 00010408:Greek (220)
static st_IVKBD VKBD_00010408 = {
  8284, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  105,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  195,    0,
  0x04,      0,  363,    0,  197,    0,
  0x05,      0,    6,    0,  176,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,  178,    0,  215,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,  169,    0,
  0x0a,      0,   11,    0,  217,    0,
  0x1e,      0,  218,    0,    0,    0,
  0x30,      0,  219,    0,    0,    0,
  0x2e,      0,  220,    0,  221,    0,
  0x20,      0,  222,    0,    0,    0,
  0x12,      0,  223,    0,  122,    0,
  0x21,      0,  224,    0,    0,    0,
  0x22,      0,  225,    0,    0,    0,
  0x23,      0,  226,    0,    0,    0,
  0x17,      0,  227,    0,    0,    0,
  0x24,      0,  228,    0,    0,    0,
  0x25,      0,  229,    0,    0,    0,
  0x26,      0,  230,    0,    0,    0,
  0x32,      0,  231,    0,    0,    0,
  0x31,      0,  232,    0,    0,    0,
  0x18,      0,  233,    0,    0,    0,
  0x19,      0,  234,    0,    0,    0,
  0x10,      0, 1328,    0,    0,    0,
  0x13,      0,  236,    0,  237,    0,
  0x1f,      0,  238,    0,    0,    0,
  0x14,      0,  239,    0,    0,    0,
  0x16,      0,  240,    0,    0,    0,
  0x2f,      0,  241,    0,    0,    0,
  0x11,      0, 1329,    0,    0,    0,
  0x2d,      0,  243,    0,    0,    0,
  0x15,      0,  244,    0,  245,    0,
  0x2c,      0,  246,    0,    0,    0,
  0x27,    783,  247,    0,  248,    0,
  0x1a,      0,  262,    0,  255,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x0c,      0,  265,    0,  251,    0,
  0x29,      0, 1330,    0,    0,    0,
  0x0d,      0,  381,    0,  249,    0,
  0x2b,      0, 1331,    0,  256,    0,
  0x1b,      0, 1332,    0,  258,    0,
  0x28,    783, 1333,    0,  248,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0001040A:Spanish Variation
static st_IVKBD VKBD_0001040A = {
  8285, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1334,    0,  140,    0,
  0x02,      0, 1335,    0,  149,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0, 1307,    0,  151,    0,
  0x05,      0, 1336,    0,  371,    0,
  0x06,      0, 1337,    0,  249,    0,
  0x07,      0, 1338,    0,  256,    0,
  0x08,      0, 1339,    0, 1340,    0,
  0x09,      0, 1341,    0,  151,    0,
  0x0a,      0, 1342,    0,  214,    0,
  0x1e,      0,  114,    0,  155,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,  147,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,  149,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,  176,    0,
  0x25,      0,  130,    0,  251,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  118,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,     15, 1278,    0,  126,    0,
  0x33,      0,  184,    0,    0,    0,
  0x0c,      0, 1343,    0,  160,    0,
  0x34,    768,  161,    0,  101,    0,
  0x2b,     15, 1276,    0,  136,    0,
  0x27,      0,  264,    0,   97,    0,
  0x0d,    783, 1344,    0,   97,    0,
  0x29,      0, 1345,    0,  140,    0,
  0x1a,      0, 1346,    0,  124,    0,
  0x28,      0,  263,    0,  116,    0,
  0x35,      0,  156,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0001040E:Hungarian 101-key
static st_IVKBD VKBD_0001040E = {
  8286, 49,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0,  358,    0, 1065,    0,
  0x02,      0,  343,    0,   97,    0,
  0x03,      0,  175,    0,   99,    0,
  0x04,      0,   51,    0,  101,    0,
  0x05,      0,  344,    0,  103,    0,
  0x06,      0,    7,    0,  105,    0,
  0x07,      0,  345,    0,  107,    0,
  0x08,      0,  346,    0,  109,    0,
  0x09,      0,  180,    0,  111,    0,
  0x0a,      0,   11,    0,  113,    0,
  0x1e,      0,  114,    0,  347,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,  118,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,  348,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  349,    0,
  0x24,      0,  129,    0,  350,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,  159,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,  214,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,  169,    0,
  0x16,      0,  145,    0,  122,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,  151,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  162,    0,
  0x27,      0,  351,    0,  155,    0,
  0x0d,      0,  352,    0,    0,    0,
  0x33,      0,  158,    0,  353,    0,
  0x0c,      0,  204,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,   41,    0,  160,    0,
  0x0b,      0,  209,    0,   95,    0,
  0x1a,      0,  354,    0,  167,    0,
  0x2b,      0,  355,    0,  140,    0,
  0x1b,      0,  356,    0,  171,    0,
  0x28,      0,  357,    0,  173,    0,
  0x56,      0,  358,    0,  159,    0
};

// Keyboard Layouts - 00010410:Italian (142)
static st_IVKBD VKBD_00010410 = {
  8287, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,  151,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1a,      0,  364,    0,    0,    0,
  0x1b,      0,  262,    0,   97,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  365,    0,  109,    0,
  0x27,      0,  366,    0,    0,    0,
  0x0c,      0,  265,    0,    0,    0,
  0x29,      0,   46,    0,    0,    0,
  0x0d,      0,  367,    0,    0,    0,
  0x28,      0,  368,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00010415:Polish (214)
static st_IVKBD VKBD_00010415 = {
  8288, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  174,    0,   95,    0,
  0x02,      0,    3,    0,   97,    0,
  0x03,    768,  175,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,  177,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,  178,    0,  107,    0,
  0x08,      0,  179,    0,  109,    0,
  0x09,    768,  180,    0,  378,    0,
  0x0a,    768,   11,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,    0,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  214,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  122,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  217,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x27,      0,  387,    0,  155,    0,
  0x0c,    768,  183,    0,  157,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x0d,    768,  185,    0,  164,    0,
  0x29,     15, 1347,    0,    0,    0,
  0x1a,      0, 1348,    0,  167,    0,
  0x2b,      0, 1349,    0,    0,    0,
  0x1b,      0, 1350,    0,  171,    0,
  0x28,      0, 1351,    0,  173,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00010418:Romanian (Standard)
static st_IVKBD VKBD_00010418 = {
  8289, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  213,    0,   95,    0,
  0x02,    768,    3,    0,   97,    0,
  0x03,    768,    4,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,    8,    0,  107,    0,
  0x08,    768,    9,    0,  109,    0,
  0x09,    768,   10,    0,  111,    0,
  0x0a,    768,  216,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  221,    0,
  0x20,      0,  119,    0,  417,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  387,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,  214,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  173,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0, 1352,    0,  235,    0,
  0x0d,    768,   39,    0, 1353,    0,
  0x33,      0,  184,    0, 1354,    0,
  0x0c,    768,   41,    0, 1355,    0,
  0x34,      0,  161,    0, 1356,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0, 1357,    0,   88,    0,
  0x1a,      0,  401,    0,  254,    0,
  0x2b,      0,  402,    0,   46,    0,
  0x1b,      0,  403,    0,  257,    0,
  0x28,      0, 1358,    0,  259,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00010419:Russian (Typewriter)
static st_IVKBD VKBD_00010419 = {
  8290, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1359,    0,    0,    0,
  0x02,      0, 1227,    0,    0,    0,
  0x03,      0, 1228,    0,    0,    0,
  0x04,      0,  585,    0,    0,    0,
  0x05,      0, 1360,    0,    0,    0,
  0x06,      0,  587,    0,    0,    0,
  0x07,      0,  588,    0,    0,    0,
  0x08,      0,  589,    0,    0,    0,
  0x09,      0, 1361,    0,    0,    0,
  0x0a,      0, 1362,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  409,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0,    0,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0, 1363,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0, 1364,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  411,    0,    0,    0,
  0x29,      0, 1365,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  170,    0,    0,    0,
  0x1b,      0,   59,    0,    0,    0,
  0x28,      0,   78,    0,    0,    0,
  0x56,      0,  170,    0,    0,    0
};

// Keyboard Layouts - 0001041B:Slovak (QWERTY)
static st_IVKBD VKBD_0001041B = {
  8291, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  418,    0,   95,    0,
  0x02,      0,   96,    0,   97,    0,
  0x03,    768,  419,    0,   99,    0,
  0x04,    768,  420,    0,  101,    0,
  0x05,    768,  421,    0,  103,    0,
  0x06,    768,  422,    0,  105,    0,
  0x07,    768,  423,    0,  107,    0,
  0x08,      0,  424,    0,  109,    0,
  0x09,    768,  425,    0,  111,    0,
  0x0a,    768,  426,    0,  113,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,  116,    0,
  0x2e,      0,  117,    0,  118,    0,
  0x20,      0,  119,    0,  120,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  124,    0,
  0x22,      0,  125,    0,  126,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  131,    0,
  0x26,      0,  132,    0,  133,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,  136,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,  427,    0,
  0x10,      0,  139,    0,  140,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  143,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  147,    0,
  0x11,      0,  148,    0,  149,    0,
  0x2d,      0,  150,    0,  151,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  162,    0,
  0x27,      0,  428,    0,  155,    0,
  0x0d,    783,  163,    0,  164,    0,
  0x33,      0,  158,    0,  159,    0,
  0x0c,    768,  156,    0,  157,    0,
  0x34,      0,  161,    0,  162,    0,
  0x35,      0,   41,    0,  160,    0,
  0x29,     12,  165,    0,    0,    0,
  0x1a,      0,  429,    0,  167,    0,
  0x2b,      0,  430,    0,  169,    0,
  0x1b,      0,  431,    0,  171,    0,
  0x28,      0,  172,    0,  173,    0,
  0x56,      0,  432,    0,  159,    0
};

// Keyboard Layouts - 0001041E:Thai Pattachote
static st_IVKBD VKBD_0001041E = {
  8292, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1366,    0,    0,    0,
  0x02,      0,  281,    0,    0,    0,
  0x03,      0, 1367,    0,    0,    0,
  0x04,      0, 1368,    0,    0,    0,
  0x05,      0, 1369,    0,    0,    0,
  0x06,      0, 1370,    0,    0,    0,
  0x07,      0, 1371,    0,    0,    0,
  0x08,      0, 1372,    0,    0,    0,
  0x09,      0, 1373,    0,    0,    0,
  0x0a,      0, 1374,    0,    0,    0,
  0x1e,      0, 1375,    0,    0,    0,
  0x30,      0, 1376,    0,    0,    0,
  0x2e,      0, 1377,    0,    0,    0,
  0x20,      0, 1378,    0,    0,    0,
  0x12,      0, 1379,    0,    0,    0,
  0x21,      0, 1380,    0,    0,    0,
  0x22,      0, 1381,    0,    0,    0,
  0x23,      0, 1382,    0,    0,    0,
  0x17,      0, 1383,    0,    0,    0,
  0x24,      0, 1384,    0,    0,    0,
  0x25,      0, 1385,    0,    0,    0,
  0x26,      0, 1386,    0,    0,    0,
  0x32,      0, 1387,    0,    0,    0,
  0x31,      0, 1388,    0,    0,    0,
  0x18,      0, 1389,    0,    0,    0,
  0x19,      0, 1390,    0,    0,    0,
  0x10,      0, 1391,    0,    0,    0,
  0x13,      0, 1392,    0,    0,    0,
  0x1f,      0, 1393,    0,    0,    0,
  0x14,      0, 1394,    0,    0,    0,
  0x16,      0, 1395,    0,    0,    0,
  0x2f,      0, 1396,    0,    0,    0,
  0x11,      0, 1397,    0,    0,    0,
  0x2d,      0, 1398,    0,    0,    0,
  0x15,      0, 1399,    0,    0,    0,
  0x2c,      0, 1400,    0,    0,    0,
  0x27,      0, 1401,    0,    0,    0,
  0x0d,      0, 1402,    0,    0,    0,
  0x33,      0, 1403,    0,    0,    0,
  0x0c,      0, 1404,    0,    0,    0,
  0x34,      0, 1405,    0,    0,    0,
  0x35,      0, 1406,    0,    0,    0,
  0x29,      0, 1407,    0,    0,    0,
  0x1a,      0, 1408,    0,    0,    0,
  0x2b,      0, 1409,    0,    0,    0,
  0x1b,      0, 1410,    0,    0,    0,
  0x28,      0, 1411,    0,    0,    0,
  0x56,      0, 1409,    0,    0,    0
};

// Keyboard Layouts - 0001041F:Turkish F
static st_IVKBD VKBD_0001041F = {
  8293, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0, 1285,    0,
  0x03,      0,  175,    0,  195,    0,
  0x04,     12,  487,    0, 1412,    0,
  0x05,      0,    6,    0, 1288,    0,
  0x06,      0,    7,    0,  249,    0,
  0x07,      0,  178,    0,  372,    0,
  0x08,      0, 1413,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x21,      0,  114,    0, 1414,    0,
  0x33,      0,  115,    0,  171,    0,
  0x2f,      0,  117,    0,    0,    0,
  0x15,      0,  119,    0,  245,    0,
  0x20,      0,  121,    0,  122,    0,
  0x10,      0,  123,    0,  147,    0,
  0x11,      0,  125,    0,    0,    0,
  0x18,      0,  127,    0,  190,    0,
  0x13,      0,  489,    0, 1293,    0,
  0x2c,      0,  129,    0, 1415,    0,
  0x24,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x25,      0,  134,    0,    0,    0,
  0x17,      0,  135,    0,    0,    0,
  0x14,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,  176,    0,
  0x1a,    768,  139,    0,  157,    0,
  0x16,      0,  141,    0,    0,    0,
  0x32,      0,  142,    0, 1292,    0,
  0x23,      0,  144,    0,    0,    0,
  0x1e,      0,  145,    0,  186,    0,
  0x2e,      0,  146,    0, 1291,    0,
  0x1b,    768,  148,    0,   97,    0,
  0x2b,    768,  150,    0,  109,    0,
  0x27,    768,  152,    0,  113,    0,
  0x31,      0,  153,    0,    0,    0,
  0x12,      0,  492,    0,    0,    0,
  0x0c,      0,  253,    0, 1416,    0,
  0x35,      0,  184,    0, 1309,    0,
  0x0d,      0,   41,    0,  149,    0,
  0x34,      0,  161,    0,  167,    0,
  0x30,      0,  263,    0,    0,    0,
  0x29,      0,  262,    0,  256,    0,
  0x1f,      0,  490,    0, 1417,    0,
  0x2d,      0,  209,    0, 1418,    0,
  0x22,      0,  204,    0,    0,    0,
  0x28,      0,  400,    0,    0,    0,
  0x56,      0,  191,    0, 1419,    0
};

// Keyboard Layouts - 00010426:Latvian (QWERTY)
static st_IVKBD VKBD_00010426 = {
  8294, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0, 1420,    0,
  0x03,      0,    4,    0,  255,    0,
  0x04,      0,    5,    0,  258,    0,
  0x05,      0,    6,    0, 1421,    0,
  0x06,      0,    7,    0, 1422,    0,
  0x07,      0,    8,    0,  701,    0,
  0x08,      0,    9,    0,  566,    0,
  0x09,      0,   10,    0, 1423,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  581,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  413,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  574,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,  570,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  579,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  571,    0,
  0x26,      0,  132,    0,  576,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,  578,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,  573,    0,
  0x1f,      0,  142,    0,  415,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  572,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  416,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,  575,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,     12,   88,    0, 1309,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      3, 1424,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,   3840,  259,    0,  268,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00010427:Lithuanian
static st_IVKBD VKBD_00010427 = {
  8295, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1065,    0,
  0x02,      0,  384,    0,    3,    0,
  0x03,      0,  413,    0,    4,    0,
  0x04,      0,  386,    0,    5,    0,
  0x05,      0,  598,    0,    6,    0,
  0x06,      0,  595,    0,    7,    0,
  0x07,      0,  415,    0,    8,    0,
  0x08,      0,  592,    0,    9,    0,
  0x09,      0,  572,    0,   10,    0,
  0x0a,      0,  216,    0, 1077,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,  416,    0,   39,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0001042B:Armenian Western
static st_IVKBD VKBD_0001042B = {
  8296, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  648,    0,    0,    0,
  0x02,      0,  649,    0,    0,    0,
  0x03,      0,  650,    0,    0,    0,
  0x04,      0,  651,    0,    0,    0,
  0x05,      0,  652,    0,    0,    0,
  0x06,      0,  653,    0,    0,    0,
  0x07,      0,  654,    0,    0,    0,
  0x08,      0,  655,    0,    0,    0,
  0x09,      0,  656,    0,    0,    0,
  0x0a,      0,  657,    0,    0,    0,
  0x1e,      0,  658,    0,    0,    0,
  0x30,      0,  673,    0,    0,    0,
  0x2e,      0,  660,    0,    0,    0,
  0x20,      0,  677,    0,    0,    0,
  0x12,      0,  662,    0,    0,    0,
  0x21,      0,  663,    0,    0,    0,
  0x22,      0,  668,    0,    0,    0,
  0x23,      0,  665,    0,    0,    0,
  0x17,      0,  666,    0,    0,    0,
  0x24,      0,  667,    0,    0,    0,
  0x25,      0,  664,    0,    0,    0,
  0x26,      0,  669,    0,    0,    0,
  0x32,      0,  670,    0,    0,    0,
  0x31,      0,  671,    0,    0,    0,
  0x18,      0,  672,    0,    0,    0,
  0x19,      0,  659,    0,    0,    0,
  0x10,      0,  674,    0,    0,    0,
  0x13,      0,  675,    0,    0,    0,
  0x1f,      0,  676,    0,    0,    0,
  0x14,      0,  661,    0,    0,    0,
  0x16,      0,  678,    0,    0,    0,
  0x2f,      0,  680,    0,    0,    0,
  0x11,      0,  679,    0,    0,    0,
  0x2d,      0,  681,    0,    0,    0,
  0x15,      0,  682,    0,    0,    0,
  0x2c,      0,  683,    0,    0,    0,
  0x1b,      0,  684,    0,    0,    0,
  0x27,      0,  685,    0,    0,    0,
  0x33,      0,  686,    0,    0,    0,
  0x35,      0,  687,    0,    0,    0,
  0x34,      0,  688,    0,    0,    0,
  0x0d,      0,  689,    0,    0,    0,
  0x28,      0,  690,    0,    0,    0,
  0x0c,      0,  691,    0,    0,    0,
  0x2b,      0,  692,    0,    0,    0,
  0x1a,      0,  693,    0,    0,    0,
  0x29,      0,  694,    0,    0,    0,
  0x56,      0,  692,    0,    0,    0
};

// Keyboard Layouts - 00010437:Georgian (QWERTY)
static st_IVKBD VKBD_00010437 = {
  8297, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,  697,    0,
  0x04,      0,    5,    0,  700,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,  105,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0, 1425,    0, 1426,    0,
  0x30,      0, 1427,    0,    0,    0,
  0x2e,      0, 1428,    0,  221,    0,
  0x20,      0, 1429,    0,    0,    0,
  0x12,      0, 1430,    0,  741,    0,
  0x21,      0, 1431,    0,  719,    0,
  0x22,      0, 1432,    0, 1433,    0,
  0x23,      0, 1434,    0,  753,    0,
  0x17,      0, 1435,    0,  734,    0,
  0x24,      0, 1436,    0, 1437,    0,
  0x25,      0, 1438,    0,    0,    0,
  0x26,      0, 1439,    0,    0,    0,
  0x32,      0, 1440,    0,    0,    0,
  0x31,      0, 1441,    0, 1442,    0,
  0x18,      0, 1443,    0,    0,    0,
  0x19,      0, 1444,    0,    0,    0,
  0x10,      0, 1445,    0,    0,    0,
  0x13,      0, 1446,    0,  237,    0,
  0x1f,      0, 1447,    0,    0,    0,
  0x14,      0, 1448,    0,    0,    0,
  0x16,      0, 1449,    0,    0,    0,
  0x2f,      0, 1450,    0,  723,    0,
  0x11,      0, 1451,    0,    0,    0,
  0x2d,      0, 1452,    0,  756,    0,
  0x15,      0, 1453,    0, 1454,    0,
  0x2c,      0, 1455,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0, 1456,    0,
  0x33,      0,  250,    0,  255,    0,
  0x0c,      0,   41,    0, 1457,    0,
  0x34,      0,  252,    0,  258,    0,
  0x35,      0,  253,    0, 1458,    0,
  0x29,      0,  754,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      0, 1459,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,  140,    0,    0,    0
};

// Keyboard Layouts - 00010439:Hindi Traditional
static st_IVKBD VKBD_00010439 = {
  8298, 48,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1213,    0,
  0x02,      0,  760,    0, 1460,    0,
  0x03,      0,  762,    0, 1461,    0,
  0x04,      0,  764,    0, 1462,    0,
  0x05,      0,  766,    0, 1463,    0,
  0x06,      0,  768,    0, 1464,    0,
  0x07,      0,  770,    0, 1465,    0,
  0x08,      0,  772,    0, 1466,    0,
  0x09,      0,  774,    0, 1467,    0,
  0x0a,      0,  216,    0, 1222,    0,
  0x1e,      0,  777,    0,    0,    0,
  0x30,      0, 1223,    0,    0,    0,
  0x2e,      0,  779,    0,    0,    0,
  0x20,      0,  781,    0,    0,    0,
  0x12,      0,  782,    0,    0,    0,
  0x21,      0,  783,    0,    0,    0,
  0x22,      0,  785,    0,    0,    0,
  0x23,      0,  786,    0,    0,    0,
  0x17,      0,  788,    0,    0,    0,
  0x24,      0,  790,    0,    0,    0,
  0x25,      0,  791,    0,    0,    0,
  0x26,      0,  793,    0,    0,    0,
  0x32,      0,  794,    0,    0,    0,
  0x31,      0,  795,    0,    0,    0,
  0x18,      0,  796,    0,    0,    0,
  0x19,      0,  797,    0,    0,    0,
  0x10,      0,  799,    0,    0,    0,
  0x13,      0,  800,    0,    0,    0,
  0x1f,      0,  802,    0,    0,    0,
  0x14,      0,  803,    0,    0,    0,
  0x16,      0,  804,    0,    0,    0,
  0x2f,      0, 1224,    0,    0,    0,
  0x11,      0,  806,    0,    0,    0,
  0x2d,      0,  807,    0,  808,    0,
  0x15,      0,  809,    0,    0,    0,
  0x27,      0,  812,    0,  235,    0,
  0x0d,      0,  814,    0,   39,    0,
  0x33,      0,  816,    0,  250,    0,
  0x0c,      0,  818,    0,   41,    0,
  0x34,      0,  819,    0,  252,    0,
  0x35,      0,  821,    0,  253,    0,
  0x29,      0,    0,    0,   88,    0,
  0x1a,      0,  823,    0,  254,    0,
  0x2b,      0,  825,    0,   46,    0,
  0x1b,      0,  826,    0,  257,    0,
  0x28,      0,  827,    0,  259,    0,
  0x56,      0,  825,    0,    0,    0
};

// Keyboard Layouts - 0001043B:Sami Extended Norway
static st_IVKBD VKBD_0001043B = {
  8299, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  402,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,  831,    0,
  0x23,      0,  127,    0,  830,    0,
  0x17,      0,  128,    0,  833,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  834,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  357,    0,  139,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  415,    0,  148,    0,
  0x2d,      0,  413,    0,  150,    0,
  0x15,      0,  836,    0,  152,    0,
  0x2c,      0,  153,    0,  829,    0,
  0x1b,   3840,  835,    0, 1468,    0,
  0x0c,      0,  183,    0,    0,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x2b,      0,  417,    0,  185,    0,
  0x27,      0,  190,    0,  209,    0,
  0x0d,    780,  382,    0,  113,    0,
  0x29,      0,  383,    0,    0,    0,
  0x1a,   3840,  189,    0,  182,    0,
  0x28,      0,  186,    0,  212,    0,
  0x56,      0,  416,    0,  837,    0
};

// Keyboard Layouts - 00010445:Bengali - INSCRIPT (Legacy)
static st_IVKBD VKBD_00010445 = {
  8300, 45,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1469,    0,    0,    0,
  0x02,      0, 1470,    0,    0,    0,
  0x03,      0, 1471,    0,    0,    0,
  0x04,      0,  856,    0,    0,    0,
  0x05,      0, 1472,    0,    0,    0,
  0x06,      0, 1473,    0,    0,    0,
  0x07,      0, 1474,    0,    0,    0,
  0x08,      0, 1475,    0,    0,    0,
  0x09,      0, 1476,    0,    0,    0,
  0x0a,      0, 1477,    0,    0,    0,
  0x1e,      0,  863,    0,    0,    0,
  0x30,      0,  865,    0,    0,    0,
  0x2e,      0,  866,    0,    0,    0,
  0x20,      0,  867,    0,    0,    0,
  0x12,      0,  869,    0,    0,    0,
  0x21,      0,  870,    0,    0,    0,
  0x22,      0,  872,    0,    0,    0,
  0x23,      0,  873,    0,    0,    0,
  0x17,      0,  874,    0,    0,    0,
  0x24,      0,  875,    0,    0,    0,
  0x25,      0,  877,    0,    0,    0,
  0x26,      0,  878,    0,    0,    0,
  0x32,      0,  879,    0,    0,    0,
  0x31,      0,  880,    0,    0,    0,
  0x18,      0,  881,    0,    0,    0,
  0x19,      0,  882,    0,    0,    0,
  0x10,      0,  883,    0,    0,    0,
  0x13,      0,  885,    0,    0,    0,
  0x1f,      0,  887,    0,    0,    0,
  0x14,      0,  889,    0,    0,    0,
  0x16,      0,  890,    0,    0,    0,
  0x2f,      0,  891,    0,    0,    0,
  0x11,      0,  892,    0,    0,    0,
  0x2d,      0,  893,    0,    0,    0,
  0x15,      0,  895,    0,    0,    0,
  0x27,      0,  896,    0,    0,    0,
  0x0d,      0,  897,    0,    0,    0,
  0x33,      0,  899,    0,    0,    0,
  0x0c,      0,  900,    0,    0,    0,
  0x34,      0, 1057,    0,    0,    0,
  0x35,      0, 1478,    0,    0,    0,
  0x1a,      0,  903,    0,    0,    0,
  0x1b,      0,  905,    0,    0,    0,
  0x28,      0,  906,    0,    0,    0
};

// Keyboard Layouts - 00010480:Uyghur
static st_IVKBD VKBD_00010480 = {
  8301, 48,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,    2,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0, 1479,    0,    0,    0,
  0x30,      0, 1480,    0,    0,    0,
  0x2e,      0, 1481,    0,    0,    0,
  0x20,      0, 1482,    0,    0,    0,
  0x12,      0, 1483,    0,    0,    0,
  0x21,      0, 1484,    0,    0,    0,
  0x22,      0, 1485,    0,    0,    0,
  0x23,      0, 1486,    0,    0,    0,
  0x17,      0, 1487,    0,    0,    0,
  0x24,      0, 1488,    0,    0,    0,
  0x25,      0, 1489,    0,    0,    0,
  0x26,      0,   18,    0,    0,    0,
  0x32,      0, 1490,    0,    0,    0,
  0x31,      0, 1491,    0,    0,    0,
  0x18,      0, 1492,    0,    0,    0,
  0x19,      0, 1493,    0,    0,    0,
  0x10,      0, 1494,    0,    0,    0,
  0x13,      0, 1495,    0,    0,    0,
  0x1f,      0,  526,    0,    0,    0,
  0x14,      0, 1496,    0,    0,    0,
  0x16,      0, 1497,    0,    0,    0,
  0x2f,      0, 1498,    0,    0,    0,
  0x11,      0, 1499,    0,    0,    0,
  0x2d,      0, 1500,    0,    0,    0,
  0x15,      0, 1501,    0,    0,    0,
  0x2c,      0, 1502,    0,    0,    0,
  0x27,      0,  532,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  533,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0, 1503,    0,    0,    0,
  0x35,      0, 1504,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0, 1505,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0, 1506,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0
};

// Keyboard Layouts - 0001080C:Belgian (Comma)
static st_IVKBD VKBD_0001080C = {
  8302, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  270,    0,  136,    0,
  0x02,      0,  271,    0,  149,    0,
  0x03,      0,  272,    0,  147,    0,
  0x04,      0,  273,    0,  151,    0,
  0x05,      0,  274,    0,  116,    0,
  0x06,      0,  275,    0,  124,    0,
  0x07,      0, 1271,    0,  101,    0,
  0x08,      0,  277,    0,    0,    0,
  0x09,      0, 1272,    0,    0,    0,
  0x0a,      0,  279,    0,  116,    0,
  0x10,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x27,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x1e,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x2c,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x11,      0,  153,    0,    0,    0,
  0x1b,      0, 1273,    0,  126,    0,
  0x35,   3840,  281,    0, 1274,    0,
  0x32,      0,  282,    0,    0,    0,
  0x0d,      0, 1275,    0,    0,    0,
  0x33,      0,  283,    0,    0,    0,
  0x34,      0,  284,    0,    0,    0,
  0x28,   3840,  285,    0, 1276,    0,
  0x0c,      0,  286,    0,    0,    0,
  0x2b,   3840, 1277,    0, 1278,    0,
  0x1a,     15,  288,    0,  124,    0,
  0x29,      0, 1279,    0,    0,    0,
  0x56,      0,  191,    0,  140,    0
};

// Keyboard Layouts - 0001083B:Finnish with Sami
static st_IVKBD VKBD_0001083B = {
  8303, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,  829,    0,
  0x2e,      0,  117,    0,  413,    0,
  0x20,      0,  119,    0,  417,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,  830,    0,
  0x22,      0,  125,    0,  831,    0,
  0x23,      0,  127,    0,  832,    0,
  0x17,      0,  128,    0,  833,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  834,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  835,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  402,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,  415,    0,
  0x14,      0,  144,    0,  836,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,  837,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,  416,    0,
  0x1b,    783,  182,    0,   97,    0,
  0x0c,      0,  183,    0,  140,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x2b,      0,  185,    0,    0,    0,
  0x27,      0,  209,    0,  190,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x29,      0,  269,    0,    0,    0,
  0x1a,      0,  189,    0,    0,    0,
  0x28,      0,  212,    0,  186,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00011009:Canadian Multilingual Standard
static st_IVKBD VKBD_00011009 = {
  8304, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  126,    0,
  0x02,      0,    3,    0,    0, 1285,
  0x03,      0,    4,    0,    0,  195,
  0x04,      0,    5,    0,    0, 1287,
  0x05,      0,    6,    0,  169, 1507,
  0x06,      0,    7,    0,    0, 1508,
  0x07,      0, 1289,    0,    0, 1509,
  0x08,      0,    9,    0,  116, 1510,
  0x09,      0,   10,    0,  136, 1511,
  0x0a,      0,  216,    0,  124,  566,
  0x1e,      0,  114,    0,    0, 1512,
  0x30,      0,  115,    0,    0, 1513,
  0x2e,      0,  117,    0,    0, 1291,
  0x20,      0,  119,    0,    0, 1514,
  0x12,      0,  121,    0,  122, 1515,
  0x21,      0,  123,    0,    0, 1414,
  0x22,      0,  125,    0,    0, 1516,
  0x23,      0,  127,    0,    0, 1517,
  0x17,      0,  128,    0,    0, 1518,
  0x24,      0,  129,    0,    0, 1519,
  0x25,      0,  130,    0,    0, 1520,
  0x26,      0,  132,    0,    0, 1521,
  0x32,      0,  134,    0,    0, 1292,
  0x31,      0,  135,    0,    0, 1522,
  0x18,      0,  137,    0,    0, 1523,
  0x19,      0,  138,    0,    0, 1524,
  0x10,      0,  139,    0,    0, 1525,
  0x13,      0,  141,    0,    0, 1293,
  0x1f,      0,  142,    0,    0,  705,
  0x14,      0,  144,    0,    0, 1526,
  0x16,      0,  145,    0,    0, 1527,
  0x2f,      0,  146,    0,    0, 1528,
  0x11,      0,  148,    0,    0, 1529,
  0x2d,      0,  150,    0,  258,    0,
  0x15,      0,  152,    0,    0, 1530,
  0x2c,      0,  153,    0,  255,    0,
  0x27,  61440,  235,    0,  105, 1531,
  0x0d,  61440,   39,    0,  256, 1532,
  0x33,      0, 1294,    0,  159, 1533,
  0x0c,      0,   41,    0,    0, 1534,
  0x34,  12288, 1535,    0,  162, 1536,
  0x35,  49152,  351,    0,    0, 1537,
  0x28,  49152, 1296,    0,    0, 1538,
  0x1a,  49935, 1254,    0,  109, 1539,
  0x2b,  49152, 1297,    0,    0, 1540,
  0x1b,  49920,  263,    0,   97, 1541,
  0x29,      0, 1542,    0,  149, 1543,
  0x56,      0, 1300,    0,    0, 1243
};

// Keyboard Layouts - 00011809:Gaelic
static st_IVKBD VKBD_00011809 = {
  8305, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,  122,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  848,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x28,      3, 1236,    0,  427,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,      0, 1237,    0,    0,    0,
  0x29,      3, 1278,    0, 1544,    0
};

// Keyboard Layouts - 00020405:Czech Programmers
static st_IVKBD VKBD_00020405 = {
  8306, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0, 1545,    0,
  0x02,      0,    3,    0,  481,    0,
  0x03,      0,    4,    0, 1546,    0,
  0x04,      0,    5,    0, 1547,    0,
  0x05,      0,    6,    0, 1548,    0,
  0x06,      0,    7,    0, 1549,    0,
  0x07,      0,    8,    0, 1550,    0,
  0x08,      0,    9,    0, 1551,    0,
  0x09,      0,   10,    0, 1552,    0,
  0x0a,      0,  216,    0,  350,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0, 1553,    0,
  0x0d,   3840,   39,    0,  163,    0,
  0x33,      0,  250,    0, 1554,    0,
  0x0c,      0,   41,    0,  156,    0,
  0x34,      0,  252,    0, 1555,    0,
  0x35,      0,  253,    0,   41,    0,
  0x29,   3072,   88,    0,  165,    0,
  0x1a,      0,  254,    0,  429,    0,
  0x2b,   3840,   46,    0,  182,    0,
  0x1b,      0,  257,    0,  170,    0,
  0x28,      0,  259,    0,  172,    0,
  0x56,   3072,   46,    0, 1321,    0
};

// Keyboard Layouts - 00020408:Greek (319)
static st_IVKBD VKBD_00020408 = {
  8307, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  363,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0, 1556,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  218,    0,    0,    0,
  0x30,      0,  219,    0,    0,    0,
  0x2e,      0,  220,    0,    0,    0,
  0x20,      0,  222,    0,    0,    0,
  0x12,      0,  223,    0,  122,    0,
  0x21,      0,  224,    0,    0,    0,
  0x22,      0,  225,    0,    0,    0,
  0x23,      0,  226,    0,    0,    0,
  0x17,      0,  227,    0,    0,    0,
  0x24,      0,  228,    0,    0,    0,
  0x25,      0,  229,    0,    0,    0,
  0x26,      0,  230,    0,    0,    0,
  0x32,      0,  231,    0,    0,    0,
  0x31,      0,  232,    0,    0,    0,
  0x18,      0,  233,    0,    0,    0,
  0x19,      0,  234,    0,    0,    0,
  0x10,      0, 1557,    0,    0,    0,
  0x13,      0,  236,    0,    0,    0,
  0x1f,      0,  238,    0,    0,    0,
  0x14,      0,  239,    0,    0,    0,
  0x16,      0,  240,    0,    0,    0,
  0x2f,      0,  241,    0,    0,    0,
  0x11,      0, 1558,    0,    0,    0,
  0x2d,      0,  243,    0,    0,    0,
  0x15,      0,  244,    0,    0,    0,
  0x2c,      0,  246,    0,    0,    0,
  0x27,    783,  247,    0,  248,    0,
  0x0d,      0,  262,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x0c,      0, 1559,    0,    0,    0,
  0x29,      0, 1330,    0,    0,    0,
  0x1a,      0, 1506,    0,    0,    0,
  0x2b,      0, 1279,    0,    0,    0,
  0x1b,      0, 1505,    0,    0,    0,
  0x28,      0, 1560,    0,    0,    0,
  0x56,      0, 1561,    0,    0,    0
};

// Keyboard Layouts - 00020409:United States-International
static st_IVKBD VKBD_00020409 = {
  8308, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,  702,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  703,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,     12,    8,    0,  371,    0,
  0x08,      0,    9,    0,  249,    0,
  0x09,      0,   10,    0,  372,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  704,    0,
  0x20,      0,  119,    0,  361,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  190,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  264,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,  209,    0,
  0x10,      0,  139,    0,  212,    0,
  0x13,      0,  141,    0,  237,    0,
  0x1f,      0,  142,    0,  705,    0,
  0x14,      0,  144,    0,  359,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  189,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  204,    0,
  0x2c,      0,  153,    0,  186,    0,
  0x27,      0,  235,    0,  706,    0,
  0x0d,      0,   39,    0,  707,    0,
  0x33,      0,  250,    0,  263,    0,
  0x0c,      0,   41,    0,  245,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,  708,    0,
  0x29,     15,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  255,    0,
  0x2b,      0,   46,    0,  709,    0,
  0x1b,      0,  257,    0,  258,    0,
  0x28,     15,  259,    0,  268,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00020418:Romanian (Programmers)
static st_IVKBD VKBD_00020418 = {
  8309, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,    768,  213,    0,   95,    0,
  0x02,    768,    3,    0,   97,    0,
  0x03,    768,    4,    0,   99,    0,
  0x04,    768,    5,    0,  101,    0,
  0x05,    768,    6,    0,  103,    0,
  0x06,    768,    7,    0,  105,    0,
  0x07,    768,    8,    0,  107,    0,
  0x08,    768,    9,    0,  109,    0,
  0x09,    768,   10,    0,  111,    0,
  0x0a,    768,  216,    0,  113,    0,
  0x1e,      0,  114,    0,  401,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  221,    0,
  0x20,      0,  119,    0,  417,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  403,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  387,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,  214,    0,
  0x10,      0,  139,    0,  402,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0, 1352,    0,
  0x14,      0,  144,    0, 1358,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  173,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,    768,   39,    0, 1353,    0,
  0x33,      0,  250,    0,  255,    0,
  0x0c,    768,   41,    0, 1355,    0,
  0x34,      0,  252,    0,  258,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  697,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1b,      0,  257,    0, 1562,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 0002041E:Thai Kedmanee (non-ShiftLock)
static st_IVKBD VKBD_0002041E = {
  8310, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1563,    0,    0,    0,
  0x02,      0, 1564,    0,    0,    0,
  0x03,      0, 1565,    0,    0,    0,
  0x04,      0, 1566,    0,    0,    0,
  0x05,      0, 1567,    0,    0,    0,
  0x06,      0, 1568,    0,    0,    0,
  0x07,      0, 1569,    0,    0,    0,
  0x08,      0, 1570,    0,    0,    0,
  0x09,      0, 1571,    0,    0,    0,
  0x0a,      0, 1572,    0,    0,    0,
  0x1e,      0, 1573,    0,    0,    0,
  0x30,      0, 1574,    0,    0,    0,
  0x2e,      0, 1575,    0,    0,    0,
  0x20,      0, 1576,    0,    0,    0,
  0x12,      0, 1577,    0,    0,    0,
  0x21,      0, 1578,    0,    0,    0,
  0x22,      0, 1579,    0,    0,    0,
  0x23,      0, 1580,    0,    0,    0,
  0x17,      0, 1581,    0,    0,    0,
  0x24,      0, 1582,    0,    0,    0,
  0x25,      0, 1583,    0,    0,    0,
  0x26,      0, 1584,    0,    0,    0,
  0x32,      0, 1585,    0,    0,    0,
  0x31,      0, 1586,    0,    0,    0,
  0x18,      0, 1587,    0,    0,    0,
  0x19,      0, 1588,    0,    0,    0,
  0x10,      0, 1589,    0,    0,    0,
  0x13,      0, 1590,    0,    0,    0,
  0x1f,      0, 1591,    0,    0,    0,
  0x14,      0, 1592,    0,    0,    0,
  0x16,      0, 1593,    0,    0,    0,
  0x2f,      0, 1594,    0,    0,    0,
  0x11,      0, 1595,    0,    0,    0,
  0x2d,      0, 1596,    0,    0,    0,
  0x15,      0, 1597,    0,    0,    0,
  0x2c,      0, 1598,    0,    0,    0,
  0x27,      0, 1599,    0,    0,    0,
  0x0d,      0, 1600,    0,    0,    0,
  0x33,      0, 1601,    0,    0,    0,
  0x0c,      0, 1602,    0,    0,    0,
  0x34,      0, 1603,    0,    0,    0,
  0x35,      0, 1604,    0,    0,    0,
  0x29,      0, 1605,    0,    0,    0,
  0x1a,      0, 1606,    0,    0,    0,
  0x2b,      0, 1607,    0,    0,    0,
  0x1b,      0, 1608,    0,    0,    0,
  0x28,      0, 1609,    0,    0,    0,
  0x56,      0, 1607,    0,    0,    0
};

// Keyboard Layouts - 00020422:Ukrainian (Enhanced)
static st_IVKBD VKBD_00020422 = {
  8311, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,  406,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  407,    0,    0,    0,
  0x08,      0,  408,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   58,    0,    0,    0,
  0x30,      0,   74,    0,    0,    0,
  0x2e,      0,   65,    0,    0,    0,
  0x20,      0,   68,    0,    0,    0,
  0x12,      0,   79,    0,    0,    0,
  0x21,      0,   60,    0,    0,    0,
  0x22,      0,   69,    0,    0,    0,
  0x23,      0,   93,    0,    0,    0,
  0x17,      0,   76,    0,    0,    0,
  0x24,      0,   62,    0,    0,    0,
  0x25,      0,   73,    0,    0,    0,
  0x26,      0,   71,    0,    0,    0,
  0x32,      0,   57,    0,    0,    0,
  0x31,      0,   66,    0,    0,    0,
  0x18,      0,   81,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x10,      0,   80,    0,    0,    0,
  0x13,      0,   77,    0,    0,    0,
  0x1f,      0,  539,    0,    0,    0,
  0x14,      0,   61,    0,    0,    0,
  0x16,      0,   64,    0, 1610,    0,
  0x2f,      0,   83,    0,    0,    0,
  0x11,      0,   89,    0,    0,    0,
  0x2d,      0,   92,    0,    0,    0,
  0x15,      0,   67,    0,    0,    0,
  0x2c,      0,   75,    0,    0,    0,
  0x27,      0,   63,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,   87,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,   82,    0,    0,    0,
  0x35,      0,  410,    0,    0,    0,
  0x29,      0, 1611,    0,    0,    0,
  0x1a,      0,   70,    0,    0,    0,
  0x2b,      0,  412,    0,    0,    0,
  0x1b,      0,  541,    0,    0,    0,
  0x28,      0,  542,    0,    0,    0,
  0x56,      0,  540,    0,    0,    0
};

// Keyboard Layouts - 00020427:Lithuanian Standard
static st_IVKBD VKBD_00020427 = {
  8312, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  582,    0,  126,    0,
  0x02,      0,  583,    0,  147,    0,
  0x03,      0, 1228,    0, 1340,    0,
  0x04,      0,  585,    0,  151,    0,
  0x05,      0,  586,    0,  155,    0,
  0x06,      0,  587,    0,  214,    0,
  0x07,      0,  588,    0,  101,    0,
  0x08,      0,  589,    0,  118,    0,
  0x09,      0, 1612,    0,  160,    0,
  0x0a,      0,  591,    0,  124,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  415,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  384,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  416,    0,    0,    0,
  0x2d,      0,  572,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x1b,      0,  148,    0,  136,    0,
  0x0c,      0, 1613,    0,  427,    0,
  0x33,      0,  413,    0,  697,    0,
  0x35,      0,  386,    0,  140,    0,
  0x34,      0,  123,    0,  700,    0,
  0x2b,      0,  139,    0,  149,    0,
  0x27,      0,  592,    0,    0,    0,
  0x0d,      0,  150,    0,  479,    0,
  0x29,      0,   88,    0,  113,    0,
  0x1a,      0,  595,    0,  116,    0,
  0x28,      0,  598,    0, 1614,    0,
  0x56,      0,  191,    0, 1456,    0
};

// Keyboard Layouts - 0002042E:Sorbian Standard
static st_IVKBD VKBD_0002042E = {
  8313, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  192,    0,  136,    0,
  0x02,      0,  193,    0,    0,    0,
  0x03,      0,  194,    0,  195,    0,
  0x04,      0,  196,    0,  197,    0,
  0x05,      0,  198,    0,    0,    0,
  0x06,      0,  199,    0,    0,    0,
  0x07,      0,  200,    0,    0,    0,
  0x08,      0,  201,    0,  116,    0,
  0x09,      0,  202,    0,  124,    0,
  0x0a,      0,  203,    0,  126,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,  147,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x2c,      0,  152,    0,    0,    0,
  0x15,      0,  153,    0,    0,    0,
  0x1a,      0,  204,    0,    0,    0,
  0x1b,      0,  205,    0,   97,    0,
  0x33,      0,  206,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  207,    0,    0,    0,
  0x2b,      0,  208,    0,    0,    0,
  0x27,      0,  209,    0,    0,    0,
  0x0c,      0,  210,    0,  140,    0,
  0x29,      3,  211,    0,    0,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x28,      0,  212,    0,    0,    0,
  0x56,      0,  191,    0,  149,    0
};

// Keyboard Layouts - 00020437:Georgian (Ergonomic)
static st_IVKBD VKBD_00020437 = {
  8314, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  582,    0, 1615,    0,
  0x02,      0,  583,    0, 1316,    0,
  0x03,      0, 1616,    0,  147,    0,
  0x04,      0, 1617,    0, 1618,    0,
  0x05,      0,  586,    0,  155,    0,
  0x06,      0,  714,    0,  122,    0,
  0x07,      0,  715,    0,  101,    0,
  0x08,      0, 1619,    0,  118,    0,
  0x09,      0, 1620,    0, 1621,    0,
  0x0a,      0,  591,    0, 1622,    0,
  0x1e,      0, 1452,    0,  756,    0,
  0x30,      0, 1623,    0,    0,    0,
  0x2e,      0, 1453,    0, 1624,    0,
  0x20,      0, 1425,    0, 1625,    0,
  0x12,      0, 1449,    0,    0,    0,
  0x21,      0, 1430,    0,  741,    0,
  0x22,      0, 1443,    0,    0,    0,
  0x23,      0, 1429,    0,    0,    0,
  0x17,      0, 1626,    0, 1627,    0,
  0x24,      0, 1440,    0,    0,    0,
  0x25,      0, 1628,    0,    0,    0,
  0x26,      0, 1629,    0, 1630,    0,
  0x32,      0, 1631,    0, 1632,    0,
  0x31,      0, 1633,    0,    0,    0,
  0x18,      0, 1450,    0,  723,    0,
  0x19,      0, 1634,    0,    0,    0,
  0x10,      0, 1635,    0,    0,    0,
  0x13,      0, 1636,    0,    0,    0,
  0x1f,      0, 1435,    0,  734,    0,
  0x14,      0, 1637,    0,    0,    0,
  0x16,      0, 1638,    0,    0,    0,
  0x2f,      0, 1639,    0, 1640,    0,
  0x11,      0, 1444,    0,    0,    0,
  0x2d,      0, 1434,    0, 1641,    0,
  0x15,      0, 1642,    0,    0,    0,
  0x2c,      0, 1643,    0,    0,    0,
  0x27,      0, 1427,    0,    0,    0,
  0x0d,      0, 1644,    0, 1645,    0,
  0x33,      0, 1439,    0, 1646,    0,
  0x0c,      0, 1343,    0, 1647,    0,
  0x34,      0, 1431,    0, 1648,    0,
  0x35,      0, 1649,    0, 1458,    0,
  0x29,      0, 1650,    0,   88,    0,
  0x1a,      0, 1438,    0,  254,    0,
  0x2b,      0, 1651,    0,   46,    0,
  0x1b,      0, 1445,    0,  257,    0,
  0x28,      0, 1432,    0, 1652,    0,
  0x56,      0,  412,    0,    0,    0
};

// Keyboard Layouts - 00020445:Bengali - INSCRIPT
static st_IVKBD VKBD_00020445 = {
  8315, 46,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1469,    0,    0,    0,
  0x02,      0, 1470,    0,    0,    0,
  0x03,      0, 1471,    0,    0,    0,
  0x04,      0, 1653,    0,    0,    0,
  0x05,      0, 1472,    0,    0,    0,
  0x06,      0, 1473,    0,    0,    0,
  0x07,      0, 1474,    0,    0,    0,
  0x08,      0, 1475,    0,    0,    0,
  0x09,      0, 1476,    0,    0,    0,
  0x0a,      0, 1477,    0,    0,    0,
  0x1e,      0,  863,    0,    0,    0,
  0x30,      0,  865,    0,    0,    0,
  0x2e,      0,  866,    0,    0,    0,
  0x20,      0,  867,    0,    0,    0,
  0x12,      0,  869,    0,    0,    0,
  0x21,      0,  870,    0,    0,    0,
  0x22,      0,  872,    0,    0,    0,
  0x23,      0,  873,    0,    0,    0,
  0x17,      0,  874,    0,    0,    0,
  0x24,      0,  875,    0,    0,    0,
  0x25,      0,  877,    0,    0,    0,
  0x26,      0,  878,    0,    0,    0,
  0x32,      0,  879,    0,    0,    0,
  0x31,      0,  880,    0,    0,    0,
  0x18,      0,  881,    0,    0,    0,
  0x19,      0,  882,    0,    0,    0,
  0x10,      0,  883,    0,    0,    0,
  0x13,      0,  885,    0,    0,    0,
  0x1f,      0,  887,    0,    0,    0,
  0x14,      0,  889,    0,    0,    0,
  0x16,      0,  890,    0,    0,    0,
  0x2f,      0,  891,    0,    0,    0,
  0x11,      0,  892,    0,    0,    0,
  0x2d,      0,  893,    0,    0,    0,
  0x15,      0,  895,    0,    0,    0,
  0x27,      0,  896,    0,    0,    0,
  0x0d,      0,  897,    0,    0,    0,
  0x33,      0,  899,    0,    0,    0,
  0x0c,      0,  900,    0,    0,    0,
  0x34,      0,  819,    0,    0,    0,
  0x35,      0, 1478,    0,    0,    0,
  0x29,      0,  958,    0,    0,    0,
  0x1a,      0,  903,    0,    0,    0,
  0x1b,      0,  905,    0,    0,    0,
  0x28,      0,  906,    0,    0,    0
};

// Keyboard Layouts - 0002083B:Sami Extended Finland-Sweden
static st_IVKBD VKBD_0002083B = {
  8316, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  136,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  147,    0,
  0x04,      0,    5,    0,  176,    0,
  0x05,      0,  177,    0,  155,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,  116,    0,
  0x09,      0,  180,    0,  124,    0,
  0x0a,      0,   11,    0,  126,    0,
  0x1e,      0,  114,    0,  402,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,  831,    0,
  0x23,      0,  127,    0,  830,    0,
  0x17,      0,  128,    0,  833,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,  834,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,  554,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  357,    0,  139,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  415,    0,  148,    0,
  0x2d,      0,  413,    0,  150,    0,
  0x15,      0,  836,    0,  152,    0,
  0x2c,      0,  153,    0,  829,    0,
  0x1b,   3840,  835,    0, 1468,    0,
  0x0c,      0,  183,    0,  140,    0,
  0x33,      0,  184,    0,  159,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,  162,    0,
  0x2b,      0,  417,    0,  185,    0,
  0x27,      0,  209,    0,  190,    0,
  0x0d,     15,  187,    0,    0,    0,
  0x29,      0,  269,    0,  149,    0,
  0x1a,   3840,  189,    0,  182,    0,
  0x28,      0,  212,    0,  186,    0,
  0x56,      0,  416,    0,  837,    0
};

// Keyboard Layouts - 00030402:Bulgarian
static st_IVKBD VKBD_00030402 = {
  8317, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,   49,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,   50,    0,    0,    0,
  0x04,      0,   51,    0,    0,    0,
  0x05,      0,   52,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,   53,    0,    0,    0,
  0x08,      0,   54,    0,    0,    0,
  0x09,      0,   55,    0,    0,    0,
  0x0a,      0, 1654,    0,    0,    0,
  0x1e,      0, 1655,    0,    0,    0,
  0x30,      0,   58,    0,    0,    0,
  0x2e,      0,   59,    0,    0,    0,
  0x20,      0,   60,    0,    0,    0,
  0x12,      0,   61,    0,    0,    0,
  0x21,      0,   62,    0,    0,    0,
  0x22,      0,   63,    0,    0,    0,
  0x23,      0,   64,    0,    0,    0,
  0x17,      0,   65,    0,    0,    0,
  0x24,      0,   66,    0,    0,    0,
  0x25,      0,   67,    0,    0,    0,
  0x26,      0,   68,    0,    0,    0,
  0x32,      0,   69,    0,    0,    0,
  0x31,      0,   70,    0,    0,    0,
  0x18,      0,   71,    0,    0,    0,
  0x19,      0,   72,    0,    0,    0,
  0x34,      0,   73,    0,    0,    0,
  0x13,      0,   74,    0,    0,    0,
  0x1f,      0,   75,    0,    0,    0,
  0x14,      0,   76,    0,    0,    0,
  0x16,      0,   77,    0,    0,    0,
  0x2f,      0,   78,    0,    0,    0,
  0x11,      0,   79,    0,    0,    0,
  0x2d,      0,   80,    0,    0,    0,
  0x15,      0,   81,    0,    0,    0,
  0x2c,      0,   82,    0,    0,    0,
  0x27,      0,   83,    0,    0,    0,
  0x10,      0, 1656,    0,    0,    0,
  0x0c,      0, 1657,    0,    0,    0,
  0x0d,      0, 1658,    0,    0,    0,
  0x35,      0,   87,    0,    0,    0,
  0x29,      0,   90,    0,    0,    0,
  0x1a,      0,   89,    0,    0,    0,
  0x2b,      0,  754,    0,    0,    0,
  0x1b,      0,   91,    0,    0,    0,
  0x28,      0,   92,    0,    0,    0,
  0x33,      0,   93,    0,    0,    0,
  0x56,      0, 1659,    0,    0,    0
};

// Keyboard Layouts - 00030408:Greek (220) Latin
static st_IVKBD VKBD_00030408 = {
  8318, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,  105,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  176,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,  178,    0,  215,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,  169,    0,
  0x0a,      0,   11,    0,  217,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,    783,  247,    0,  248,    0,
  0x1a,      0,  262,    0,  255,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x0c,      0,  265,    0,  251,    0,
  0x29,      0,   46,    0,    0,    0,
  0x0d,      0,  381,    0,  249,    0,
  0x2b,      0, 1331,    0,  256,    0,
  0x1b,      0, 1332,    0,  258,    0,
  0x28,    783, 1333,    0,  248,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0003041E:Thai Pattachote (non-ShiftLock)
static st_IVKBD VKBD_0003041E = {
  8319, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0, 1660,    0,    0,    0,
  0x02,      0,   39,    0,    0,    0,
  0x03,      0, 1661,    0,    0,    0,
  0x04,      0, 1662,    0,    0,    0,
  0x05,      0, 1663,    0,    0,    0,
  0x06,      0, 1664,    0,    0,    0,
  0x07,      0, 1665,    0,    0,    0,
  0x08,      0, 1666,    0,    0,    0,
  0x09,      0, 1667,    0,    0,    0,
  0x0a,      0, 1668,    0,    0,    0,
  0x1e,      0, 1669,    0,    0,    0,
  0x30,      0, 1670,    0,    0,    0,
  0x2e,      0, 1671,    0,    0,    0,
  0x20,      0, 1672,    0,    0,    0,
  0x12,      0, 1673,    0,    0,    0,
  0x21,      0, 1674,    0,    0,    0,
  0x22,      0, 1675,    0,    0,    0,
  0x23,      0, 1676,    0,    0,    0,
  0x17,      0, 1677,    0,    0,    0,
  0x24,      0, 1678,    0,    0,    0,
  0x25,      0, 1679,    0,    0,    0,
  0x26,      0, 1680,    0,    0,    0,
  0x32,      0, 1681,    0,    0,    0,
  0x31,      0, 1682,    0,    0,    0,
  0x18,      0, 1683,    0,    0,    0,
  0x19,      0, 1684,    0,    0,    0,
  0x10,      0, 1685,    0,    0,    0,
  0x13,      0, 1686,    0,    0,    0,
  0x1f,      0, 1687,    0,    0,    0,
  0x14,      0, 1688,    0,    0,    0,
  0x16,      0, 1689,    0,    0,    0,
  0x2f,      0, 1690,    0,    0,    0,
  0x11,      0, 1691,    0,    0,    0,
  0x2d,      0, 1692,    0,    0,    0,
  0x15,      0, 1693,    0,    0,    0,
  0x2c,      0, 1694,    0,    0,    0,
  0x27,      0, 1695,    0,    0,    0,
  0x0d,      0, 1696,    0,    0,    0,
  0x33,      0, 1697,    0,    0,    0,
  0x0c,      0, 1698,    0,    0,    0,
  0x34,      0, 1699,    0,    0,    0,
  0x35,      0, 1700,    0,    0,    0,
  0x29,      0, 1701,    0,    0,    0,
  0x1a,      0, 1702,    0,    0,    0,
  0x2b,      0, 1703,    0,    0,    0,
  0x1b,      0, 1704,    0,    0,    0,
  0x28,      0, 1705,    0,    0,    0,
  0x56,      0, 1703,    0,    0,    0
};

// Keyboard Layouts - 00040402:Bulgarian (Phonetic Traditional)
static st_IVKBD VKBD_00040402 = {
  8320, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,  405,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0, 1706,    0,    0,    0,
  0x08,      0, 1707,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,  216,    0,    0,    0,
  0x1e,      0,   60,    0,    0,    0,
  0x30,      0,   87,    0,    0,    0,
  0x2e,      0,   89,    0,    0,    0,
  0x20,      0,   71,    0,    0,    0,
  0x12,      0,   61,    0,    0,    0,
  0x21,      0,   58,    0,    0,    0,
  0x22,      0,   64,    0,    0,    0,
  0x23,      0,   70,    0,    0,    0,
  0x17,      0,   74,    0,    0,    0,
  0x24,      0,   80,    0,    0,    0,
  0x25,      0,   77,    0,    0,    0,
  0x26,      0,   73,    0,    0,    0,
  0x32,      0,   83,    0,    0,    0,
  0x31,      0,   67,    0,    0,    0,
  0x18,      0,   62,    0,    0,    0,
  0x19,      0,   69,    0,    0,    0,
  0x10,      0,   75,    0,    0,    0,
  0x13,      0,   93,    0,    0,    0,
  0x1f,      0,   65,    0,    0,    0,
  0x14,      0,   66,    0,    0,    0,
  0x16,      0,   79,    0,    0,    0,
  0x2f,      0,   63,    0,    0,    0,
  0x11,      0,   68,    0,    0,    0,
  0x2d,      0, 1655,    0,    0,    0,
  0x15,      0,   59,    0,    0,    0,
  0x2c,      0,   72,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0,
  0x29,      0,   92,    0,    0,    0,
  0x1a,      0,   76,    0, 1708,    0,
  0x2b,      0,   82,    0,    0,    0,
  0x1b,      0,   81,    0, 1709,    0,
  0x28,      0,  259,    0,    0,    0,
  0x56,      0,   82,    0,    0,    0
};

// Keyboard Layouts - 00040408:Greek (319) Latin
static st_IVKBD VKBD_00040408 = {
  8321, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  174,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,  175,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,  178,    0,    0,    0,
  0x08,      0,  179,    0,    0,    0,
  0x09,      0,  180,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x1e,      0,  114,    0,    0,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,    0,    0,
  0x20,      0,  119,    0,    0,    0,
  0x12,      0,  121,    0,  122,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,    0,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,    0,    0,
  0x32,      0,  134,    0,    0,    0,
  0x31,      0,  135,    0,    0,    0,
  0x18,      0,  137,    0,    0,    0,
  0x19,      0,  138,    0,    0,    0,
  0x10,      0,  139,    0,    0,    0,
  0x13,      0,  141,    0,    0,    0,
  0x1f,      0,  142,    0,    0,    0,
  0x14,      0,  144,    0,    0,    0,
  0x16,      0,  145,    0,    0,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,    0,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,    0,    0,
  0x2c,      0,  153,    0,    0,    0,
  0x27,     15,  268,    0,    0,    0,
  0x0d,      0,  262,    0,    0,    0,
  0x33,      0,  184,    0,    0,    0,
  0x35,      0,   41,    0,    0,    0,
  0x34,      0,  161,    0,    0,    0,
  0x0c,      0,  265,    0,    0,    0,
  0x29,      0,   46,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x2b,      3, 1710,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x28,     15, 1711,    0,    0,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 00050408:Greek Latin
static st_IVKBD VKBD_00050408 = {
  8322, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  701,    0,
  0x02,      0,    3,    0,  702,    0,
  0x03,      0,    4,    0,  195,    0,
  0x04,      0,    5,    0,  197,    0,
  0x05,      0,    6,    0,  703,    0,
  0x06,      0,    7,    0,  122,    0,
  0x07,     12,    8,    0,  371,    0,
  0x08,      0,    9,    0,  249,    0,
  0x09,      0,   10,    0,  372,    0,
  0x0a,      0,  216,    0,  699,    0,
  0x1e,      0,  114,    0,  357,    0,
  0x30,      0,  115,    0,    0,    0,
  0x2e,      0,  117,    0,  704,    0,
  0x20,      0,  119,    0,  361,    0,
  0x12,      0,  121,    0,  351,    0,
  0x21,      0,  123,    0,    0,    0,
  0x22,      0,  125,    0,    0,    0,
  0x23,      0,  127,    0,    0,    0,
  0x17,      0,  128,    0,  358,    0,
  0x24,      0,  129,    0,    0,    0,
  0x25,      0,  130,    0,    0,    0,
  0x26,      0,  132,    0,  190,    0,
  0x32,      0,  134,    0,  181,    0,
  0x31,      0,  135,    0,  264,    0,
  0x18,      0,  137,    0,  352,    0,
  0x19,      0,  138,    0,  209,    0,
  0x10,      0,  139,    0,  212,    0,
  0x13,      0,  141,    0,  237,    0,
  0x1f,      0,  142,    0,  705,    0,
  0x14,      0,  144,    0,  359,    0,
  0x16,      0,  145,    0,  356,    0,
  0x2f,      0,  146,    0,    0,    0,
  0x11,      0,  148,    0,  189,    0,
  0x2d,      0,  150,    0,    0,    0,
  0x15,      0,  152,    0,  204,    0,
  0x2c,      0,  153,    0,  186,    0,
  0x27,      0,  235,    0,  706,    0,
  0x0d,      0,   39,    0,  707,    0,
  0x33,      0,  250,    0,  263,    0,
  0x0c,      0,   41,    0,  245,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,  708,    0,
  0x29,     15,   88,    0,    0,    0,
  0x1a,      0,  254,    0,  255,    0,
  0x2b,      0,   46,    0,  709,    0,
  0x1b,      0,  257,    0,  258,    0,
  0x28,   3840,  259,    0,  268,    0,
  0x56,      0,   46,    0,    0,    0
};

// Keyboard Layouts - 00060408:Greek Polytonic
static st_IVKBD VKBD_00060408 = {
  8323, 49,
  0x39,      0,    1,    0,    0,    0,
  0x0b,      0,  213,    0,  105,    0,
  0x02,      0,    3,    0, 1712,    0,
  0x03,      0,    4,    0, 1713,    0,
  0x04,      0,    5,    0, 1714,    0,
  0x05,      0,    6,    0,  176,    0,
  0x06,      0,    7,    0,  214,    0,
  0x07,      0,    8,    0,  215,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,  169,    0,
  0x0a,      0,  216,    0,  217,    0,
  0x1e,      0,  218,    0,    0,    0,
  0x30,      0,  219,    0,    0,    0,
  0x2e,      0,  220,    0,  221,    0,
  0x20,      0,  222,    0,    0,    0,
  0x12,      0,  223,    0,  122,    0,
  0x21,      0,  224,    0,    0,    0,
  0x22,      0,  225,    0,    0,    0,
  0x23,      0,  226,    0,    0,    0,
  0x17,      0,  227,    0,    0,    0,
  0x24,      0,  228,    0,    0,    0,
  0x25,      0,  229,    0,    0,    0,
  0x26,      0,  230,    0,    0,    0,
  0x32,      0,  231,    0,    0,    0,
  0x31,      0,  232,    0,    0,    0,
  0x18,      0,  233,    0,    0,    0,
  0x19,      0,  234,    0,    0,    0,
  0x10,    783,  235,    0, 1715,    0,
  0x13,      0,  236,    0,  237,    0,
  0x1f,      0,  238,    0,    0,    0,
  0x14,      0,  239,    0,    0,    0,
  0x16,      0,  240,    0,    0,    0,
  0x2f,      0,  241,    0,    0,    0,
  0x11,     12,  242,    0,    0,    0,
  0x2d,      0,  243,    0,    0,    0,
  0x15,      0,  244,    0,  245,    0,
  0x2c,      0,  246,    0,    0,    0,
  0x27,    783,  247,    0,  248,    0,
  0x0d,   3855,   39,    0, 1716,    0,
  0x33,      0,  250,    0,    0,    0,
  0x0c,     15,   41,    0,  251,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,   3855,  253,    0, 1717,    0,
  0x29,    783, 1718,    0, 1719,    0,
  0x1a,    783,  254,    0,  255,    0,
  0x2b,   3855,   46,    0, 1720,    0,
  0x1b,    783,  257,    0, 1721,    0,
  0x28,   3855,  259,    0, 1722,    0,
  0x56,      0,  191,    0,    0,    0
};

// Keyboard Layouts - 0001FFFF:Chinese ChaJei
static st_IVKBD VKBD_0001FFFF = {
  8324, 48,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0, 1723,    0,    0,    0,
  0x02,      0,    3,    0,    0,    0,
  0x03,      0,    4,    0,    0,    0,
  0x04,      0,    5,    0,    0,    0,
  0x05,      0,    6,    0,    0,    0,
  0x06,      0,    7,    0,    0,    0,
  0x07,      0,    8,    0,    0,    0,
  0x08,      0,    9,    0,    0,    0,
  0x09,      0,   10,    0,    0,    0,
  0x0a,      0,   11,    0,    0,    0,
  0x0b,      0,    2,    0,    0,    0,
  0x0c,      0,   41,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x10,      0, 1724,    0,    0,    0,
  0x11,      0, 1725,    0,    0,    0,
  0x12,      0, 1726,    0,    0,    0,
  0x13,      0, 1727,    0,    0,    0,
  0x14,      0, 1728,    0,    0,    0,
  0x15,      0, 1729,    0,    0,    0,
  0x16,      0, 1730,    0,    0,    0,
  0x17,      0, 1731,    0,    0,    0,
  0x18,      0, 1732,    0,    0,    0,
  0x19,      0, 1733,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1e,      0, 1734,    0,    0,    0,
  0x1f,      0, 1735,    0,    0,    0,
  0x20,      0, 1736,    0,    0,    0,
  0x21,      0, 1737,    0,    0,    0,
  0x22,      0, 1738,    0,    0,    0,
  0x23,      0, 1739,    0,    0,    0,
  0x24,      0, 1740,    0,    0,    0,
  0x25,      0, 1741,    0,    0,    0,
  0x26,      0, 1742,    0,    0,    0,
  0x27,      0,  235,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x2c,      0, 1743,    0,    0,    0,
  0x2d,      0, 1744,    0,    0,    0,
  0x2e,      0, 1745,    0,    0,    0,
  0x2f,      0, 1746,    0,    0,    0,
  0x30,      0, 1747,    0,    0,    0,
  0x31,      0, 1748,    0,    0,    0,
  0x32,      0, 1749,    0,    0,    0,
  0x33,      0,  250,    0,    0,    0,
  0x34,      0,  252,    0,    0,    0,
  0x35,      0,  253,    0,    0,    0
};

// Keyboard Layouts - 0002FFFF:Chinese Bopomofo
static st_IVKBD VKBD_0002FFFF = {
  8325, 48,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0, 1723,    0,    0,    0,
  0x02,      0, 1750,    0,    0,    0,
  0x03,      0, 1751,    0,    0,    0,
  0x04,      0, 1752,    0,    0,    0,
  0x05,      0, 1753,    0,    0,    0,
  0x06,      0, 1754,    0,    0,    0,
  0x07,      0, 1755,    0,    0,    0,
  0x08,      0, 1756,    0,    0,    0,
  0x09,      0, 1757,    0,    0,    0,
  0x0a,      0, 1758,    0,    0,    0,
  0x0b,      0, 1759,    0,    0,    0,
  0x0c,      0, 1760,    0,    0,    0,
  0x0d,      0,   39,    0,    0,    0,
  0x10,      0, 1761,    0,    0,    0,
  0x11,      0, 1762,    0,    0,    0,
  0x12,      0, 1763,    0,    0,    0,
  0x13,      0, 1764,    0,    0,    0,
  0x14,      0, 1765,    0,    0,    0,
  0x15,      0, 1766,    0,    0,    0,
  0x16,      0, 1767,    0,    0,    0,
  0x17,      0, 1768,    0,    0,    0,
  0x18,      0, 1769,    0,    0,    0,
  0x19,      0, 1770,    0,    0,    0,
  0x1a,      0,  254,    0,    0,    0,
  0x1b,      0,  257,    0,    0,    0,
  0x2b,      0,   46,    0,    0,    0,
  0x1e,      0, 1771,    0,    0,    0,
  0x1f,      0, 1772,    0,    0,    0,
  0x20,      0, 1773,    0,    0,    0,
  0x21,      0, 1774,    0,    0,    0,
  0x22,      0, 1775,    0,    0,    0,
  0x23,      0, 1776,    0,    0,    0,
  0x24,      0, 1777,    0,    0,    0,
  0x25,      0, 1778,    0,    0,    0,
  0x26,      0, 1779,    0,    0,    0,
  0x27,      0, 1780,    0,    0,    0,
  0x28,      0,  259,    0,    0,    0,
  0x2c,      0, 1781,    0,    0,    0,
  0x2d,      0, 1782,    0,    0,    0,
  0x2e,      0, 1783,    0,    0,    0,
  0x2f,      0, 1784,    0,    0,    0,
  0x30,      0, 1785,    0,    0,    0,
  0x31,      0, 1786,    0,    0,    0,
  0x32,      0, 1787,    0,    0,    0,
  0x33,      0, 1788,    0,    0,    0,
  0x34,      0, 1789,    0,    0,    0,
  0x35,      0, 1790,    0,    0,    0
};

// Keyboard Layouts - 0003FFFF:Korean
static st_IVKBD VKBD_0003FFFF = {
  8326, 48,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0,   88,    0,   88,    0,
  0x02,      0,    3,    0,    3,    0,
  0x03,      0,    4,    0,    4,    0,
  0x04,      0,    5,    0,    5,    0,
  0x05,      0,    6,    0,    6,    0,
  0x06,      0,    7,    0,    7,    0,
  0x07,      0,    8,    0,    8,    0,
  0x08,      0,    9,    0,    9,    0,
  0x09,      0,   10,    0,   10,    0,
  0x0a,      0,   11,    0,   11,    0,
  0x0b,      0,    2,    0,    2,    0,
  0x0c,      0,   41,    0,   41,    0,
  0x0d,      0,   39,    0,   39,    0,
  0x10,      0,  139,    0, 1791,    0,
  0x11,      0,  148,    0, 1792,    0,
  0x12,      0,  121,    0, 1793,    0,
  0x13,      0,  141,    0, 1794,    0,
  0x14,      0,  144,    0, 1795,    0,
  0x15,      0,  152,    0, 1796,    0,
  0x16,      0,  145,    0, 1797,    0,
  0x17,      0,  128,    0, 1798,    0,
  0x18,      0,  137,    0, 1799,    0,
  0x19,      0,  138,    0, 1800,    0,
  0x1a,      0,  254,    0,  254,    0,
  0x1b,      0,  257,    0,  257,    0,
  0x2b,      0, 1801,    0, 1801,    0,
  0x1e,      0,  114,    0, 1802,    0,
  0x1f,      0,  142,    0, 1803,    0,
  0x20,      0,  119,    0, 1804,    0,
  0x21,      0,  123,    0, 1805,    0,
  0x22,      0,  125,    0, 1806,    0,
  0x23,      0,  127,    0, 1807,    0,
  0x24,      0,  129,    0, 1808,    0,
  0x25,      0,  130,    0, 1809,    0,
  0x26,      0,  132,    0, 1810,    0,
  0x27,      0, 1811,    0,  235,    0,
  0x28,      0, 1812,    0,  259,    0,
  0x2c,      0,  153,    0, 1813,    0,
  0x2d,      0,  150,    0, 1814,    0,
  0x2e,      0,  117,    0, 1815,    0,
  0x2f,      0,  146,    0, 1816,    0,
  0x30,      0,  115,    0, 1817,    0,
  0x31,      0,  135,    0, 1818,    0,
  0x32,      0,  134,    0, 1819,    0,
  0x33,      0,  250,    0,  250,    0,
  0x34,      0,  252,    0,  252,    0,
  0x35,      0,  253,    0,  253,    0
};

// Keyboard Layouts - 0004FFFF:Japanese
static st_IVKBD VKBD_0004FFFF = {
  8327, 49,
  0x39,      0,    1,    0,    0,    0,
  0x29,      0,   88, 1820, 1821, 1822,
  0x02,      0,    3, 1823, 1824, 1825,
  0x03,      0,    4, 1826, 1827, 1828,
  0x04,      0,    5, 1829, 1830, 1831,
  0x05,      0,    6, 1832, 1833, 1834,
  0x06,      0,    7, 1835, 1836, 1837,
  0x07,      0,    8, 1838, 1839, 1840,
  0x08,      0,    9, 1841, 1842, 1843,
  0x09,      0,   10, 1844, 1845, 1846,
  0x0a,      0,   11, 1847, 1848, 1849,
  0x0b,      0,    2, 1850, 1851, 1852,
  0x0c,      0,   41, 1853, 1854, 1855,
  0x0d,      0,   39, 1856, 1857, 1858,
  0x10,      0,  139, 1859, 1860, 1861,
  0x11,      0,  148, 1862, 1863, 1864,
  0x12,      0,  121, 1865, 1866, 1867,
  0x13,      0,  141, 1868, 1869, 1870,
  0x14,      0,  144, 1871, 1872, 1873,
  0x15,      0,  152, 1874, 1875, 1876,
  0x16,      0,  145, 1877, 1878, 1879,
  0x17,      0,  128, 1880, 1881, 1882,
  0x18,      0,  137, 1883, 1884, 1885,
  0x19,      0,  138, 1886, 1887, 1888,
  0x1a,      0,  254, 1889, 1889, 1890,
  0x1b,      0,  257, 1891, 1891, 1892,
  0x7d,      0, 1893, 1894, 1895, 1896,
  0x1e,      0,  114, 1897, 1898, 1899,
  0x1f,      0,  142, 1900, 1901, 1902,
  0x20,      0,  119, 1903, 1904, 1905,
  0x21,      0,  123, 1906, 1907, 1908,
  0x22,      0,  125, 1909, 1910, 1911,
  0x23,      0,  127, 1912, 1913, 1914,
  0x24,      0,  129, 1915, 1916, 1917,
  0x25,      0,  130, 1918, 1919, 1920,
  0x26,      0,  132, 1921, 1922, 1923,
  0x27,      0, 1924, 1925, 1926, 1927,
  0x28,      0, 1928, 1929, 1930, 1931,
  0x2c,      0,  153, 1932, 1933, 1934,
  0x2d,      0,  150, 1935, 1936, 1937,
  0x2e,      0,  117, 1938, 1939, 1940,
  0x2f,      0,  146, 1941, 1942, 1943,
  0x30,      0,  115, 1944, 1945, 1946,
  0x31,      0,  135, 1947, 1948, 1949,
  0x32,      0,  134, 1950, 1951, 1952,
  0x33,      0,  250, 1953, 1954, 1955,
  0x34,      0,  252, 1956, 1957, 1958,
  0x35,      0,  253, 1959, 1960, 1961,
  0x73,      0, 1962, 1959, 1960, 1961
};

static const wchar_t wc_Chars[1963][4] = {
  { 0x0000, 0x0000, 0x0000, 0x0000},  //    0; Use Count = 16481
  { 0x0020, 0x0020, 0x0020, 0x0020},  //    1; Use Count =   127
  { 0x0030, 0x0030, 0x0028, 0x0028},  //    2; Use Count =     8
  { 0x0031, 0x0031, 0x0021, 0x0021},  //    3; Use Count =    85
  { 0x0032, 0x0032, 0x0040, 0x0040},  //    4; Use Count =    33
  { 0x0033, 0x0033, 0x0023, 0x0023},  //    5; Use Count =    58
  { 0x0034, 0x0034, 0x0024, 0x0024},  //    6; Use Count =    59
  { 0x0035, 0x0035, 0x0025, 0x0025},  //    7; Use Count =    88
  { 0x0036, 0x0036, 0x005e, 0x005e},  //    8; Use Count =    34
  { 0x0037, 0x0037, 0x0026, 0x0026},  //    9; Use Count =    39
  { 0x0038, 0x0038, 0x002a, 0x002a},  //   10; Use Count =    49
  { 0x0039, 0x0039, 0x0029, 0x0029},  //   11; Use Count =    44
  { 0x0634, 0x0634, 0x0650, 0x0650},  //   12; Use Count =     1
  { 0xfffe, 0xfffe, 0xfffe, 0xfffe},  //   13; Use Count =    17
  { 0x0624, 0x0624, 0x007d, 0x007d},  //   14; Use Count =     1
  { 0x064a, 0x064a, 0x005d, 0x005d},  //   15; Use Count =     1
  { 0x062b, 0x062b, 0x064f, 0x064f},  //   16; Use Count =     1
  { 0x0628, 0x0628, 0x005b, 0x005b},  //   17; Use Count =     1
  { 0x0644, 0x0644, 0xfffe, 0xfffe},  //   18; Use Count =     2
  { 0x0627, 0x0627, 0x0623, 0x0623},  //   19; Use Count =     1
  { 0x0647, 0x0647, 0x00f7, 0x00f7},  //   20; Use Count =     1
  { 0x062a, 0x062a, 0x0640, 0x0640},  //   21; Use Count =     2
  { 0x0646, 0x0646, 0x060c, 0x060c},  //   22; Use Count =     1
  { 0x0645, 0x0645, 0x002f, 0x002f},  //   23; Use Count =     1
  { 0x0629, 0x0629, 0x2019, 0x2019},  //   24; Use Count =     1
  { 0x0649, 0x0649, 0x0622, 0x0622},  //   25; Use Count =     1
  { 0x062e, 0x062e, 0x00d7, 0x00d7},  //   26; Use Count =     1
  { 0x062d, 0x062d, 0x061b, 0x061b},  //   27; Use Count =     1
  { 0x0636, 0x0636, 0x064e, 0x064e},  //   28; Use Count =     1
  { 0x0642, 0x0642, 0x064c, 0x064c},  //   29; Use Count =     1
  { 0x0633, 0x0633, 0x064d, 0x064d},  //   30; Use Count =     1
  { 0x0641, 0x0641, 0xfffe, 0xfffe},  //   31; Use Count =     1
  { 0x0639, 0x0639, 0x2018, 0x2018},  //   32; Use Count =     1
  { 0x0631, 0x0631, 0x007b, 0x007b},  //   33; Use Count =     1
  { 0x0635, 0x0635, 0x064b, 0x064b},  //   34; Use Count =     1
  { 0x0621, 0x0621, 0x0652, 0x0652},  //   35; Use Count =     1
  { 0x063a, 0x063a, 0x0625, 0x0625},  //   36; Use Count =     1
  { 0x0626, 0x0626, 0x007e, 0x007e},  //   37; Use Count =     1
  { 0x0643, 0x0643, 0x003a, 0x003a},  //   38; Use Count =     1
  { 0x003d, 0x003d, 0x002b, 0x002b},  //   39; Use Count =    54
  { 0x0648, 0x0648, 0x002c, 0x002c},  //   40; Use Count =     1
  { 0x002d, 0x002d, 0x005f, 0x005f},  //   41; Use Count =    95
  { 0x0632, 0x0632, 0x002e, 0x002e},  //   42; Use Count =     1
  { 0x0638, 0x0638, 0x061f, 0x061f},  //   43; Use Count =     1
  { 0x0630, 0x0630, 0x0651, 0x0651},  //   44; Use Count =     1
  { 0x062c, 0x062c, 0x003c, 0x003c},  //   45; Use Count =     1
  { 0x005c, 0x005c, 0x007c, 0x007c},  //   46; Use Count =    70
  { 0x062f, 0x062f, 0x003e, 0x003e},  //   47; Use Count =     1
  { 0x0637, 0x0637, 0x0022, 0x0022},  //   48; Use Count =     1
  { 0x0030, 0x0030, 0x2116, 0x2116},  //   49; Use Count =     2
  { 0x0032, 0x0032, 0x003f, 0x003f},  //   50; Use Count =     2
  { 0x0033, 0x0033, 0x002b, 0x002b},  //   51; Use Count =     4
  { 0x0034, 0x0034, 0x0022, 0x0022},  //   52; Use Count =     2
  { 0x0036, 0x0036, 0x003d, 0x003d},  //   53; Use Count =     2
  { 0x0037, 0x0037, 0x003a, 0x003a},  //   54; Use Count =     2
  { 0x0038, 0x0038, 0x002f, 0x002f},  //   55; Use Count =     2
  { 0x0039, 0x0039, 0x005f, 0x005f},  //   56; Use Count =     1
  { 0x044c, 0x042c, 0x042c, 0x044c},  //   57; Use Count =    11
  { 0x0444, 0x0424, 0x0424, 0x0444},  //   58; Use Count =    17
  { 0x044a, 0x042a, 0x042a, 0x044a},  //   59; Use Count =    11
  { 0x0430, 0x0410, 0x0410, 0x0430},  //   60; Use Count =    17
  { 0x0435, 0x0415, 0x0415, 0x0435},  //   61; Use Count =    17
  { 0x043e, 0x041e, 0x041e, 0x043e},  //   62; Use Count =    17
  { 0x0436, 0x0416, 0x0416, 0x0436},  //   63; Use Count =    17
  { 0x0433, 0x0413, 0x0413, 0x0433},  //   64; Use Count =    17
  { 0x0441, 0x0421, 0x0421, 0x0441},  //   65; Use Count =    17
  { 0x0442, 0x0422, 0x0422, 0x0442},  //   66; Use Count =    17
  { 0x043d, 0x041d, 0x041d, 0x043d},  //   67; Use Count =    17
  { 0x0432, 0x0412, 0x0412, 0x0432},  //   68; Use Count =    17
  { 0x043f, 0x041f, 0x041f, 0x043f},  //   69; Use Count =    17
  { 0x0445, 0x0425, 0x0425, 0x0445},  //   70; Use Count =    17
  { 0x0434, 0x0414, 0x0414, 0x0434},  //   71; Use Count =    17
  { 0x0437, 0x0417, 0x0417, 0x0437},  //   72; Use Count =    17
  { 0x043b, 0x041b, 0x041b, 0x043b},  //   73; Use Count =    17
  { 0x0438, 0x0418, 0x0418, 0x0438},  //   74; Use Count =    16
  { 0x044f, 0x042f, 0x042f, 0x044f},  //   75; Use Count =    14
  { 0x0448, 0x0428, 0x0428, 0x0448},  //   76; Use Count =    17
  { 0x043a, 0x041a, 0x041a, 0x043a},  //   77; Use Count =    17
  { 0x044d, 0x042d, 0x042d, 0x044d},  //   78; Use Count =    11
  { 0x0443, 0x0423, 0x0423, 0x0443},  //   79; Use Count =    17
  { 0x0439, 0x0419, 0x0419, 0x0439},  //   80; Use Count =    14
  { 0x0449, 0x0429, 0x0429, 0x0449},  //   81; Use Count =    11
  { 0x044e, 0x042e, 0x042e, 0x044e},  //   82; Use Count =    15
  { 0x043c, 0x041c, 0x041c, 0x043c},  //   83; Use Count =    17
  { 0x002c, 0x002c, 0x044b, 0x044b},  //   84; Use Count =     1
  { 0x002d, 0x002d, 0x0406, 0x0406},  //   85; Use Count =     1
  { 0x002e, 0x002e, 0x0056, 0x0056},  //   86; Use Count =     1
  { 0x0431, 0x0411, 0x0411, 0x0431},  //   87; Use Count =    17
  { 0x0060, 0x0060, 0x007e, 0x007e},  //   88; Use Count =    35
  { 0x0446, 0x0426, 0x0426, 0x0446},  //   89; Use Count =    15
  { 0x0028, 0x0028, 0x0029, 0x0029},  //   90; Use Count =     5
  { 0x003b, 0x003b, 0x00a7, 0x00a7},  //   91; Use Count =     2
  { 0x0447, 0x0427, 0x0427, 0x0447},  //   92; Use Count =    17
  { 0x0440, 0x0420, 0x0420, 0x0440},  //   93; Use Count =    17
  { 0x00e9, 0x00c9, 0x0030, 0x0030},  //   94; Use Count =     2
  { 0x02dd, 0x02dd, 0x0000, 0x0000},  //   95; Use Count =    13
  { 0x002b, 0x002b, 0x0031, 0x0031},  //   96; Use Count =     4
  { 0x007e, 0x007e, 0x0000, 0x0000},  //   97; Use Count =    39
  { 0x011b, 0x011a, 0x0032, 0x0032},  //   98; Use Count =     2
  { 0x02c7, 0x02c7, 0x0000, 0x0000},  //   99; Use Count =    13
  { 0x0161, 0x0160, 0x0033, 0x0033},  //  100; Use Count =     2
  { 0x005e, 0x005e, 0x0000, 0x0000},  //  101; Use Count =    27
  { 0x010d, 0x010c, 0x0034, 0x0034},  //  102; Use Count =     2
  { 0x02d8, 0x02d8, 0x0000, 0x0000},  //  103; Use Count =    13
  { 0x0159, 0x0158, 0x0035, 0x0035},  //  104; Use Count =     2
  { 0x00b0, 0x00b0, 0x0000, 0x0000},  //  105; Use Count =    27
  { 0x017e, 0x017d, 0x0036, 0x0036},  //  106; Use Count =     2
  { 0x02db, 0x02db, 0x0000, 0x0000},  //  107; Use Count =    13
  { 0x00fd, 0x00dd, 0x0037, 0x0037},  //  108; Use Count =     2
  { 0x0060, 0x0060, 0x0000, 0x0000},  //  109; Use Count =    21
  { 0x00e1, 0x00c1, 0x0038, 0x0038},  //  110; Use Count =     2
  { 0x02d9, 0x02d9, 0x0000, 0x0000},  //  111; Use Count =    11
  { 0x00ed, 0x00cd, 0x0039, 0x0039},  //  112; Use Count =     2
  { 0x00b4, 0x00b4, 0x0000, 0x0000},  //  113; Use Count =    23
  { 0x0061, 0x0041, 0x0041, 0x0061},  //  114; Use Count =    79
  { 0x0062, 0x0042, 0x0042, 0x0062},  //  115; Use Count =    79
  { 0x007b, 0x007b, 0x0000, 0x0000},  //  116; Use Count =    49
  { 0x0063, 0x0043, 0x0043, 0x0063},  //  117; Use Count =    78
  { 0x0026, 0x0026, 0x0000, 0x0000},  //  118; Use Count =     9
  { 0x0064, 0x0044, 0x0044, 0x0064},  //  119; Use Count =    79
  { 0x0110, 0x0110, 0x0000, 0x0000},  //  120; Use Count =     8
  { 0x0065, 0x0045, 0x0045, 0x0065},  //  121; Use Count =    79
  { 0x20ac, 0x20ac, 0x0000, 0x0000},  //  122; Use Count =    88
  { 0x0066, 0x0046, 0x0046, 0x0066},  //  123; Use Count =    79
  { 0x005b, 0x005b, 0x0000, 0x0000},  //  124; Use Count =    47
  { 0x0067, 0x0047, 0x0047, 0x0067},  //  125; Use Count =    79
  { 0x005d, 0x005d, 0x0000, 0x0000},  //  126; Use Count =    44
  { 0x0068, 0x0048, 0x0048, 0x0068},  //  127; Use Count =    79
  { 0x0069, 0x0049, 0x0049, 0x0069},  //  128; Use Count =    76
  { 0x006a, 0x004a, 0x004a, 0x006a},  //  129; Use Count =    79
  { 0x006b, 0x004b, 0x004b, 0x006b},  //  130; Use Count =    79
  { 0x0142, 0x0142, 0x0000, 0x0000},  //  131; Use Count =    10
  { 0x006c, 0x004c, 0x004c, 0x006c},  //  132; Use Count =    79
  { 0x0141, 0x0141, 0x0000, 0x0000},  //  133; Use Count =    10
  { 0x006d, 0x004d, 0x004d, 0x006d},  //  134; Use Count =    79
  { 0x006e, 0x004e, 0x004e, 0x006e},  //  135; Use Count =    79
  { 0x007d, 0x007d, 0x0000, 0x0000},  //  136; Use Count =    46
  { 0x006f, 0x004f, 0x004f, 0x006f},  //  137; Use Count =    79
  { 0x0070, 0x0050, 0x0050, 0x0070},  //  138; Use Count =    79
  { 0x0071, 0x0051, 0x0051, 0x0071},  //  139; Use Count =    77
  { 0x005c, 0x005c, 0x0000, 0x0000},  //  140; Use Count =    41
  { 0x0072, 0x0052, 0x0052, 0x0072},  //  141; Use Count =    79
  { 0x0073, 0x0053, 0x0053, 0x0073},  //  142; Use Count =    79
  { 0x0111, 0x0111, 0x0000, 0x0000},  //  143; Use Count =     8
  { 0x0074, 0x0054, 0x0054, 0x0074},  //  144; Use Count =    79
  { 0x0075, 0x0055, 0x0055, 0x0075},  //  145; Use Count =    79
  { 0x0076, 0x0056, 0x0056, 0x0076},  //  146; Use Count =    78
  { 0x0040, 0x0040, 0x0000, 0x0000},  //  147; Use Count =    47
  { 0x0077, 0x0057, 0x0057, 0x0077},  //  148; Use Count =    77
  { 0x007c, 0x007c, 0x0000, 0x0000},  //  149; Use Count =    38
  { 0x0078, 0x0058, 0x0058, 0x0078},  //  150; Use Count =    77
  { 0x0023, 0x0023, 0x0000, 0x0000},  //  151; Use Count =    22
  { 0x0079, 0x0059, 0x0059, 0x0079},  //  152; Use Count =    79
  { 0x007a, 0x005a, 0x005a, 0x007a},  //  153; Use Count =    79
  { 0x016f, 0x016e, 0x0022, 0x0022},  //  154; Use Count =     2
  { 0x0024, 0x0024, 0x0000, 0x0000},  //  155; Use Count =    24
  { 0x003d, 0x003d, 0x0025, 0x0025},  //  156; Use Count =     6
  { 0x00a8, 0x00a8, 0x0000, 0x0000},  //  157; Use Count =    15
  { 0x002c, 0x002c, 0x003f, 0x003f},  //  158; Use Count =     6
  { 0x003c, 0x003c, 0x0000, 0x0000},  //  159; Use Count =    24
  { 0x002a, 0x002a, 0x0000, 0x0000},  //  160; Use Count =     8
  { 0x002e, 0x002e, 0x003a, 0x003a},  //  161; Use Count =    45
  { 0x003e, 0x003e, 0x0000, 0x0000},  //  162; Use Count =    24
  { 0x00b4, 0x00b4, 0x02c7, 0x02c7},  //  163; Use Count =     5
  { 0x00b8, 0x00b8, 0x0000, 0x0000},  //  164; Use Count =    12
  { 0x003b, 0x003b, 0x00b0, 0x00b0},  //  165; Use Count =     5
  { 0x00fa, 0x00da, 0x002f, 0x002f},  //  166; Use Count =     2
  { 0x00f7, 0x00f7, 0x0000, 0x0000},  //  167; Use Count =    12
  { 0x00a8, 0x00a8, 0x0027, 0x0027},  //  168; Use Count =     2
  { 0x00a4, 0x00a4, 0x0000, 0x0000},  //  169; Use Count =    17
  { 0x0029, 0x0029, 0x0028, 0x0028},  //  170; Use Count =     5
  { 0x00d7, 0x00d7, 0x0000, 0x0000},  //  171; Use Count =    12
  { 0x00a7, 0x00a7, 0x0021, 0x0021},  //  172; Use Count =     5
  { 0x00df, 0x00df, 0x0000, 0x0000},  //  173; Use Count =    15
  { 0x0030, 0x0030, 0x003d, 0x003d},  //  174; Use Count =    33
  { 0x0032, 0x0032, 0x0022, 0x0022},  //  175; Use Count =    53
  { 0x00a3, 0x00a3, 0x0000, 0x0000},  //  176; Use Count =    21
  { 0x0034, 0x0034, 0x00a4, 0x00a4},  //  177; Use Count =    13
  { 0x0036, 0x0036, 0x0026, 0x0026},  //  178; Use Count =    33
  { 0x0037, 0x0037, 0x002f, 0x002f},  //  179; Use Count =    32
  { 0x0038, 0x0038, 0x0028, 0x0028},  //  180; Use Count =    36
  { 0x00b5, 0x00b5, 0x0000, 0x0000},  //  181; Use Count =    20
  { 0x00a8, 0x00a8, 0x005e, 0x005e},  //  182; Use Count =    11
  { 0x002b, 0x002b, 0x003f, 0x003f},  //  183; Use Count =    13
  { 0x002c, 0x002c, 0x003b, 0x003b},  //  184; Use Count =    39
  { 0x0027, 0x0027, 0x002a, 0x002a},  //  185; Use Count =    13
  { 0x00e6, 0x00c6, 0x00c6, 0x00e6},  //  186; Use Count =    16
  { 0x00b4, 0x00b4, 0x0060, 0x0060},  //  187; Use Count =    17
  { 0x00bd, 0x00bd, 0x00a7, 0x00a7},  //  188; Use Count =     2
  { 0x00e5, 0x00c5, 0x00c5, 0x00e5},  //  189; Use Count =    14
  { 0x00f8, 0x00d8, 0x00d8, 0x00f8},  //  190; Use Count =    14
  { 0x003c, 0x003c, 0x003e, 0x003e},  //  191; Use Count =    45
  { 0x0030, 0x003d, 0x003d, 0x0030},  //  192; Use Count =     3
  { 0x0031, 0x0021, 0x0021, 0x0031},  //  193; Use Count =     3
  { 0x0032, 0x0022, 0x0022, 0x0032},  //  194; Use Count =     3
  { 0x00b2, 0x00b2, 0x0000, 0x0000},  //  195; Use Count =    15
  { 0x0033, 0x00a7, 0x00a7, 0x0033},  //  196; Use Count =     3
  { 0x00b3, 0x00b3, 0x0000, 0x0000},  //  197; Use Count =    12
  { 0x0034, 0x0024, 0x0024, 0x0034},  //  198; Use Count =     3
  { 0x0035, 0x0025, 0x0025, 0x0035},  //  199; Use Count =     3
  { 0x0036, 0x0026, 0x0026, 0x0036},  //  200; Use Count =     3
  { 0x0037, 0x002f, 0x002f, 0x0037},  //  201; Use Count =     3
  { 0x0038, 0x0028, 0x0028, 0x0038},  //  202; Use Count =     3
  { 0x0039, 0x0029, 0x0029, 0x0039},  //  203; Use Count =     3
  { 0x00fc, 0x00dc, 0x00dc, 0x00fc},  //  204; Use Count =    15
  { 0x002b, 0x002a, 0x002a, 0x002b},  //  205; Use Count =     3
  { 0x002c, 0x003b, 0x003b, 0x002c},  //  206; Use Count =     3
  { 0x002e, 0x003a, 0x003a, 0x002e},  //  207; Use Count =     3
  { 0x0023, 0x0027, 0x0027, 0x0023},  //  208; Use Count =     2
  { 0x00f6, 0x00d6, 0x00d6, 0x00f6},  //  209; Use Count =    23
  { 0x00df, 0x003f, 0x003f, 0x00df},  //  210; Use Count =     3
  { 0x005e, 0x005e, 0x00b0, 0x00b0},  //  211; Use Count =     4
  { 0x00e4, 0x00c4, 0x00c4, 0x00e4},  //  212; Use Count =    17
  { 0x0030, 0x0030, 0x0029, 0x0029},  //  213; Use Count =    51
  { 0x00a7, 0x00a7, 0x0000, 0x0000},  //  214; Use Count =    21
  { 0x00b6, 0x00b6, 0x0000, 0x0000},  //  215; Use Count =     9
  { 0x0039, 0x0039, 0x0028, 0x0028},  //  216; Use Count =    51
  { 0x00a6, 0x00a6, 0x0000, 0x0000},  //  217; Use Count =    11
  { 0x03b1, 0x0391, 0x0391, 0x03b1},  //  218; Use Count =     4
  { 0x03b2, 0x0392, 0x0392, 0x03b2},  //  219; Use Count =     4
  { 0x03c8, 0x03a8, 0x03a8, 0x03c8},  //  220; Use Count =     4
  { 0x00a9, 0x00a9, 0x0000, 0x0000},  //  221; Use Count =     6
  { 0x03b4, 0x0394, 0x0394, 0x03b4},  //  222; Use Count =     4
  { 0x03b5, 0x0395, 0x0395, 0x03b5},  //  223; Use Count =     4
  { 0x03c6, 0x03a6, 0x03a6, 0x03c6},  //  224; Use Count =     4
  { 0x03b3, 0x0393, 0x0393, 0x03b3},  //  225; Use Count =     4
  { 0x03b7, 0x0397, 0x0397, 0x03b7},  //  226; Use Count =     4
  { 0x03b9, 0x0399, 0x0399, 0x03b9},  //  227; Use Count =     4
  { 0x03be, 0x039e, 0x039e, 0x03be},  //  228; Use Count =     4
  { 0x03ba, 0x039a, 0x039a, 0x03ba},  //  229; Use Count =     4
  { 0x03bb, 0x039b, 0x039b, 0x03bb},  //  230; Use Count =     4
  { 0x03bc, 0x039c, 0x039c, 0x03bc},  //  231; Use Count =     4
  { 0x03bd, 0x039d, 0x039d, 0x03bd},  //  232; Use Count =     4
  { 0x03bf, 0x039f, 0x039f, 0x03bf},  //  233; Use Count =     4
  { 0x03c0, 0x03a0, 0x03a0, 0x03c0},  //  234; Use Count =     4
  { 0x003b, 0x003b, 0x003a, 0x003a},  //  235; Use Count =    36
  { 0x03c1, 0x03a1, 0x03a1, 0x03c1},  //  236; Use Count =     4
  { 0x00ae, 0x00ae, 0x0000, 0x0000},  //  237; Use Count =     8
  { 0x03c3, 0x03a3, 0x03a3, 0x03c3},  //  238; Use Count =     4
  { 0x03c4, 0x03a4, 0x03a4, 0x03c4},  //  239; Use Count =     4
  { 0x03b8, 0x0398, 0x0398, 0x03b8},  //  240; Use Count =     4
  { 0x03c9, 0x03a9, 0x03a9, 0x03c9},  //  241; Use Count =     4
  { 0x03c2, 0x03c2, 0x0385, 0x0385},  //  242; Use Count =     2
  { 0x03c7, 0x03a7, 0x03a7, 0x03c7},  //  243; Use Count =     4
  { 0x03c5, 0x03a5, 0x03a5, 0x03c5},  //  244; Use Count =     4
  { 0x00a5, 0x00a5, 0x0000, 0x0000},  //  245; Use Count =     9
  { 0x03b6, 0x0396, 0x0396, 0x03b6},  //  246; Use Count =     4
  { 0x0384, 0x0384, 0x00a8, 0x00a8},  //  247; Use Count =     5
  { 0x0385, 0x0385, 0x0000, 0x0000},  //  248; Use Count =     7
  { 0x00bd, 0x00bd, 0x0000, 0x0000},  //  249; Use Count =    13
  { 0x002c, 0x002c, 0x003c, 0x003c},  //  250; Use Count =    33
  { 0x00b1, 0x00b1, 0x0000, 0x0000},  //  251; Use Count =     6
  { 0x002e, 0x002e, 0x003e, 0x003e},  //  252; Use Count =    34
  { 0x002f, 0x002f, 0x003f, 0x003f},  //  253; Use Count =    38
  { 0x005b, 0x005b, 0x007b, 0x007b},  //  254; Use Count =    39
  { 0x00ab, 0x00ab, 0x0000, 0x0000},  //  255; Use Count =    16
  { 0x00ac, 0x00ac, 0x0000, 0x0000},  //  256; Use Count =    14
  { 0x005d, 0x005d, 0x007d, 0x007d},  //  257; Use Count =    39
  { 0x00bb, 0x00bb, 0x0000, 0x0000},  //  258; Use Count =    14
  { 0x0027, 0x0027, 0x0022, 0x0022},  //  259; Use Count =    31
  { 0x0033, 0x0033, 0x00b7, 0x00b7},  //  260; Use Count =     1
  { 0x0060, 0x0060, 0x005e, 0x005e},  //  261; Use Count =     1
  { 0x002b, 0x002b, 0x002a, 0x002a},  //  262; Use Count =    17
  { 0x00e7, 0x00c7, 0x00c7, 0x00e7},  //  263; Use Count =    16
  { 0x00f1, 0x00d1, 0x00d1, 0x00f1},  //  264; Use Count =     7
  { 0x0027, 0x0027, 0x003f, 0x003f},  //  265; Use Count =    16
  { 0x00ba, 0x00ba, 0x00aa, 0x00aa},  //  266; Use Count =     2
  { 0x00a1, 0x00a1, 0x00bf, 0x00bf},  //  267; Use Count =     1
  { 0x00b4, 0x00b4, 0x00a8, 0x00a8},  //  268; Use Count =     9
  { 0x00a7, 0x00a7, 0x00bd, 0x00bd},  //  269; Use Count =     5
  { 0x00e0, 0x0030, 0x0030, 0x00e0},  //  270; Use Count =     5
  { 0x0026, 0x0031, 0x0031, 0x0026},  //  271; Use Count =     5
  { 0x00e9, 0x0032, 0x0032, 0x00e9},  //  272; Use Count =     5
  { 0x0022, 0x0033, 0x0033, 0x0022},  //  273; Use Count =     5
  { 0x0027, 0x0034, 0x0034, 0x0027},  //  274; Use Count =     5
  { 0x0028, 0x0035, 0x0035, 0x0028},  //  275; Use Count =     5
  { 0x002d, 0x0036, 0x0036, 0x002d},  //  276; Use Count =     2
  { 0x00e8, 0x0037, 0x0037, 0x00e8},  //  277; Use Count =     4
  { 0x005f, 0x0038, 0x0038, 0x005f},  //  278; Use Count =     2
  { 0x00e7, 0x0039, 0x0039, 0x00e7},  //  279; Use Count =     4
  { 0x0024, 0x00a3, 0x00a3, 0x0024},  //  280; Use Count =     1
  { 0x003d, 0x002b, 0x002b, 0x003d},  //  281; Use Count =     6
  { 0x002c, 0x003f, 0x003f, 0x002c},  //  282; Use Count =     5
  { 0x003b, 0x002e, 0x002e, 0x003b},  //  283; Use Count =     5
  { 0x003a, 0x002f, 0x002f, 0x003a},  //  284; Use Count =     5
  { 0x00f9, 0x0025, 0x0025, 0x00f9},  //  285; Use Count =     4
  { 0x0029, 0x00b0, 0x00b0, 0x0029},  //  286; Use Count =     4
  { 0x002a, 0x00b5, 0x00b5, 0x002a},  //  287; Use Count =     1
  { 0x005e, 0x00a8, 0x00a8, 0x005e},  //  288; Use Count =     4
  { 0x0021, 0x00a7, 0x00a7, 0x0021},  //  289; Use Count =     1
  { 0x0030, 0x0030, 0x0028, 0x05c1},  //  290; Use Count =     1
  { 0x0031, 0x0031, 0x0021, 0x05b1},  //  291; Use Count =     1
  { 0x0032, 0x0032, 0x0040, 0x05b2},  //  292; Use Count =     1
  { 0x0033, 0x0033, 0x0023, 0x05b3},  //  293; Use Count =     1
  { 0x0034, 0x0034, 0x0024, 0x05b4},  //  294; Use Count =     1
  { 0x20aa, 0x20aa, 0x0000, 0x0000},  //  295; Use Count =     1
  { 0x0035, 0x0035, 0x0025, 0x05b5},  //  296; Use Count =     1
  { 0x0036, 0x0036, 0x005e, 0x05b6},  //  297; Use Count =     1
  { 0x0037, 0x0037, 0x0026, 0x05b7},  //  298; Use Count =     1
  { 0x0038, 0x0038, 0x002a, 0x05b8},  //  299; Use Count =     1
  { 0x0039, 0x0039, 0x0029, 0x05c2},  //  300; Use Count =     1
  { 0x05e9, 0x0041, 0x0041, 0x05e9},  //  301; Use Count =     1
  { 0x05e0, 0x0042, 0x0042, 0x05e0},  //  302; Use Count =     1
  { 0x05d1, 0x0043, 0x0043, 0x05d1},  //  303; Use Count =     1
  { 0x05d2, 0x0044, 0x0044, 0x05d2},  //  304; Use Count =     1
  { 0x05e7, 0x0045, 0x0045, 0x05e7},  //  305; Use Count =     1
  { 0x05db, 0x0046, 0x0046, 0x05db},  //  306; Use Count =     1
  { 0x05e2, 0x0047, 0x0047, 0x05e2},  //  307; Use Count =     1
  { 0x05d9, 0x0048, 0x0048, 0x05d9},  //  308; Use Count =     1
  { 0x05f2, 0x05f2, 0x0000, 0x0000},  //  309; Use Count =     1
  { 0x05df, 0x0049, 0x0049, 0x05df},  //  310; Use Count =     1
  { 0x05d7, 0x004a, 0x004a, 0x05d7},  //  311; Use Count =     1
  { 0x05f1, 0x05f1, 0x0000, 0x0000},  //  312; Use Count =     1
  { 0x05dc, 0x004b, 0x004b, 0x05dc},  //  313; Use Count =     1
  { 0x05da, 0x004c, 0x004c, 0x05da},  //  314; Use Count =     1
  { 0x05e6, 0x004d, 0x004d, 0x05e6},  //  315; Use Count =     1
  { 0x05de, 0x004e, 0x004e, 0x05de},  //  316; Use Count =     1
  { 0x05dd, 0x004f, 0x004f, 0x05dd},  //  317; Use Count =     1
  { 0x05e4, 0x0050, 0x0050, 0x05e4},  //  318; Use Count =     1
  { 0x002f, 0x0051, 0x0051, 0x002f},  //  319; Use Count =     1
  { 0x05e8, 0x0052, 0x0052, 0x05e8},  //  320; Use Count =     1
  { 0x05d3, 0x0053, 0x0053, 0x05d3},  //  321; Use Count =     1
  { 0x05d0, 0x0054, 0x0054, 0x05d0},  //  322; Use Count =     1
  { 0x05d5, 0x0055, 0x0055, 0x05d5},  //  323; Use Count =     1
  { 0x05f0, 0x05f0, 0x0000, 0x0000},  //  324; Use Count =     1
  { 0x05d4, 0x0056, 0x0056, 0x05d4},  //  325; Use Count =     1
  { 0x0027, 0x0057, 0x0057, 0x0027},  //  326; Use Count =     1
  { 0x05e1, 0x0058, 0x0058, 0x05e1},  //  327; Use Count =     1
  { 0x05d8, 0x0059, 0x0059, 0x05d8},  //  328; Use Count =     1
  { 0x05d6, 0x005a, 0x005a, 0x05d6},  //  329; Use Count =     1
  { 0x05e3, 0x003b, 0x003a, 0x05e3},  //  330; Use Count =     1
  { 0x003d, 0x003d, 0x002b, 0x05bc},  //  331; Use Count =     1
  { 0x05ea, 0x002c, 0x003e, 0x05ea},  //  332; Use Count =     1
  { 0x002d, 0x002d, 0x005f, 0x05b9},  //  333; Use Count =     1
  { 0x05bf, 0x05bf, 0x0000, 0x0000},  //  334; Use Count =     1
  { 0x05e5, 0x002e, 0x003c, 0x05e5},  //  335; Use Count =     1
  { 0x002e, 0x002f, 0x003f, 0x002e},  //  336; Use Count =     1
  { 0x003b, 0x003b, 0x007e, 0x05b0},  //  337; Use Count =     1
  { 0x005d, 0x005b, 0x007d, 0x005d},  //  338; Use Count =     1
  { 0x005c, 0x005c, 0x007c, 0x05bb},  //  339; Use Count =     1
  { 0x005b, 0x005d, 0x007b, 0x005b},  //  340; Use Count =     1
  { 0x002c, 0x0027, 0x0022, 0x002c},  //  341; Use Count =     1
  { 0x0030, 0x0030, 0x00a7, 0x00a7},  //  342; Use Count =     1
  { 0x0031, 0x0031, 0x0027, 0x0027},  //  343; Use Count =     2
  { 0x0034, 0x0034, 0x0021, 0x0021},  //  344; Use Count =     2
  { 0x0036, 0x0036, 0x002f, 0x002f},  //  345; Use Count =     3
  { 0x0037, 0x0037, 0x003d, 0x003d},  //  346; Use Count =     2
  { 0x00e4, 0x00e4, 0x0000, 0x0000},  //  347; Use Count =     2
  { 0x00c4, 0x00c4, 0x0000, 0x0000},  //  348; Use Count =     2
  { 0x00cd, 0x00cd, 0x0000, 0x0000},  //  349; Use Count =     2
  { 0x00ed, 0x00ed, 0x0000, 0x0000},  //  350; Use Count =     3
  { 0x00e9, 0x00c9, 0x00c9, 0x00e9},  //  351; Use Count =    13
  { 0x00f3, 0x00d3, 0x00d3, 0x00f3},  //  352; Use Count =    12
  { 0x003b, 0x003b, 0x0000, 0x0000},  //  353; Use Count =     2
  { 0x0151, 0x0150, 0x0150, 0x0151},  //  354; Use Count =     2
  { 0x0171, 0x0170, 0x0170, 0x0171},  //  355; Use Count =     2
  { 0x00fa, 0x00da, 0x00da, 0x00fa},  //  356; Use Count =    10
  { 0x00e1, 0x00c1, 0x00c1, 0x00e1},  //  357; Use Count =    15
  { 0x00ed, 0x00cd, 0x00cd, 0x00ed},  //  358; Use Count =    11
  { 0x00fe, 0x00de, 0x00de, 0x00fe},  //  359; Use Count =     6
  { 0x00b0, 0x00b0, 0x00a8, 0x00a8},  //  360; Use Count =     1
  { 0x00f0, 0x00d0, 0x00d0, 0x00f0},  //  361; Use Count =     7
  { 0x00b4, 0x00b4, 0x0027, 0x0027},  //  362; Use Count =     1
  { 0x0033, 0x0033, 0x00a3, 0x00a3},  //  363; Use Count =     8
  { 0x00e8, 0x00e8, 0x00e9, 0x00e9},  //  364; Use Count =     2
  { 0x00f9, 0x00f9, 0x00a7, 0x00a7},  //  365; Use Count =     2
  { 0x00f2, 0x00f2, 0x00e7, 0x00e7},  //  366; Use Count =     2
  { 0x00ec, 0x00ec, 0x005e, 0x005e},  //  367; Use Count =     2
  { 0x00e0, 0x00e0, 0x00b0, 0x00b0},  //  368; Use Count =     2
  { 0x0030, 0x0030, 0x0027, 0x0027},  //  369; Use Count =     1
  { 0x00b9, 0x00b9, 0x0000, 0x0000},  //  370; Use Count =     2
  { 0x00bc, 0x00bc, 0x0000, 0x0000},  //  371; Use Count =     7
  { 0x00be, 0x00be, 0x0000, 0x0000},  //  372; Use Count =     8
  { 0x0037, 0x0037, 0x005f, 0x005f},  //  373; Use Count =     1
  { 0x00a2, 0x00a2, 0x0000, 0x0000},  //  374; Use Count =     5
  { 0x002a, 0x002a, 0x007c, 0x007c},  //  375; Use Count =     1
  { 0x002b, 0x002b, 0x00b1, 0x00b1},  //  376; Use Count =     1
  { 0x002d, 0x002d, 0x003d, 0x003d},  //  377; Use Count =     1
  { 0x00b7, 0x00b7, 0x0000, 0x0000},  //  378; Use Count =     3
  { 0x00b0, 0x00b0, 0x007e, 0x007e},  //  379; Use Count =     1
  { 0x0040, 0x0040, 0x00a7, 0x00a7},  //  380; Use Count =     1
  { 0x005d, 0x005d, 0x005b, 0x005b},  //  381; Use Count =     4
  { 0x005c, 0x005c, 0x0060, 0x0060},  //  382; Use Count =     3
  { 0x007c, 0x007c, 0x00a7, 0x00a7},  //  383; Use Count =     3
  { 0x0105, 0x0104, 0x0104, 0x0105},  //  384; Use Count =     4
  { 0x0107, 0x0106, 0x0106, 0x0107},  //  385; Use Count =     4
  { 0x0119, 0x0118, 0x0118, 0x0119},  //  386; Use Count =     4
  { 0x0142, 0x0141, 0x0141, 0x0142},  //  387; Use Count =     5
  { 0x0144, 0x0143, 0x0143, 0x0144},  //  388; Use Count =     1
  { 0x015b, 0x015a, 0x015a, 0x015b},  //  389; Use Count =     1
  { 0x017a, 0x0179, 0x0179, 0x017a},  //  390; Use Count =     1
  { 0x017c, 0x017b, 0x017b, 0x017c},  //  391; Use Count =     1
  { 0x0036, 0x0036, 0x00a8, 0x00a8},  //  392; Use Count =     1
  { 0x20a2, 0x20a2, 0x0000, 0x0000},  //  393; Use Count =     1
  { 0x002f, 0x002f, 0x0000, 0x0000},  //  394; Use Count =     2
  { 0x003f, 0x003f, 0x0000, 0x0000},  //  395; Use Count =     1
  { 0x002e, 0x002e, 0x002e, 0x002e},  //  396; Use Count =     3
  { 0x00ba, 0x00ba, 0x0000, 0x0000},  //  397; Use Count =     1
  { 0x00aa, 0x00aa, 0x0000, 0x0000},  //  398; Use Count =     2
  { 0x007e, 0x007e, 0x005e, 0x005e},  //  399; Use Count =     2
  { 0x015f, 0x015e, 0x015e, 0x015f},  //  400; Use Count =     5
  { 0x0103, 0x0102, 0x0102, 0x0103},  //  401; Use Count =     4
  { 0x00e2, 0x00c2, 0x00c2, 0x00e2},  //  402; Use Count =     9
  { 0x00ee, 0x00ce, 0x00ce, 0x00ee},  //  403; Use Count =     3
  { 0x0163, 0x0162, 0x0162, 0x0163},  //  404; Use Count =     1
  { 0x0033, 0x0033, 0x2116, 0x2116},  //  405; Use Count =    10
  { 0x0034, 0x0034, 0x003b, 0x003b},  //  406; Use Count =    10
  { 0x0036, 0x0036, 0x003a, 0x003a},  //  407; Use Count =    10
  { 0x0037, 0x0037, 0x003f, 0x003f},  //  408; Use Count =    10
  { 0x044b, 0x042b, 0x042b, 0x044b},  //  409; Use Count =     8
  { 0x002e, 0x002e, 0x002c, 0x002c},  //  410; Use Count =    10
  { 0x0451, 0x0401, 0x0401, 0x0451},  //  411; Use Count =     9
  { 0x005c, 0x005c, 0x002f, 0x002f},  //  412; Use Count =    16
  { 0x010d, 0x010c, 0x010c, 0x010d},  //  413; Use Count =    13
  { 0x00b8, 0x00b8, 0x00a8, 0x00a8},  //  414; Use Count =     3
  { 0x0161, 0x0160, 0x0160, 0x0161},  //  415; Use Count =    16
  { 0x017e, 0x017d, 0x017d, 0x017e},  //  416; Use Count =    15
  { 0x0111, 0x0110, 0x0110, 0x0111},  //  417; Use Count =    11
  { 0x00e9, 0x00e9, 0x0030, 0x0030},  //  418; Use Count =     2
  { 0x013e, 0x013e, 0x0032, 0x0032},  //  419; Use Count =     2
  { 0x0161, 0x0161, 0x0033, 0x0033},  //  420; Use Count =     2
  { 0x010d, 0x010d, 0x0034, 0x0034},  //  421; Use Count =     2
  { 0x0165, 0x0165, 0x0035, 0x0035},  //  422; Use Count =     2
  { 0x017e, 0x017e, 0x0036, 0x0036},  //  423; Use Count =     2
  { 0x00fd, 0x00fd, 0x0037, 0x0037},  //  424; Use Count =     2
  { 0x00e1, 0x00e1, 0x0038, 0x0038},  //  425; Use Count =     2
  { 0x00ed, 0x00ed, 0x0039, 0x0039},  //  426; Use Count =     2
  { 0x0027, 0x0027, 0x0000, 0x0000},  //  427; Use Count =     5
  { 0x00f4, 0x00f4, 0x0022, 0x0022},  //  428; Use Count =     2
  { 0x00fa, 0x00fa, 0x002f, 0x002f},  //  429; Use Count =     3
  { 0x0148, 0x0148, 0x0029, 0x0029},  //  430; Use Count =     2
  { 0x00e4, 0x00e4, 0x0028, 0x0028},  //  431; Use Count =     2
  { 0x0026, 0x0026, 0x002a, 0x002a},  //  432; Use Count =     2
  { 0x00eb, 0x00cb, 0x00cb, 0x00eb},  //  433; Use Count =     1
  { 0x0040, 0x0040, 0x0027, 0x0027},  //  434; Use Count =     1
  { 0x0e08, 0x0e57, 0x0e57, 0x0e08},  //  435; Use Count =     1
  { 0x0e45, 0x002b, 0x002b, 0x0e45},  //  436; Use Count =     1
  { 0x002f, 0x0e51, 0x0e51, 0x002f},  //  437; Use Count =     1
  { 0x002d, 0x0e52, 0x0e52, 0x002d},  //  438; Use Count =     1
  { 0x0e20, 0x0e53, 0x0e53, 0x0e20},  //  439; Use Count =     1
  { 0x0e16, 0x0e54, 0x0e54, 0x0e16},  //  440; Use Count =     1
  { 0x0e38, 0x0e39, 0x0e39, 0x0e38},  //  441; Use Count =     1
  { 0x0e36, 0x0e3f, 0x0e3f, 0x0e36},  //  442; Use Count =     1
  { 0x0e04, 0x0e55, 0x0e55, 0x0e04},  //  443; Use Count =     1
  { 0x0e15, 0x0e56, 0x0e56, 0x0e15},  //  444; Use Count =     1
  { 0x0e1f, 0x0e24, 0x0e24, 0x0e1f},  //  445; Use Count =     1
  { 0x0e34, 0x0e3a, 0x0e3a, 0x0e34},  //  446; Use Count =     1
  { 0x0e41, 0x0e09, 0x0e09, 0x0e41},  //  447; Use Count =     1
  { 0x0e01, 0x0e0f, 0x0e0f, 0x0e01},  //  448; Use Count =     1
  { 0x0e33, 0x0e0e, 0x0e0e, 0x0e33},  //  449; Use Count =     1
  { 0x0e14, 0x0e42, 0x0e42, 0x0e14},  //  450; Use Count =     1
  { 0x0e40, 0x0e0c, 0x0e0c, 0x0e40},  //  451; Use Count =     1
  { 0x0e49, 0x0e47, 0x0e47, 0x0e49},  //  452; Use Count =     1
  { 0x0e23, 0x0e13, 0x0e13, 0x0e23},  //  453; Use Count =     1
  { 0x0e48, 0x0e4b, 0x0e4b, 0x0e48},  //  454; Use Count =     1
  { 0x0e32, 0x0e29, 0x0e29, 0x0e32},  //  455; Use Count =     1
  { 0x0e2a, 0x0e28, 0x0e28, 0x0e2a},  //  456; Use Count =     1
  { 0x0e17, 0x003f, 0x003f, 0x0e17},  //  457; Use Count =     1
  { 0x0e37, 0x0e4c, 0x0e4c, 0x0e37},  //  458; Use Count =     1
  { 0x0e19, 0x0e2f, 0x0e2f, 0x0e19},  //  459; Use Count =     1
  { 0x0e22, 0x0e0d, 0x0e0d, 0x0e22},  //  460; Use Count =     1
  { 0x0e46, 0x0e50, 0x0e50, 0x0e46},  //  461; Use Count =     1
  { 0x0e1e, 0x0e11, 0x0e11, 0x0e1e},  //  462; Use Count =     1
  { 0x0e2b, 0x0e06, 0x0e06, 0x0e2b},  //  463; Use Count =     1
  { 0x0e30, 0x0e18, 0x0e18, 0x0e30},  //  464; Use Count =     1
  { 0x0e35, 0x0e4a, 0x0e4a, 0x0e35},  //  465; Use Count =     1
  { 0x0e2d, 0x0e2e, 0x0e2e, 0x0e2d},  //  466; Use Count =     1
  { 0x0e44, 0x0022, 0x0022, 0x0e44},  //  467; Use Count =     1
  { 0x0e1b, 0x0029, 0x0029, 0x0e1b},  //  468; Use Count =     1
  { 0x0e31, 0x0e4d, 0x0e4d, 0x0e31},  //  469; Use Count =     1
  { 0x0e1c, 0x0028, 0x0028, 0x0e1c},  //  470; Use Count =     1
  { 0x0e27, 0x0e0b, 0x0e0b, 0x0e27},  //  471; Use Count =     1
  { 0x0e0a, 0x0e59, 0x0e59, 0x0e0a},  //  472; Use Count =     1
  { 0x0e21, 0x0e12, 0x0e12, 0x0e21},  //  473; Use Count =     1
  { 0x0e02, 0x0e58, 0x0e58, 0x0e02},  //  474; Use Count =     1
  { 0x0e43, 0x0e2c, 0x0e2c, 0x0e43},  //  475; Use Count =     1
  { 0x0e1d, 0x0e26, 0x0e26, 0x0e1d},  //  476; Use Count =     1
  { 0x005f, 0x0025, 0x0025, 0x005f},  //  477; Use Count =     1
  { 0x0e1a, 0x0e10, 0x0e10, 0x0e1a},  //  478; Use Count =     1
  { 0x0025, 0x0025, 0x0000, 0x0000},  //  479; Use Count =     3
  { 0x0e03, 0x0e05, 0x0e05, 0x0e03},  //  480; Use Count =     2
  { 0x002b, 0x002b, 0x0000, 0x0000},  //  481; Use Count =     2
  { 0x0e25, 0x002c, 0x002c, 0x0e25},  //  482; Use Count =     1
  { 0x0e51, 0x0e51, 0x0000, 0x0000},  //  483; Use Count =     1
  { 0x0e07, 0x002e, 0x002e, 0x0e07},  //  484; Use Count =     1
  { 0x0e52, 0x0e52, 0x0000, 0x0000},  //  485; Use Count =     1
  { 0x0032, 0x0032, 0x0027, 0x0027},  //  486; Use Count =     1
  { 0x0033, 0x0033, 0x005e, 0x005e},  //  487; Use Count =     2
  { 0x0034, 0x0034, 0x002b, 0x002b},  //  488; Use Count =     1
  { 0x0131, 0x0049, 0x0049, 0x0131},  //  489; Use Count =     3
  { 0x0069, 0x0130, 0x0130, 0x0069},  //  490; Use Count =     4
  { 0x0022, 0x0022, 0x00e9, 0x00e9},  //  491; Use Count =     1
  { 0x011f, 0x011e, 0x011e, 0x011f},  //  492; Use Count =     3
  { 0x002a, 0x002a, 0x003f, 0x003f},  //  493; Use Count =     1
  { 0x0035, 0x0035, 0x066a, 0x066a},  //  494; Use Count =     1
  { 0x0037, 0x0037, 0x06d6, 0x06d6},  //  495; Use Count =     1
  { 0x0038, 0x0038, 0x066d, 0x066d},  //  496; Use Count =     1
  { 0x0000, 0x0000, 0x06d9, 0x06d9},  //  497; Use Count =     1
  { 0x0645, 0x0645, 0x0698, 0x0698},  //  498; Use Count =     1
  { 0x0000, 0x0000, 0x06e2, 0x06e2},  //  499; Use Count =     1
  { 0x0634, 0x0634, 0x0624, 0x0624},  //  500; Use Count =     1
  { 0x06d2, 0x06d2, 0x06d3, 0x06d3},  //  501; Use Count =     1
  { 0x0631, 0x0631, 0x0691, 0x0691},  //  502; Use Count =     1
  { 0x06be, 0x06be, 0x0630, 0x0630},  //  503; Use Count =     1
  { 0x0000, 0x0000, 0x064d, 0x064d},  //  504; Use Count =     1
  { 0x0646, 0x0646, 0x06ba, 0x06ba},  //  505; Use Count =     1
  { 0x0644, 0x0644, 0x06c2, 0x06c2},  //  506; Use Count =     1
  { 0x06c1, 0x06c1, 0x0621, 0x0621},  //  507; Use Count =     1
  { 0x0000, 0x0000, 0x0623, 0x0623},  //  508; Use Count =     1
  { 0x0628, 0x0628, 0x0640, 0x0640},  //  509; Use Count =     1
  { 0x0627, 0x0627, 0x0622, 0x0622},  //  510; Use Count =     2
  { 0x0000, 0x0000, 0x0625, 0x0625},  //  511; Use Count =     1
  { 0x06a9, 0x06a9, 0x06af, 0x06af},  //  512; Use Count =     1
  { 0x06cc, 0x06cc, 0x064a, 0x064a},  //  513; Use Count =     1
  { 0x0639, 0x0639, 0x0000, 0x0000},  //  514; Use Count =     1
  { 0x063a, 0x063a, 0x0626, 0x0626},  //  515; Use Count =     1
  { 0x062c, 0x062c, 0x0686, 0x0686},  //  516; Use Count =     1
  { 0x0000, 0x0000, 0x064f, 0x064f},  //  517; Use Count =     1
  { 0x062d, 0x062d, 0x062e, 0x062e},  //  518; Use Count =     1
  { 0x0000, 0x0000, 0x0650, 0x0650},  //  519; Use Count =     1
  { 0x0637, 0x0637, 0x0638, 0x0638},  //  520; Use Count =     1
  { 0x062f, 0x062f, 0x0688, 0x0688},  //  521; Use Count =     1
  { 0x0000, 0x0000, 0x064c, 0x064c},  //  522; Use Count =     1
  { 0x0648, 0x0648, 0x0632, 0x0632},  //  523; Use Count =     1
  { 0x0679, 0x0679, 0x062b, 0x062b},  //  524; Use Count =     1
  { 0x062a, 0x062a, 0x06c3, 0x06c3},  //  525; Use Count =     1
  { 0x0633, 0x0633, 0x0000, 0x0000},  //  526; Use Count =     2
  { 0x0635, 0x0635, 0x0636, 0x0636},  //  527; Use Count =     1
  { 0x0000, 0x0000, 0x064b, 0x064b},  //  528; Use Count =     1
  { 0x0641, 0x0641, 0x0000, 0x0000},  //  529; Use Count =     1
  { 0x067e, 0x067e, 0x0651, 0x0651},  //  530; Use Count =     1
  { 0x0642, 0x0642, 0x0000, 0x0000},  //  531; Use Count =     1
  { 0x061b, 0x061b, 0x003a, 0x003a},  //  532; Use Count =     2
  { 0x060c, 0x060c, 0x003e, 0x003e},  //  533; Use Count =     2
  { 0x06d4, 0x06d4, 0x003c, 0x003c},  //  534; Use Count =     1
  { 0x002f, 0x002f, 0x061f, 0x061f},  //  535; Use Count =     2
  { 0x0000, 0x0000, 0xfef2, 0xfef2},  //  536; Use Count =     1
  { 0x0000, 0x0000, 0x064e, 0x064e},  //  537; Use Count =     1
  { 0x0000, 0x0000, 0x0652, 0x0652},  //  538; Use Count =     1
  { 0x0456, 0x0406, 0x0406, 0x0456},  //  539; Use Count =     4
  { 0x0491, 0x0490, 0x0490, 0x0491},  //  540; Use Count =     4
  { 0x0457, 0x0407, 0x0407, 0x0457},  //  541; Use Count =     2
  { 0x0454, 0x0404, 0x0404, 0x0454},  //  542; Use Count =     2
  { 0x045e, 0x040e, 0x040e, 0x045e},  //  543; Use Count =     2
  { 0x0027, 0x0027, 0x0027, 0x0027},  //  544; Use Count =     1
  { 0x007d, 0x007d, 0x007d, 0x007d},  //  545; Use Count =     2
  { 0x0040, 0x0040, 0x0040, 0x0040},  //  546; Use Count =     2
  { 0x00a3, 0x00a3, 0x00a3, 0x00a3},  //  547; Use Count =     1
  { 0x0024, 0x0024, 0x0024, 0x0024},  //  548; Use Count =     1
  { 0x007b, 0x007b, 0x007b, 0x007b},  //  549; Use Count =     2
  { 0x005b, 0x005b, 0x005b, 0x005b},  //  550; Use Count =     2
  { 0x005d, 0x005d, 0x005d, 0x005d},  //  551; Use Count =     2
  { 0x005c, 0x005c, 0x005c, 0x005c},  //  552; Use Count =     2
  { 0x005e, 0x005e, 0x005e, 0x005e},  //  553; Use Count =     3
  { 0x00f5, 0x00d5, 0x00d5, 0x00f5},  //  554; Use Count =     8
  { 0x00a7, 0x00a7, 0x00a7, 0x00a7},  //  555; Use Count =     1
  { 0x00bd, 0x00bd, 0x00bd, 0x00bd},  //  556; Use Count =     1
  { 0x02c7, 0x02c7, 0x007e, 0x007e},  //  557; Use Count =     1
  { 0x007c, 0x007c, 0x007c, 0x007c},  //  558; Use Count =     2
  { 0x0032, 0x0032, 0x00ab, 0x00ab},  //  559; Use Count =     1
  { 0x0000, 0x0000, 0x0040, 0x0040},  //  560; Use Count =     1
  { 0x0033, 0x0033, 0x00bb, 0x00bb},  //  561; Use Count =     1
  { 0x0000, 0x0000, 0x0023, 0x0023},  //  562; Use Count =     1
  { 0x20ac, 0x20ac, 0x0024, 0x0024},  //  563; Use Count =     1
  { 0x0022, 0x0022, 0x007e, 0x007e},  //  564; Use Count =     1
  { 0x2019, 0x2019, 0x005e, 0x005e},  //  565; Use Count =     1
  { 0x0000, 0x0000, 0x00b1, 0x00b1},  //  566; Use Count =     3
  { 0x0038, 0x0038, 0x00d7, 0x00d7},  //  567; Use Count =     1
  { 0x003a, 0x003a, 0x0000, 0x0000},  //  568; Use Count =     1
  { 0x003d, 0x003d, 0x003b, 0x003b},  //  569; Use Count =     1
  { 0x0123, 0x0122, 0x0122, 0x0123},  //  570; Use Count =     3
  { 0x0137, 0x0136, 0x0136, 0x0137},  //  571; Use Count =     3
  { 0x016b, 0x016a, 0x016a, 0x016b},  //  572; Use Count =     5
  { 0x0157, 0x0156, 0x0156, 0x0157},  //  573; Use Count =     2
  { 0x0113, 0x0112, 0x0112, 0x0113},  //  574; Use Count =     2
  { 0x2013, 0x2013, 0x2014, 0x2014},  //  575; Use Count =     2
  { 0x013c, 0x013b, 0x013b, 0x013c},  //  576; Use Count =     2
  { 0x00ad, 0x00ad, 0x003f, 0x003f},  //  577; Use Count =     1
  { 0x0146, 0x0145, 0x0145, 0x0146},  //  578; Use Count =     2
  { 0x012b, 0x012a, 0x012a, 0x012b},  //  579; Use Count =     2
  { 0x00b4, 0x00b4, 0x00b0, 0x00b0},  //  580; Use Count =     1
  { 0x0101, 0x0100, 0x0100, 0x0101},  //  581; Use Count =     2
  { 0x0029, 0x0029, 0x0030, 0x0030},  //  582; Use Count =     3
  { 0x0021, 0x0021, 0x0031, 0x0031},  //  583; Use Count =     4
  { 0x0022, 0x0022, 0x0032, 0x0032},  //  584; Use Count =     1
  { 0x002f, 0x002f, 0x0033, 0x0033},  //  585; Use Count =     3
  { 0x003b, 0x003b, 0x0034, 0x0034},  //  586; Use Count =     3
  { 0x003a, 0x003a, 0x0035, 0x0035},  //  587; Use Count =     4
  { 0x002c, 0x002c, 0x0036, 0x0036},  //  588; Use Count =     3
  { 0x002e, 0x002e, 0x0037, 0x0037},  //  589; Use Count =     4
  { 0x003f, 0x003f, 0x0038, 0x0038},  //  590; Use Count =     1
  { 0x0028, 0x0028, 0x0039, 0x0039},  //  591; Use Count =     3
  { 0x0173, 0x0172, 0x0172, 0x0173},  //  592; Use Count =     3
  { 0x002b, 0x002b, 0x003d, 0x003d},  //  593; Use Count =     1
  { 0x005f, 0x005f, 0x002d, 0x002d},  //  594; Use Count =     1
  { 0x012f, 0x012e, 0x012e, 0x012f},  //  595; Use Count =     3
  { 0x007c, 0x007c, 0x005c, 0x005c},  //  596; Use Count =     1
  { 0x201c, 0x201c, 0x201d, 0x201d},  //  597; Use Count =     1
  { 0x0117, 0x0116, 0x0116, 0x0117},  //  598; Use Count =     3
  { 0x04e3, 0x04e2, 0x04e2, 0x04e3},  //  599; Use Count =     1
  { 0x04b3, 0x04b2, 0x04b2, 0x04b3},  //  600; Use Count =     2
  { 0x04b7, 0x04b6, 0x04b6, 0x04b7},  //  601; Use Count =     1
  { 0x049b, 0x049a, 0x049a, 0x049b},  //  602; Use Count =     3
  { 0x04ef, 0x04ee, 0x04ee, 0x04ef},  //  603; Use Count =     1
  { 0x0493, 0x0492, 0x0492, 0x0493},  //  604; Use Count =     4
  { 0x005c, 0x002f, 0x002f, 0x005c},  //  605; Use Count =     2
  { 0x06c1, 0x06c1, 0x0000, 0x0000},  //  606; Use Count =     1
  { 0x0634, 0x0634, 0x064e, 0x064e},  //  607; Use Count =     1
  { 0x0630, 0x0630, 0x0625, 0x0625},  //  608; Use Count =     1
  { 0x0632, 0x0632, 0x0698, 0x0698},  //  609; Use Count =     1
  { 0x06cc, 0x06cc, 0x0650, 0x0650},  //  610; Use Count =     1
  { 0x062b, 0x062b, 0x064d, 0x064d},  //  611; Use Count =     1
  { 0x0628, 0x0628, 0x0651, 0x0651},  //  612; Use Count =     1
  { 0x0644, 0x0644, 0x06c0, 0x06c0},  //  613; Use Count =     1
  { 0x0647, 0x0647, 0x005d, 0x005d},  //  614; Use Count =     1
  { 0x0646, 0x0646, 0x00ab, 0x00ab},  //  615; Use Count =     1
  { 0x0645, 0x0645, 0x00bb, 0x00bb},  //  616; Use Count =     1
  { 0x0626, 0x0626, 0x0621, 0x0621},  //  617; Use Count =     1
  { 0x062f, 0x062f, 0x0623, 0x0623},  //  618; Use Count =     1
  { 0x062e, 0x062e, 0x005b, 0x005b},  //  619; Use Count =     1
  { 0x062d, 0x062d, 0x005c, 0x005c},  //  620; Use Count =     1
  { 0x0636, 0x0636, 0x064b, 0x064b},  //  621; Use Count =     1
  { 0x0642, 0x0642, 0xfffc, 0xfffc},  //  622; Use Count =     1
  { 0x0633, 0x0633, 0x064f, 0x064f},  //  623; Use Count =     1
  { 0x0641, 0x0641, 0x060c, 0x060c},  //  624; Use Count =     1
  { 0x0639, 0x0639, 0x002c, 0x002c},  //  625; Use Count =     1
  { 0x0631, 0x0631, 0x0624, 0x0624},  //  626; Use Count =     1
  { 0x0635, 0x0635, 0x064c, 0x064c},  //  627; Use Count =     1
  { 0x0637, 0x0637, 0x064a, 0x064a},  //  628; Use Count =     1
  { 0x063a, 0x063a, 0x061b, 0x061b},  //  629; Use Count =     1
  { 0x0638, 0x0638, 0x0629, 0x0629},  //  630; Use Count =     1
  { 0x06a9, 0x06a9, 0x003a, 0x003a},  //  631; Use Count =     1
  { 0x0648, 0x0648, 0x003c, 0x003c},  //  632; Use Count =     1
  { 0x00f7, 0x00f7, 0x00d7, 0x00d7},  //  633; Use Count =     1
  { 0x062c, 0x062c, 0x007d, 0x007d},  //  634; Use Count =     1
  { 0x067e, 0x067e, 0x007c, 0x007c},  //  635; Use Count =     2
  { 0x0686, 0x0686, 0x007b, 0x007b},  //  636; Use Count =     1
  { 0x06af, 0x06af, 0x0022, 0x0022},  //  637; Use Count =     1
  { 0x00ea, 0x00ca, 0x00ca, 0x00ea},  //  638; Use Count =     1
  { 0x00f4, 0x00d4, 0x00d4, 0x00f4},  //  639; Use Count =     1
  { 0x0300, 0x0300, 0x0300, 0x0300},  //  640; Use Count =     1
  { 0x0309, 0x0309, 0x0309, 0x0309},  //  641; Use Count =     1
  { 0x0303, 0x0303, 0x0303, 0x0303},  //  642; Use Count =     1
  { 0x0301, 0x0301, 0x0301, 0x0301},  //  643; Use Count =     1
  { 0x0323, 0x0323, 0x0323, 0x0323},  //  644; Use Count =     1
  { 0x20ab, 0x20ab, 0x002b, 0x002b},  //  645; Use Count =     1
  { 0x01b0, 0x01af, 0x01af, 0x01b0},  //  646; Use Count =     1
  { 0x01a1, 0x01a0, 0x01a0, 0x01a1},  //  647; Use Count =     1
  { 0x0585, 0x0555, 0x0555, 0x0585},  //  648; Use Count =     2
  { 0x003a, 0x003a, 0x0031, 0x0031},  //  649; Use Count =     2
  { 0x0571, 0x0541, 0x0541, 0x0571},  //  650; Use Count =     2
  { 0x0575, 0x0545, 0x0545, 0x0575},  //  651; Use Count =     2
  { 0x055b, 0x055b, 0x0033, 0x0033},  //  652; Use Count =     2
  { 0x002c, 0x002c, 0x0034, 0x0034},  //  653; Use Count =     2
  { 0x002d, 0x002d, 0x0039, 0x0039},  //  654; Use Count =     2
  { 0x002e, 0x002e, 0x0587, 0x0587},  //  655; Use Count =     2
  { 0x00ab, 0x00ab, 0x0028, 0x0028},  //  656; Use Count =     2
  { 0x00bb, 0x00bb, 0x0029, 0x0029},  //  657; Use Count =     2
  { 0x0561, 0x0531, 0x0531, 0x0561},  //  658; Use Count =     2
  { 0x0562, 0x0532, 0x0532, 0x0562},  //  659; Use Count =     2
  { 0x0563, 0x0533, 0x0533, 0x0563},  //  660; Use Count =     2
  { 0x0564, 0x0534, 0x0534, 0x0564},  //  661; Use Count =     2
  { 0x0567, 0x0537, 0x0537, 0x0567},  //  662; Use Count =     2
  { 0x0586, 0x0556, 0x0556, 0x0586},  //  663; Use Count =     2
  { 0x0584, 0x0554, 0x0554, 0x0584},  //  664; Use Count =     2
  { 0x0570, 0x0540, 0x0540, 0x0570},  //  665; Use Count =     2
  { 0x056b, 0x053b, 0x053b, 0x056b},  //  666; Use Count =     2
  { 0x0573, 0x0543, 0x0543, 0x0573},  //  667; Use Count =     2
  { 0x056f, 0x053f, 0x053f, 0x056f},  //  668; Use Count =     2
  { 0x056c, 0x053c, 0x053c, 0x056c},  //  669; Use Count =     2
  { 0x0574, 0x0544, 0x0544, 0x0574},  //  670; Use Count =     2
  { 0x0576, 0x0546, 0x0546, 0x0576},  //  671; Use Count =     2
  { 0x0578, 0x0548, 0x0548, 0x0578},  //  672; Use Count =     2
  { 0x057a, 0x054a, 0x054a, 0x057a},  //  673; Use Count =     2
  { 0x056d, 0x053d, 0x053d, 0x056d},  //  674; Use Count =     2
  { 0x0580, 0x0550, 0x0550, 0x0580},  //  675; Use Count =     2
  { 0x057d, 0x054d, 0x054d, 0x057d},  //  676; Use Count =     2
  { 0x057f, 0x054f, 0x054f, 0x057f},  //  677; Use Count =     2
  { 0x0568, 0x0538, 0x0538, 0x0568},  //  678; Use Count =     2
  { 0x057e, 0x054e, 0x054e, 0x057e},  //  679; Use Count =     2
  { 0x0582, 0x0552, 0x0552, 0x0582},  //  680; Use Count =     2
  { 0x0581, 0x0551, 0x0551, 0x0581},  //  681; Use Count =     2
  { 0x0565, 0x0535, 0x0535, 0x0565},  //  682; Use Count =     2
  { 0x0566, 0x0536, 0x0536, 0x0566},  //  683; Use Count =     2
  { 0x057b, 0x054b, 0x054b, 0x057b},  //  684; Use Count =     2
  { 0x0569, 0x0539, 0x0539, 0x0569},  //  685; Use Count =     2
  { 0x0577, 0x0547, 0x0547, 0x0577},  //  686; Use Count =     2
  { 0x056e, 0x053e, 0x053e, 0x056e},  //  687; Use Count =     2
  { 0x0572, 0x0542, 0x0542, 0x0572},  //  688; Use Count =     2
  { 0x056a, 0x053a, 0x053a, 0x056a},  //  689; Use Count =     2
  { 0x0583, 0x0553, 0x0553, 0x0583},  //  690; Use Count =     2
  { 0x057c, 0x054c, 0x054c, 0x057c},  //  691; Use Count =     2
  { 0x0027, 0x0027, 0x055e, 0x055e},  //  692; Use Count =     4
  { 0x0579, 0x0549, 0x0549, 0x0579},  //  693; Use Count =     2
  { 0x055d, 0x055d, 0x055c, 0x055c},  //  694; Use Count =     2
  { 0x0033, 0x0033, 0x2166, 0x2166},  //  695; Use Count =     1
  { 0x0259, 0x018f, 0x018f, 0x0259},  //  696; Use Count =     1
  { 0x201e, 0x201e, 0x0000, 0x0000},  //  697; Use Count =     4
  { 0x201a, 0x201a, 0x0000, 0x0000},  //  698; Use Count =     1
  { 0x2018, 0x2018, 0x0000, 0x0000},  //  699; Use Count =     8
  { 0x201c, 0x201c, 0x0000, 0x0000},  //  700; Use Count =     3
  { 0x2019, 0x2019, 0x0000, 0x0000},  //  701; Use Count =     9
  { 0x00a1, 0x00a1, 0x00b9, 0x00b9},  //  702; Use Count =     4
  { 0x00a4, 0x00a4, 0x00a3, 0x00a3},  //  703; Use Count =     4
  { 0x00a9, 0x00a9, 0x00a2, 0x00a2},  //  704; Use Count =     4
  { 0x00df, 0x00df, 0x00a7, 0x00a7},  //  705; Use Count =     6
  { 0x00b6, 0x00b6, 0x00b0, 0x00b0},  //  706; Use Count =     4
  { 0x00d7, 0x00d7, 0x00f7, 0x00f7},  //  707; Use Count =     4
  { 0x00bf, 0x00bf, 0x0000, 0x0000},  //  708; Use Count =     4
  { 0x00ac, 0x00ac, 0x00a6, 0x00a6},  //  709; Use Count =     4
  { 0x002f, 0x002f, 0x0030, 0x0030},  //  710; Use Count =     1
  { 0x003f, 0x003f, 0x0032, 0x0032},  //  711; Use Count =     1
  { 0x2116, 0x2116, 0x0033, 0x0033},  //  712; Use Count =     1
  { 0x00a7, 0x00a7, 0x0034, 0x0034},  //  713; Use Count =     1
  { 0x0025, 0x0025, 0x0035, 0x0035},  //  714; Use Count =     2
  { 0x003a, 0x003a, 0x0036, 0x0036},  //  715; Use Count =     2
  { 0x003b, 0x003b, 0x0038, 0x0038},  //  716; Use Count =     1
  { 0x002c, 0x002c, 0x0039, 0x0039},  //  717; Use Count =     1
  { 0x10e4, 0x10e4, 0x10e4, 0x10e4},  //  718; Use Count =     1
  { 0x10f6, 0x10f6, 0x0000, 0x0000},  //  719; Use Count =     2
  { 0x10db, 0x10db, 0x10db, 0x10db},  //  720; Use Count =     1
  { 0x10e7, 0x10e7, 0x10e7, 0x10e7},  //  721; Use Count =     1
  { 0x10d5, 0x10d5, 0x10d5, 0x10d5},  //  722; Use Count =     1
  { 0x10f3, 0x10f3, 0x0000, 0x0000},  //  723; Use Count =     3
  { 0x10e3, 0x10e3, 0x10e3, 0x10e3},  //  724; Use Count =     1
  { 0x10d7, 0x10d7, 0x10d7, 0x10d7},  //  725; Use Count =     1
  { 0x10d0, 0x10d0, 0x10d0, 0x10d0},  //  726; Use Count =     1
  { 0x10de, 0x10de, 0x10de, 0x10de},  //  727; Use Count =     1
  { 0x10e8, 0x10e8, 0x10e8, 0x10e8},  //  728; Use Count =     1
  { 0x10e0, 0x10e0, 0x10e0, 0x10e0},  //  729; Use Count =     1
  { 0x10dd, 0x10dd, 0x10dd, 0x10dd},  //  730; Use Count =     1
  { 0x10da, 0x10da, 0x10da, 0x10da},  //  731; Use Count =     1
  { 0x10e2, 0x10e2, 0x10e2, 0x10e2},  //  732; Use Count =     1
  { 0x10d8, 0x10d8, 0x10d8, 0x10d8},  //  733; Use Count =     1
  { 0x10f2, 0x10f2, 0x0000, 0x0000},  //  734; Use Count =     3
  { 0x10ec, 0x10ec, 0x10ec, 0x10ec},  //  735; Use Count =     1
  { 0x10d6, 0x10d6, 0x10d6, 0x10d6},  //  736; Use Count =     1
  { 0x10e6, 0x10e6, 0x10e6, 0x10e6},  //  737; Use Count =     1
  { 0x10d9, 0x10d9, 0x10d9, 0x10d9},  //  738; Use Count =     1
  { 0x10eb, 0x10eb, 0x10eb, 0x10eb},  //  739; Use Count =     1
  { 0x10d4, 0x10d4, 0x10d4, 0x10d4},  //  740; Use Count =     1
  { 0x10f1, 0x10f1, 0x0000, 0x0000},  //  741; Use Count =     3
  { 0x10d2, 0x10d2, 0x10d2, 0x10d2},  //  742; Use Count =     1
  { 0x10e1, 0x10e1, 0x10e1, 0x10e1},  //  743; Use Count =     1
  { 0x10ef, 0x10ef, 0x10ef, 0x10ef},  //  744; Use Count =     1
  { 0x10e9, 0x10e9, 0x10e9, 0x10e9},  //  745; Use Count =     1
  { 0x10dc, 0x10dc, 0x10dc, 0x10dc},  //  746; Use Count =     1
  { 0x10ed, 0x10ed, 0x10ed, 0x10ed},  //  747; Use Count =     1
  { 0x10d3, 0x10d3, 0x10d3, 0x10d3},  //  748; Use Count =     1
  { 0x10e5, 0x10e5, 0x10e5, 0x10e5},  //  749; Use Count =     1
  { 0x2013, 0x2013, 0x002d, 0x002d},  //  750; Use Count =     1
  { 0x10d1, 0x10d1, 0x10d1, 0x10d1},  //  751; Use Count =     1
  { 0x10f0, 0x10f0, 0x10f0, 0x10f0},  //  752; Use Count =     1
  { 0x10f5, 0x10f5, 0x0000, 0x0000},  //  753; Use Count =     2
  { 0x201e, 0x201e, 0x201c, 0x201c},  //  754; Use Count =     3
  { 0x10ee, 0x10ee, 0x10ee, 0x10ee},  //  755; Use Count =     1
  { 0x10f4, 0x10f4, 0x0000, 0x0000},  //  756; Use Count =     3
  { 0x10ea, 0x10ea, 0x10ea, 0x10ea},  //  757; Use Count =     1
  { 0x10df, 0x10df, 0x10df, 0x10df},  //  758; Use Count =     1
  { 0x0966, 0x0966, 0x0000, 0x0000},  //  759; Use Count =     1
  { 0x0031, 0x0031, 0x090d, 0x090d},  //  760; Use Count =     2
  { 0x0967, 0x0967, 0x0000, 0x0000},  //  761; Use Count =     1
  { 0x0032, 0x0032, 0x0945, 0x0945},  //  762; Use Count =     2
  { 0x0968, 0x0968, 0x0000, 0x0000},  //  763; Use Count =     1
  { 0x0033, 0x0033, 0xfffe, 0xfffe},  //  764; Use Count =     8
  { 0x0969, 0x0969, 0x0000, 0x0000},  //  765; Use Count =     1
  { 0x0034, 0x0034, 0xfffe, 0xfffe},  //  766; Use Count =     6
  { 0x096a, 0x096a, 0x0000, 0x0000},  //  767; Use Count =     1
  { 0x0035, 0x0035, 0xfffd, 0xfffd},  //  768; Use Count =     7
  { 0x096b, 0x096b, 0x0000, 0x0000},  //  769; Use Count =     1
  { 0x0036, 0x0036, 0xfffd, 0xfffd},  //  770; Use Count =     8
  { 0x096c, 0x096c, 0x0000, 0x0000},  //  771; Use Count =     1
  { 0x0037, 0x0037, 0xfffd, 0xfffd},  //  772; Use Count =     8
  { 0x096d, 0x096d, 0x0000, 0x0000},  //  773; Use Count =     1
  { 0x0038, 0x0038, 0xfffd, 0xfffd},  //  774; Use Count =     8
  { 0x096e, 0x096e, 0x0000, 0x0000},  //  775; Use Count =     1
  { 0x096f, 0x096f, 0x0000, 0x0000},  //  776; Use Count =     1
  { 0x094b, 0x094b, 0x0913, 0x0913},  //  777; Use Count =     3
  { 0x0935, 0x0935, 0x0934, 0x0934},  //  778; Use Count =     1
  { 0x092e, 0x092e, 0x0923, 0x0923},  //  779; Use Count =     3
  { 0x0954, 0x0954, 0x0000, 0x0000},  //  780; Use Count =     1
  { 0x094d, 0x094d, 0x0905, 0x0905},  //  781; Use Count =     3
  { 0x093e, 0x093e, 0x0906, 0x0906},  //  782; Use Count =     3
  { 0x093f, 0x093f, 0x0907, 0x0907},  //  783; Use Count =     3
  { 0x0962, 0x0962, 0x090c, 0x090c},  //  784; Use Count =     1
  { 0x0941, 0x0941, 0x0909, 0x0909},  //  785; Use Count =     3
  { 0x092a, 0x092a, 0x092b, 0x092b},  //  786; Use Count =     3
  { 0x0000, 0x0000, 0x095e, 0x095e},  //  787; Use Count =     1
  { 0x0917, 0x0917, 0x0918, 0x0918},  //  788; Use Count =     3
  { 0x095a, 0x095a, 0x0000, 0x0000},  //  789; Use Count =     1
  { 0x0930, 0x0930, 0x0931, 0x0931},  //  790; Use Count =     3
  { 0x0915, 0x0915, 0x0916, 0x0916},  //  791; Use Count =     3
  { 0x0958, 0x0958, 0x0959, 0x0959},  //  792; Use Count =     1
  { 0x0924, 0x0924, 0x0925, 0x0925},  //  793; Use Count =     3
  { 0x0938, 0x0938, 0x0936, 0x0936},  //  794; Use Count =     3
  { 0x0932, 0x0932, 0x0933, 0x0933},  //  795; Use Count =     3
  { 0x0926, 0x0926, 0x0927, 0x0927},  //  796; Use Count =     3
  { 0x091c, 0x091c, 0x091d, 0x091d},  //  797; Use Count =     3
  { 0x095b, 0x095b, 0x0000, 0x0000},  //  798; Use Count =     1
  { 0x094c, 0x094c, 0x0914, 0x0914},  //  799; Use Count =     3
  { 0x0940, 0x0940, 0x0908, 0x0908},  //  800; Use Count =     3
  { 0x0963, 0x0963, 0x0961, 0x0961},  //  801; Use Count =     1
  { 0x0947, 0x0947, 0x090f, 0x090f},  //  802; Use Count =     3
  { 0x0942, 0x0942, 0x090a, 0x090a},  //  803; Use Count =     3
  { 0x0939, 0x0939, 0x0919, 0x0919},  //  804; Use Count =     3
  { 0x0928, 0x0928, 0x0929, 0x0929},  //  805; Use Count =     1
  { 0x0948, 0x0948, 0x0910, 0x0910},  //  806; Use Count =     3
  { 0x0902, 0x0902, 0x0901, 0x0901},  //  807; Use Count =     3
  { 0x0000, 0x0000, 0x0950, 0x0950},  //  808; Use Count =     3
  { 0x092c, 0x092c, 0x092d, 0x092d},  //  809; Use Count =     3
  { 0x0946, 0x0946, 0x090e, 0x090e},  //  810; Use Count =     1
  { 0x0953, 0x0953, 0x0000, 0x0000},  //  811; Use Count =     1
  { 0x091a, 0x091a, 0x091b, 0x091b},  //  812; Use Count =     3
  { 0x0952, 0x0952, 0x0000, 0x0000},  //  813; Use Count =     1
  { 0x0943, 0x0943, 0x090b, 0x090b},  //  814; Use Count =     3
  { 0x0944, 0x0944, 0x0960, 0x0960},  //  815; Use Count =     1
  { 0x002c, 0x002c, 0x0937, 0x0937},  //  816; Use Count =     3
  { 0x0970, 0x0970, 0x0000, 0x0000},  //  817; Use Count =     1
  { 0x002d, 0x002d, 0x0903, 0x0903},  //  818; Use Count =     3
  { 0x002e, 0x002e, 0x0964, 0x0964},  //  819; Use Count =     6
  { 0x0965, 0x0965, 0x093d, 0x093d},  //  820; Use Count =     1
  { 0x092f, 0x092f, 0x095f, 0x095f},  //  821; Use Count =     3
  { 0x094a, 0x094a, 0x0912, 0x0912},  //  822; Use Count =     1
  { 0x0921, 0x0921, 0x0922, 0x0922},  //  823; Use Count =     3
  { 0x095c, 0x095c, 0x095d, 0x095d},  //  824; Use Count =     1
  { 0x0949, 0x0949, 0x0911, 0x0911},  //  825; Use Count =     6
  { 0x093c, 0x093c, 0x091e, 0x091e},  //  826; Use Count =     3
  { 0x091f, 0x091f, 0x0920, 0x0920},  //  827; Use Count =     3
  { 0x0000, 0x0000, 0x0951, 0x0951},  //  828; Use Count =     1
  { 0x0292, 0x01b7, 0x01b7, 0x0292},  //  829; Use Count =     5
  { 0x01e5, 0x01e4, 0x01e4, 0x01e5},  //  830; Use Count =     5
  { 0x01e7, 0x01e6, 0x01e6, 0x01e7},  //  831; Use Count =     5
  { 0x021f, 0x021e, 0x021e, 0x021f},  //  832; Use Count =     3
  { 0x00ef, 0x00cf, 0x00cf, 0x00ef},  //  833; Use Count =     5
  { 0x01e9, 0x01e8, 0x01e8, 0x01e9},  //  834; Use Count =     5
  { 0x014b, 0x014a, 0x014a, 0x014b},  //  835; Use Count =     5
  { 0x0167, 0x0166, 0x0166, 0x0167},  //  836; Use Count =     5
  { 0x01ef, 0x01ee, 0x01ee, 0x01ef},  //  837; Use Count =     5
  { 0x0022, 0x0022, 0x0021, 0x0021},  //  838; Use Count =     1
  { 0x04d9, 0x04d8, 0x04d8, 0x04d9},  //  839; Use Count =     3
  { 0x04a3, 0x04a2, 0x04a2, 0x04a3},  //  840; Use Count =     3
  { 0x04af, 0x04ae, 0x04ae, 0x04af},  //  841; Use Count =     5
  { 0x04b1, 0x04b0, 0x04b0, 0x04b1},  //  842; Use Count =     1
  { 0x04bb, 0x04ba, 0x04ba, 0x04bb},  //  843; Use Count =     3
  { 0x04e9, 0x04e8, 0x04e8, 0x04e9},  //  844; Use Count =     5
  { 0x2116, 0x2116, 0x003f, 0x003f},  //  845; Use Count =     1
  { 0x005c, 0x007c, 0x007c, 0x005c},  //  846; Use Count =     1
  { 0x0036, 0x0036, 0x2116, 0x2116},  //  847; Use Count =     1
  { 0x00fd, 0x00dd, 0x00dd, 0x00fd},  //  848; Use Count =     3
  { 0x0148, 0x0147, 0x0147, 0x0148},  //  849; Use Count =     1
  { 0x0497, 0x0496, 0x0496, 0x0497},  //  850; Use Count =     1
  { 0x09e6, 0x09e6, 0x0000, 0x0000},  //  851; Use Count =     1
  { 0x0031, 0x0031, 0x0000, 0x0000},  //  852; Use Count =     5
  { 0x09e7, 0x09e7, 0x0000, 0x0000},  //  853; Use Count =     1
  { 0x0032, 0x0032, 0x0000, 0x0000},  //  854; Use Count =     5
  { 0x09e8, 0x09e8, 0x0000, 0x0000},  //  855; Use Count =     1
  { 0x09e9, 0x09e9, 0x0000, 0x0000},  //  856; Use Count =     2
  { 0x09ea, 0x09ea, 0x0000, 0x0000},  //  857; Use Count =     1
  { 0x09eb, 0x09eb, 0x0000, 0x0000},  //  858; Use Count =     1
  { 0x09ec, 0x09ec, 0x0000, 0x0000},  //  859; Use Count =     1
  { 0x09ed, 0x09ed, 0x0000, 0x0000},  //  860; Use Count =     1
  { 0x09ee, 0x09ee, 0x0000, 0x0000},  //  861; Use Count =     1
  { 0x09ef, 0x09ef, 0x0000, 0x0000},  //  862; Use Count =     1
  { 0x09cb, 0x09cb, 0x0993, 0x0993},  //  863; Use Count =     3
  { 0x09f4, 0x09f4, 0x09f5, 0x09f5},  //  864; Use Count =     1
  { 0x09ac, 0x09ac, 0x0000, 0x0000},  //  865; Use Count =     3
  { 0x09ae, 0x09ae, 0x09a3, 0x09a3},  //  866; Use Count =     3
  { 0x09cd, 0x09cd, 0x0985, 0x0985},  //  867; Use Count =     3
  { 0x09f8, 0x09f8, 0x09f9, 0x09f9},  //  868; Use Count =     1
  { 0x09be, 0x09be, 0x0986, 0x0986},  //  869; Use Count =     3
  { 0x09bf, 0x09bf, 0x0987, 0x0987},  //  870; Use Count =     3
  { 0x09e2, 0x09e2, 0x098c, 0x098c},  //  871; Use Count =     1
  { 0x09c1, 0x09c1, 0x0989, 0x0989},  //  872; Use Count =     3
  { 0x09aa, 0x09aa, 0x09ab, 0x09ab},  //  873; Use Count =     3
  { 0x0997, 0x0997, 0x0998, 0x0998},  //  874; Use Count =     3
  { 0x09b0, 0x09b0, 0x0000, 0x0000},  //  875; Use Count =     3
  { 0x09f0, 0x09f0, 0x09f1, 0x09f1},  //  876; Use Count =     1
  { 0x0995, 0x0995, 0x0996, 0x0996},  //  877; Use Count =     3
  { 0x09a4, 0x09a4, 0x09a5, 0x09a5},  //  878; Use Count =     3
  { 0x09b8, 0x09b8, 0x09b6, 0x09b6},  //  879; Use Count =     3
  { 0x09b2, 0x09b2, 0x0000, 0x0000},  //  880; Use Count =     3
  { 0x09a6, 0x09a6, 0x09a7, 0x09a7},  //  881; Use Count =     3
  { 0x099c, 0x099c, 0x099d, 0x099d},  //  882; Use Count =     3
  { 0x09cc, 0x09cc, 0x0994, 0x0994},  //  883; Use Count =     3
  { 0x09d7, 0x09d7, 0x0000, 0x0000},  //  884; Use Count =     1
  { 0x09c0, 0x09c0, 0x0988, 0x0988},  //  885; Use Count =     3
  { 0x09e3, 0x09e3, 0x09e1, 0x09e1},  //  886; Use Count =     1
  { 0x09c7, 0x09c7, 0x098f, 0x098f},  //  887; Use Count =     3
  { 0x09f6, 0x09f6, 0x09f7, 0x09f7},  //  888; Use Count =     1
  { 0x09c2, 0x09c2, 0x098a, 0x098a},  //  889; Use Count =     3
  { 0x09b9, 0x09b9, 0x0999, 0x0999},  //  890; Use Count =     3
  { 0x09a8, 0x09a8, 0x0000, 0x0000},  //  891; Use Count =     3
  { 0x09c8, 0x09c8, 0x0990, 0x0990},  //  892; Use Count =     3
  { 0x0982, 0x0982, 0x0981, 0x0981},  //  893; Use Count =     3
  { 0x09fa, 0x09fa, 0x0000, 0x0000},  //  894; Use Count =     1
  { 0x09ac, 0x09ac, 0x09ad, 0x09ad},  //  895; Use Count =     3
  { 0x099a, 0x099a, 0x099b, 0x099b},  //  896; Use Count =     3
  { 0x09c3, 0x09c3, 0x098b, 0x098b},  //  897; Use Count =     3
  { 0x09e2, 0x09e2, 0x09e0, 0x09e0},  //  898; Use Count =     1
  { 0x002c, 0x002c, 0x09b7, 0x09b7},  //  899; Use Count =     3
  { 0x002d, 0x002d, 0x0983, 0x0983},  //  900; Use Count =     3
  { 0x002e, 0x002e, 0x007b, 0x007b},  //  901; Use Count =     1
  { 0x09af, 0x09af, 0x09df, 0x09df},  //  902; Use Count =     1
  { 0x09a1, 0x09a1, 0x09a2, 0x09a2},  //  903; Use Count =     3
  { 0x09dc, 0x09dc, 0x09dd, 0x09dd},  //  904; Use Count =     1
  { 0x09bc, 0x09bc, 0x099e, 0x099e},  //  905; Use Count =     3
  { 0x099f, 0x099f, 0x09a0, 0x09a0},  //  906; Use Count =     3
  { 0x0a66, 0x0a66, 0x0000, 0x0000},  //  907; Use Count =     1
  { 0x0031, 0x0031, 0xfffe, 0xfffe},  //  908; Use Count =     1
  { 0x0a67, 0x0a67, 0x0000, 0x0000},  //  909; Use Count =     1
  { 0x0032, 0x0032, 0xfffe, 0xfffe},  //  910; Use Count =     1
  { 0x0a68, 0x0a68, 0x0000, 0x0000},  //  911; Use Count =     1
  { 0x0a69, 0x0a69, 0x0000, 0x0000},  //  912; Use Count =     1
  { 0x0034, 0x0034, 0x0a71, 0x0a71},  //  913; Use Count =     1
  { 0x0a6a, 0x0a6a, 0x0000, 0x0000},  //  914; Use Count =     1
  { 0x0035, 0x0035, 0x0000, 0x0000},  //  915; Use Count =     2
  { 0x0a6b, 0x0a6b, 0x0000, 0x0000},  //  916; Use Count =     1
  { 0x0036, 0x0036, 0x0000, 0x0000},  //  917; Use Count =     1
  { 0x0a6c, 0x0a6c, 0x0000, 0x0000},  //  918; Use Count =     1
  { 0x0037, 0x0037, 0x0000, 0x0000},  //  919; Use Count =     1
  { 0x0a6d, 0x0a6d, 0x0000, 0x0000},  //  920; Use Count =     1
  { 0x0038, 0x0038, 0x0000, 0x0000},  //  921; Use Count =     1
  { 0x0a6e, 0x0a6e, 0x0000, 0x0000},  //  922; Use Count =     1
  { 0x0a6f, 0x0a6f, 0x0000, 0x0000},  //  923; Use Count =     1
  { 0x0a4b, 0x0a4b, 0x0a13, 0x0a13},  //  924; Use Count =     1
  { 0x0a35, 0x0a35, 0x0a72, 0x0a72},  //  925; Use Count =     1
  { 0x0a73, 0x0a73, 0x0000, 0x0000},  //  926; Use Count =     1
  { 0x0a2e, 0x0a2e, 0x0a23, 0x0a23},  //  927; Use Count =     1
  { 0x0a4d, 0x0a4d, 0x0a05, 0x0a05},  //  928; Use Count =     1
  { 0x0a3e, 0x0a3e, 0x0a06, 0x0a06},  //  929; Use Count =     1
  { 0x0a3f, 0x0a3f, 0x0a07, 0x0a07},  //  930; Use Count =     1
  { 0x0a41, 0x0a41, 0x0a09, 0x0a09},  //  931; Use Count =     1
  { 0x0a2a, 0x0a2a, 0x0a2b, 0x0a2b},  //  932; Use Count =     1
  { 0x0a5e, 0x0a5e, 0x0000, 0x0000},  //  933; Use Count =     1
  { 0x0a17, 0x0a17, 0x0a18, 0x0a18},  //  934; Use Count =     1
  { 0x0a5a, 0x0a5a, 0x0000, 0x0000},  //  935; Use Count =     1
  { 0x0a30, 0x0a30, 0x0a5c, 0x0a5c},  //  936; Use Count =     1
  { 0x0a15, 0x0a15, 0x0a16, 0x0a16},  //  937; Use Count =     1
  { 0x0a59, 0x0a59, 0x0000, 0x0000},  //  938; Use Count =     1
  { 0x0a24, 0x0a24, 0x0a25, 0x0a25},  //  939; Use Count =     1
  { 0x0a38, 0x0a38, 0x0a36, 0x0a36},  //  940; Use Count =     1
  { 0x0a32, 0x0a32, 0x0a33, 0x0a33},  //  941; Use Count =     1
  { 0x0a26, 0x0a26, 0x0a27, 0x0a27},  //  942; Use Count =     1
  { 0x0a1c, 0x0a1c, 0x0a1d, 0x0a1d},  //  943; Use Count =     1
  { 0x0a5b, 0x0a5b, 0x0000, 0x0000},  //  944; Use Count =     1
  { 0x0a4c, 0x0a4c, 0x0a14, 0x0a14},  //  945; Use Count =     1
  { 0x0a40, 0x0a40, 0x0a08, 0x0a08},  //  946; Use Count =     1
  { 0x0a47, 0x0a47, 0x0a0f, 0x0a0f},  //  947; Use Count =     1
  { 0x0a42, 0x0a42, 0x0a0a, 0x0a0a},  //  948; Use Count =     1
  { 0x0a39, 0x0a39, 0x0a19, 0x0a19},  //  949; Use Count =     1
  { 0x0a28, 0x0a28, 0x0000, 0x0000},  //  950; Use Count =     1
  { 0x0a48, 0x0a48, 0x0a10, 0x0a10},  //  951; Use Count =     1
  { 0x0a70, 0x0a70, 0x0a02, 0x0a02},  //  952; Use Count =     1
  { 0x0000, 0x0000, 0x0a74, 0x0a74},  //  953; Use Count =     1
  { 0x0a2c, 0x0a2c, 0x0a2d, 0x0a2d},  //  954; Use Count =     1
  { 0x0a1a, 0x0a1a, 0x0a1b, 0x0a1b},  //  955; Use Count =     1
  { 0x002c, 0x002c, 0x0000, 0x0000},  //  956; Use Count =     1
  { 0x002d, 0x002d, 0x0000, 0x0000},  //  957; Use Count =     1
  { 0x0965, 0x0965, 0x0000, 0x0000},  //  958; Use Count =     2
  { 0x0a2f, 0x0a2f, 0x0000, 0x0000},  //  959; Use Count =     1
  { 0x0000, 0x0000, 0xfffe, 0xfffe},  //  960; Use Count =     1
  { 0x0a21, 0x0a21, 0x0a22, 0x0a22},  //  961; Use Count =     1
  { 0x0a5c, 0x0a5c, 0x0000, 0x0000},  //  962; Use Count =     1
  { 0x0a3c, 0x0a3c, 0x0a1e, 0x0a1e},  //  963; Use Count =     1
  { 0x0a1f, 0x0a1f, 0x0a20, 0x0a20},  //  964; Use Count =     1
  { 0x0ae6, 0x0ae6, 0x0000, 0x0000},  //  965; Use Count =     1
  { 0x0031, 0x0031, 0x0a8d, 0x0a8d},  //  966; Use Count =     1
  { 0x0ae7, 0x0ae7, 0x0000, 0x0000},  //  967; Use Count =     1
  { 0x0032, 0x0032, 0x0ac5, 0x0ac5},  //  968; Use Count =     1
  { 0x0ae8, 0x0ae8, 0x0000, 0x0000},  //  969; Use Count =     1
  { 0x0ae9, 0x0ae9, 0x0000, 0x0000},  //  970; Use Count =     1
  { 0x0aea, 0x0aea, 0x0000, 0x0000},  //  971; Use Count =     1
  { 0x0aeb, 0x0aeb, 0x0000, 0x0000},  //  972; Use Count =     1
  { 0x0aec, 0x0aec, 0x0000, 0x0000},  //  973; Use Count =     1
  { 0x0aed, 0x0aed, 0x0000, 0x0000},  //  974; Use Count =     1
  { 0x0aee, 0x0aee, 0x0000, 0x0000},  //  975; Use Count =     1
  { 0x0aef, 0x0aef, 0x0000, 0x0000},  //  976; Use Count =     1
  { 0x0acb, 0x0acb, 0x0a93, 0x0a93},  //  977; Use Count =     1
  { 0x0ab5, 0x0ab5, 0x0000, 0x0000},  //  978; Use Count =     1
  { 0x0aae, 0x0aae, 0x0aa3, 0x0aa3},  //  979; Use Count =     1
  { 0x0acd, 0x0acd, 0x0a85, 0x0a85},  //  980; Use Count =     1
  { 0x0abe, 0x0abe, 0x0a86, 0x0a86},  //  981; Use Count =     1
  { 0x0abf, 0x0abf, 0x0a87, 0x0a87},  //  982; Use Count =     1
  { 0x0ac1, 0x0ac1, 0x0a89, 0x0a89},  //  983; Use Count =     1
  { 0x0aaa, 0x0aaa, 0x0aab, 0x0aab},  //  984; Use Count =     1
  { 0x0a97, 0x0a97, 0x0a98, 0x0a98},  //  985; Use Count =     1
  { 0x0ab0, 0x0ab0, 0x0000, 0x0000},  //  986; Use Count =     1
  { 0x0a95, 0x0a95, 0x0a96, 0x0a96},  //  987; Use Count =     1
  { 0x0aa4, 0x0aa4, 0x0aa5, 0x0aa5},  //  988; Use Count =     1
  { 0x0ab8, 0x0ab8, 0x0ab6, 0x0ab6},  //  989; Use Count =     1
  { 0x0ab2, 0x0ab2, 0x0ab3, 0x0ab3},  //  990; Use Count =     1
  { 0x0aa6, 0x0aa6, 0x0aa7, 0x0aa7},  //  991; Use Count =     1
  { 0x0a9c, 0x0a9c, 0x0a9d, 0x0a9d},  //  992; Use Count =     1
  { 0x0acc, 0x0acc, 0x0a94, 0x0a94},  //  993; Use Count =     1
  { 0x0ac0, 0x0ac0, 0x0a88, 0x0a88},  //  994; Use Count =     1
  { 0x0ac7, 0x0ac7, 0x0a8f, 0x0a8f},  //  995; Use Count =     1
  { 0x0ac2, 0x0ac2, 0x0a8a, 0x0a8a},  //  996; Use Count =     1
  { 0x0ab9, 0x0ab9, 0x0a99, 0x0a99},  //  997; Use Count =     1
  { 0x0aa8, 0x0aa8, 0x0000, 0x0000},  //  998; Use Count =     1
  { 0x0ac8, 0x0ac8, 0x0a90, 0x0a90},  //  999; Use Count =     1
  { 0x0a82, 0x0a82, 0x0a81, 0x0a81},  // 1000; Use Count =     1
  { 0x0000, 0x0000, 0x0ad0, 0x0ad0},  // 1001; Use Count =     1
  { 0x0aac, 0x0aac, 0x0aad, 0x0aad},  // 1002; Use Count =     1
  { 0x0a9a, 0x0a9a, 0x0a9b, 0x0a9b},  // 1003; Use Count =     1
  { 0x0ac3, 0x0ac3, 0x0a8b, 0x0a8b},  // 1004; Use Count =     1
  { 0x0ac4, 0x0ac4, 0x0ae0, 0x0ae0},  // 1005; Use Count =     1
  { 0x002c, 0x002c, 0x0ab7, 0x0ab7},  // 1006; Use Count =     1
  { 0x002d, 0x002d, 0x0a83, 0x0a83},  // 1007; Use Count =     1
  { 0x0965, 0x0965, 0x0abd, 0x0abd},  // 1008; Use Count =     1
  { 0x0aaf, 0x0aaf, 0x0000, 0x0000},  // 1009; Use Count =     1
  { 0x0aa1, 0x0aa1, 0x0aa2, 0x0aa2},  // 1010; Use Count =     1
  { 0x0ac9, 0x0ac9, 0x0a91, 0x0a91},  // 1011; Use Count =     1
  { 0x0abc, 0x0abc, 0x0a9e, 0x0a9e},  // 1012; Use Count =     1
  { 0x0a9f, 0x0a9f, 0x0aa0, 0x0aa0},  // 1013; Use Count =     1
  { 0x0b66, 0x0b66, 0x0000, 0x0000},  // 1014; Use Count =     1
  { 0x0b67, 0x0b67, 0x0000, 0x0000},  // 1015; Use Count =     1
  { 0x0b68, 0x0b68, 0x0000, 0x0000},  // 1016; Use Count =     1
  { 0x0b69, 0x0b69, 0x0000, 0x0000},  // 1017; Use Count =     1
  { 0x0b6a, 0x0b6a, 0x0000, 0x0000},  // 1018; Use Count =     1
  { 0x0b6b, 0x0b6b, 0x0000, 0x0000},  // 1019; Use Count =     1
  { 0x0b6c, 0x0b6c, 0x0000, 0x0000},  // 1020; Use Count =     1
  { 0x0b6d, 0x0b6d, 0x0000, 0x0000},  // 1021; Use Count =     1
  { 0x0b6e, 0x0b6e, 0x0000, 0x0000},  // 1022; Use Count =     1
  { 0x0b6f, 0x0b6f, 0x0000, 0x0000},  // 1023; Use Count =     1
  { 0x0b4b, 0x0b4b, 0x0b13, 0x0b13},  // 1024; Use Count =     1
  { 0x0b2c, 0x0b2c, 0x0000, 0x0000},  // 1025; Use Count =     1
  { 0x0b2e, 0x0b2e, 0x0b23, 0x0b23},  // 1026; Use Count =     1
  { 0x0b4d, 0x0b4d, 0x0b05, 0x0b05},  // 1027; Use Count =     1
  { 0x0b3e, 0x0b3e, 0x0b06, 0x0b06},  // 1028; Use Count =     1
  { 0x0b3f, 0x0b3f, 0x0b07, 0x0b07},  // 1029; Use Count =     1
  { 0x0000, 0x0000, 0x0b0c, 0x0b0c},  // 1030; Use Count =     1
  { 0x0b41, 0x0b41, 0x0b09, 0x0b09},  // 1031; Use Count =     1
  { 0x0b2a, 0x0b2a, 0x0b2b, 0x0b2b},  // 1032; Use Count =     1
  { 0x0b17, 0x0b17, 0x0b18, 0x0b18},  // 1033; Use Count =     1
  { 0x0b30, 0x0b30, 0x0000, 0x0000},  // 1034; Use Count =     1
  { 0x0b15, 0x0b15, 0x0b16, 0x0b16},  // 1035; Use Count =     1
  { 0x0b24, 0x0b24, 0x0b25, 0x0b25},  // 1036; Use Count =     1
  { 0x0b38, 0x0b38, 0x0b36, 0x0b36},  // 1037; Use Count =     1
  { 0x0b32, 0x0b32, 0x0b33, 0x0b33},  // 1038; Use Count =     1
  { 0x0b26, 0x0b26, 0x0b27, 0x0b27},  // 1039; Use Count =     1
  { 0x0b1c, 0x0b1c, 0x0b1d, 0x0b1d},  // 1040; Use Count =     1
  { 0x0b4c, 0x0b4c, 0x0b14, 0x0b14},  // 1041; Use Count =     1
  { 0x0b40, 0x0b40, 0x0b08, 0x0b08},  // 1042; Use Count =     1
  { 0x0000, 0x0000, 0x0b61, 0x0b61},  // 1043; Use Count =     1
  { 0x0b47, 0x0b47, 0x0b0f, 0x0b0f},  // 1044; Use Count =     1
  { 0x0b42, 0x0b42, 0x0b0a, 0x0b0a},  // 1045; Use Count =     1
  { 0x0b39, 0x0b39, 0x0b19, 0x0b19},  // 1046; Use Count =     1
  { 0x0b28, 0x0b28, 0x0000, 0x0000},  // 1047; Use Count =     1
  { 0x0b48, 0x0b48, 0x0b10, 0x0b10},  // 1048; Use Count =     1
  { 0x0b02, 0x0b02, 0x0b01, 0x0b01},  // 1049; Use Count =     1
  { 0x0b2c, 0x0b2c, 0x0b2d, 0x0b2d},  // 1050; Use Count =     1
  { 0x0b5f, 0x0b5f, 0x0b71, 0x0b71},  // 1051; Use Count =     1
  { 0x0b1a, 0x0b1a, 0x0b1b, 0x0b1b},  // 1052; Use Count =     1
  { 0x0b43, 0x0b43, 0x0b0b, 0x0b0b},  // 1053; Use Count =     1
  { 0x0000, 0x0000, 0x0b60, 0x0b60},  // 1054; Use Count =     1
  { 0x002c, 0x002c, 0x0b37, 0x0b37},  // 1055; Use Count =     1
  { 0x0030, 0x0030, 0x0b03, 0x0b03},  // 1056; Use Count =     1
  { 0x002e, 0x002e, 0x0000, 0x0000},  // 1057; Use Count =     3
  { 0x0000, 0x0000, 0x0b3d, 0x0b3d},  // 1058; Use Count =     1
  { 0x0b2f, 0x0b2f, 0xfffe, 0xfffe},  // 1059; Use Count =     1
  { 0x0000, 0x0000, 0x0b5f, 0x0b5f},  // 1060; Use Count =     1
  { 0x0b21, 0x0b21, 0x0b22, 0x0b22},  // 1061; Use Count =     1
  { 0x0b5c, 0x0b5c, 0x0b5d, 0x0b5d},  // 1062; Use Count =     1
  { 0x0b3c, 0x0b3c, 0x0b1e, 0x0b1e},  // 1063; Use Count =     1
  { 0x0b1f, 0x0b1f, 0x0b20, 0x0b20},  // 1064; Use Count =     1
  { 0x0030, 0x0030, 0x0000, 0x0000},  // 1065; Use Count =     3
  { 0x0bf0, 0x0bf0, 0x0000, 0x0000},  // 1066; Use Count =     1
  { 0x0be7, 0x0be7, 0x0000, 0x0000},  // 1067; Use Count =     1
  { 0x0be8, 0x0be8, 0x0000, 0x0000},  // 1068; Use Count =     1
  { 0x0033, 0x0033, 0x0000, 0x0000},  // 1069; Use Count =     1
  { 0x0be9, 0x0be9, 0x0000, 0x0000},  // 1070; Use Count =     1
  { 0x0034, 0x0034, 0x0000, 0x0000},  // 1071; Use Count =     2
  { 0x0bea, 0x0bea, 0x0000, 0x0000},  // 1072; Use Count =     1
  { 0x0beb, 0x0beb, 0x0000, 0x0000},  // 1073; Use Count =     1
  { 0x0bec, 0x0bec, 0x0000, 0x0000},  // 1074; Use Count =     1
  { 0x0bed, 0x0bed, 0x0000, 0x0000},  // 1075; Use Count =     1
  { 0x0bee, 0x0bee, 0x0000, 0x0000},  // 1076; Use Count =     1
  { 0x0039, 0x0039, 0x0000, 0x0000},  // 1077; Use Count =     2
  { 0x0bef, 0x0bef, 0x0000, 0x0000},  // 1078; Use Count =     1
  { 0x0bcb, 0x0bcb, 0x0b93, 0x0b93},  // 1079; Use Count =     1
  { 0x0bb5, 0x0bb5, 0x0bb4, 0x0bb4},  // 1080; Use Count =     1
  { 0x0bae, 0x0bae, 0x0ba3, 0x0ba3},  // 1081; Use Count =     1
  { 0x0bcd, 0x0bcd, 0x0b85, 0x0b85},  // 1082; Use Count =     1
  { 0x0bbe, 0x0bbe, 0x0b86, 0x0b86},  // 1083; Use Count =     1
  { 0x0bbf, 0x0bbf, 0x0b87, 0x0b87},  // 1084; Use Count =     1
  { 0x0bc1, 0x0bc1, 0x0b89, 0x0b89},  // 1085; Use Count =     1
  { 0x0baa, 0x0baa, 0x0baa, 0x0baa},  // 1086; Use Count =     2
  { 0x0b95, 0x0b95, 0x0b95, 0x0b95},  // 1087; Use Count =     2
  { 0x0bb0, 0x0bb0, 0x0bb1, 0x0bb1},  // 1088; Use Count =     1
  { 0x0ba4, 0x0ba4, 0x0ba4, 0x0ba4},  // 1089; Use Count =     2
  { 0x0bb8, 0x0bb8, 0x0bb7, 0x0bb7},  // 1090; Use Count =     1
  { 0x0bb2, 0x0bb2, 0x0bb3, 0x0bb3},  // 1091; Use Count =     1
  { 0x0b9c, 0x0b9c, 0x0b9a, 0x0b9a},  // 1092; Use Count =     1
  { 0x0bcc, 0x0bcc, 0x0b94, 0x0b94},  // 1093; Use Count =     1
  { 0x0bc0, 0x0bc0, 0x0b88, 0x0b88},  // 1094; Use Count =     1
  { 0x0bc7, 0x0bc7, 0x0b8f, 0x0b8f},  // 1095; Use Count =     1
  { 0x0bc2, 0x0bc2, 0x0b8a, 0x0b8a},  // 1096; Use Count =     1
  { 0x0bb9, 0x0bb9, 0x0b99, 0x0b99},  // 1097; Use Count =     1
  { 0x0ba8, 0x0ba8, 0x0ba9, 0x0ba9},  // 1098; Use Count =     1
  { 0x0bc8, 0x0bc8, 0x0b90, 0x0b90},  // 1099; Use Count =     1
  { 0x0bc6, 0x0bc6, 0x0b8e, 0x0b8e},  // 1100; Use Count =     1
  { 0x0b9a, 0x0b9a, 0x0b9a, 0x0b9a},  // 1101; Use Count =     1
  { 0x0bf2, 0x0bf2, 0x0000, 0x0000},  // 1102; Use Count =     1
  { 0x002c, 0x002c, 0x0bb7, 0x0bb7},  // 1103; Use Count =     1
  { 0x002d, 0x002d, 0x0b83, 0x0b83},  // 1104; Use Count =     1
  { 0x0bf1, 0x0bf1, 0x0000, 0x0000},  // 1105; Use Count =     1
  { 0x002e, 0x002e, 0xfffc, 0xfffc},  // 1106; Use Count =     1
  { 0x0baf, 0x0baf, 0x0baf, 0x0baf},  // 1107; Use Count =     1
  { 0x0bca, 0x0bca, 0x0b92, 0x0b92},  // 1108; Use Count =     1
  { 0x0b9f, 0x0b9f, 0x0b9f, 0x0b9f},  // 1109; Use Count =     2
  { 0x0b9e, 0x0b9e, 0x0b9e, 0x0b9e},  // 1110; Use Count =     1
  { 0x0c66, 0x0c66, 0x0000, 0x0000},  // 1111; Use Count =     1
  { 0x0c67, 0x0c67, 0x0000, 0x0000},  // 1112; Use Count =     1
  { 0x0c68, 0x0c68, 0x0000, 0x0000},  // 1113; Use Count =     1
  { 0x0c69, 0x0c69, 0x0000, 0x0000},  // 1114; Use Count =     1
  { 0x0c6a, 0x0c6a, 0x0000, 0x0000},  // 1115; Use Count =     1
  { 0x0c6b, 0x0c6b, 0x0000, 0x0000},  // 1116; Use Count =     1
  { 0x0c6c, 0x0c6c, 0x0000, 0x0000},  // 1117; Use Count =     1
  { 0x0c6d, 0x0c6d, 0x0000, 0x0000},  // 1118; Use Count =     1
  { 0x0c6e, 0x0c6e, 0x0000, 0x0000},  // 1119; Use Count =     1
  { 0x0c6f, 0x0c6f, 0x0000, 0x0000},  // 1120; Use Count =     1
  { 0x0c4b, 0x0c4b, 0x0c13, 0x0c13},  // 1121; Use Count =     1
  { 0x0c35, 0x0c35, 0x0000, 0x0000},  // 1122; Use Count =     1
  { 0x0c2e, 0x0c2e, 0x0c23, 0x0c23},  // 1123; Use Count =     1
  { 0x0c4d, 0x0c4d, 0x0c05, 0x0c05},  // 1124; Use Count =     1
  { 0x0c3e, 0x0c3e, 0x0c06, 0x0c06},  // 1125; Use Count =     1
  { 0x0c3f, 0x0c3f, 0x0c07, 0x0c07},  // 1126; Use Count =     1
  { 0x0000, 0x0000, 0x0c0c, 0x0c0c},  // 1127; Use Count =     1
  { 0x0c41, 0x0c41, 0x0c09, 0x0c09},  // 1128; Use Count =     1
  { 0x0c2a, 0x0c2a, 0x0c2b, 0x0c2b},  // 1129; Use Count =     1
  { 0x0c17, 0x0c17, 0x0c18, 0x0c18},  // 1130; Use Count =     1
  { 0x0c30, 0x0c30, 0x0c31, 0x0c31},  // 1131; Use Count =     1
  { 0x0c15, 0x0c15, 0x0c16, 0x0c16},  // 1132; Use Count =     1
  { 0x0c24, 0x0c24, 0x0c25, 0x0c25},  // 1133; Use Count =     1
  { 0x0c38, 0x0c38, 0x0c36, 0x0c36},  // 1134; Use Count =     1
  { 0x0c32, 0x0c32, 0x0c33, 0x0c33},  // 1135; Use Count =     1
  { 0x0c26, 0x0c26, 0x0c27, 0x0c27},  // 1136; Use Count =     1
  { 0x0c1c, 0x0c1c, 0x0c1d, 0x0c1d},  // 1137; Use Count =     1
  { 0x0c4c, 0x0c4c, 0x0c14, 0x0c14},  // 1138; Use Count =     1
  { 0x0c40, 0x0c40, 0x0c08, 0x0c08},  // 1139; Use Count =     1
  { 0x0000, 0x0000, 0x0c61, 0x0c61},  // 1140; Use Count =     1
  { 0x0c47, 0x0c47, 0x0c0f, 0x0c0f},  // 1141; Use Count =     1
  { 0x0c55, 0x0c55, 0x0000, 0x0000},  // 1142; Use Count =     1
  { 0x0c42, 0x0c42, 0x0c0a, 0x0c0a},  // 1143; Use Count =     1
  { 0x0c39, 0x0c39, 0x0c19, 0x0c19},  // 1144; Use Count =     1
  { 0x0c28, 0x0c28, 0x0c28, 0x0c28},  // 1145; Use Count =     1
  { 0x0c48, 0x0c48, 0x0c10, 0x0c10},  // 1146; Use Count =     1
  { 0x0c56, 0x0c56, 0x0000, 0x0000},  // 1147; Use Count =     1
  { 0x0c02, 0x0c02, 0x0c01, 0x0c01},  // 1148; Use Count =     1
  { 0x0c2c, 0x0c2c, 0x0c2d, 0x0c2d},  // 1149; Use Count =     1
  { 0x0c46, 0x0c46, 0x0c0e, 0x0c0e},  // 1150; Use Count =     1
  { 0x0c1a, 0x0c1a, 0x0c1b, 0x0c1b},  // 1151; Use Count =     1
  { 0x0c43, 0x0c43, 0x0c0b, 0x0c0b},  // 1152; Use Count =     1
  { 0x0c44, 0x0c44, 0x0c60, 0x0c60},  // 1153; Use Count =     1
  { 0x002c, 0x002c, 0x0c37, 0x0c37},  // 1154; Use Count =     1
  { 0x002d, 0x002d, 0x0c03, 0x0c03},  // 1155; Use Count =     1
  { 0x0c2f, 0x0c2f, 0x0000, 0x0000},  // 1156; Use Count =     1
  { 0x0c4a, 0x0c4a, 0x0c12, 0x0c12},  // 1157; Use Count =     1
  { 0x0c21, 0x0c21, 0x0c22, 0x0c22},  // 1158; Use Count =     1
  { 0x0000, 0x0000, 0x0c1e, 0x0c1e},  // 1159; Use Count =     1
  { 0x0c1f, 0x0c1f, 0x0c20, 0x0c20},  // 1160; Use Count =     1
  { 0x0ce6, 0x0ce6, 0x0000, 0x0000},  // 1161; Use Count =     1
  { 0x0ce7, 0x0ce7, 0x0000, 0x0000},  // 1162; Use Count =     1
  { 0x0ce8, 0x0ce8, 0x0000, 0x0000},  // 1163; Use Count =     1
  { 0x0ce9, 0x0ce9, 0x0000, 0x0000},  // 1164; Use Count =     1
  { 0x0cea, 0x0cea, 0x0000, 0x0000},  // 1165; Use Count =     1
  { 0x0ceb, 0x0ceb, 0x0000, 0x0000},  // 1166; Use Count =     1
  { 0x0cec, 0x0cec, 0x0000, 0x0000},  // 1167; Use Count =     1
  { 0x0ced, 0x0ced, 0x0000, 0x0000},  // 1168; Use Count =     1
  { 0x0cee, 0x0cee, 0x0000, 0x0000},  // 1169; Use Count =     1
  { 0x0cef, 0x0cef, 0x0000, 0x0000},  // 1170; Use Count =     1
  { 0x0ccb, 0x0ccb, 0x0c93, 0x0c93},  // 1171; Use Count =     1
  { 0x0cb5, 0x0cb5, 0x0000, 0x0000},  // 1172; Use Count =     1
  { 0x0cae, 0x0cae, 0x0ca3, 0x0ca3},  // 1173; Use Count =     1
  { 0x0ccd, 0x0ccd, 0x0c85, 0x0c85},  // 1174; Use Count =     1
  { 0x0cbe, 0x0cbe, 0x0c86, 0x0c86},  // 1175; Use Count =     1
  { 0x0cbf, 0x0cbf, 0x0c87, 0x0c87},  // 1176; Use Count =     1
  { 0x0000, 0x0000, 0x0c8c, 0x0c8c},  // 1177; Use Count =     1
  { 0x0cc1, 0x0cc1, 0x0c89, 0x0c89},  // 1178; Use Count =     1
  { 0x0caa, 0x0caa, 0x0cab, 0x0cab},  // 1179; Use Count =     1
  { 0x0000, 0x0000, 0x0cde, 0x0cde},  // 1180; Use Count =     1
  { 0x0c97, 0x0c97, 0x0c98, 0x0c98},  // 1181; Use Count =     1
  { 0x0cb0, 0x0cb0, 0x0cb1, 0x0cb1},  // 1182; Use Count =     1
  { 0x0c95, 0x0c95, 0x0c96, 0x0c96},  // 1183; Use Count =     1
  { 0x0ca4, 0x0ca4, 0x0ca5, 0x0ca5},  // 1184; Use Count =     1
  { 0x0cb8, 0x0cb8, 0x0cb6, 0x0cb6},  // 1185; Use Count =     1
  { 0x0cb2, 0x0cb2, 0x0cb3, 0x0cb3},  // 1186; Use Count =     1
  { 0x0ca6, 0x0ca6, 0x0ca7, 0x0ca7},  // 1187; Use Count =     1
  { 0x0c9c, 0x0c9c, 0x0c9d, 0x0c9d},  // 1188; Use Count =     1
  { 0x0ccc, 0x0ccc, 0x0c94, 0x0c94},  // 1189; Use Count =     1
  { 0x0cc0, 0x0cc0, 0x0c88, 0x0c88},  // 1190; Use Count =     1
  { 0x0000, 0x0000, 0x0ce1, 0x0ce1},  // 1191; Use Count =     1
  { 0x0cc7, 0x0cc7, 0x0c8f, 0x0c8f},  // 1192; Use Count =     1
  { 0x0cd5, 0x0cd5, 0x0000, 0x0000},  // 1193; Use Count =     1
  { 0x0cc2, 0x0cc2, 0x0c8a, 0x0c8a},  // 1194; Use Count =     1
  { 0x0cb9, 0x0cb9, 0x0c99, 0x0c99},  // 1195; Use Count =     1
  { 0x0ca8, 0x0ca8, 0x0000, 0x0000},  // 1196; Use Count =     1
  { 0x0cc8, 0x0cc8, 0x0c90, 0x0c90},  // 1197; Use Count =     1
  { 0x0cd6, 0x0cd6, 0x0000, 0x0000},  // 1198; Use Count =     1
  { 0x0c82, 0x0c82, 0x0000, 0x0000},  // 1199; Use Count =     1
  { 0x0cac, 0x0cac, 0x0cad, 0x0cad},  // 1200; Use Count =     1
  { 0x0cc6, 0x0cc6, 0x0c8e, 0x0c8e},  // 1201; Use Count =     1
  { 0x0c9a, 0x0c9a, 0x0c9b, 0x0c9b},  // 1202; Use Count =     1
  { 0x0cc3, 0x0cc3, 0x0c8b, 0x0c8b},  // 1203; Use Count =     1
  { 0x0cc4, 0x0cc4, 0x0ce0, 0x0ce0},  // 1204; Use Count =     1
  { 0x002c, 0x002c, 0x0cb7, 0x0cb7},  // 1205; Use Count =     1
  { 0x002d, 0x002d, 0x0c83, 0x0c83},  // 1206; Use Count =     1
  { 0x002e, 0x002e, 0x007c, 0x007c},  // 1207; Use Count =     1
  { 0x0caf, 0x0caf, 0x0000, 0x0000},  // 1208; Use Count =     1
  { 0x0cca, 0x0cca, 0x0c92, 0x0c92},  // 1209; Use Count =     1
  { 0x0ca1, 0x0ca1, 0x0ca2, 0x0ca2},  // 1210; Use Count =     1
  { 0x0000, 0x0000, 0x0c9e, 0x0c9e},  // 1211; Use Count =     1
  { 0x0c9f, 0x0c9f, 0x0ca0, 0x0ca0},  // 1212; Use Count =     1
  { 0x0966, 0x0966, 0x0029, 0x0029},  // 1213; Use Count =     2
  { 0x0967, 0x0967, 0x090d, 0x090d},  // 1214; Use Count =     1
  { 0x0968, 0x0968, 0x0945, 0x0945},  // 1215; Use Count =     1
  { 0x0969, 0x0969, 0xfffe, 0xfffe},  // 1216; Use Count =     1
  { 0x096a, 0x096a, 0xfffe, 0xfffe},  // 1217; Use Count =     1
  { 0x096b, 0x096b, 0xfffd, 0xfffd},  // 1218; Use Count =     1
  { 0x096c, 0x096c, 0xfffd, 0xfffd},  // 1219; Use Count =     1
  { 0x096d, 0x096d, 0xfffd, 0xfffd},  // 1220; Use Count =     1
  { 0x096e, 0x096e, 0xfffd, 0xfffd},  // 1221; Use Count =     1
  { 0x096f, 0x096f, 0x0028, 0x0028},  // 1222; Use Count =     2
  { 0x0935, 0x0935, 0x0000, 0x0000},  // 1223; Use Count =     2
  { 0x0928, 0x0928, 0x0000, 0x0000},  // 1224; Use Count =     2
  { 0x0000, 0x0000, 0x093d, 0x093d},  // 1225; Use Count =     1
  { 0x003f, 0x003f, 0x0030, 0x0030},  // 1226; Use Count =     1
  { 0x2116, 0x2116, 0x0031, 0x0031},  // 1227; Use Count =     2
  { 0x002d, 0x002d, 0x0032, 0x0032},  // 1228; Use Count =     3
  { 0x0022, 0x0022, 0x0033, 0x0033},  // 1229; Use Count =     1
  { 0x20ae, 0x20ae, 0x0034, 0x0034},  // 1230; Use Count =     1
  { 0x002e, 0x002e, 0x0036, 0x0036},  // 1231; Use Count =     1
  { 0x005f, 0x005f, 0x0037, 0x0037},  // 1232; Use Count =     1
  { 0x002c, 0x002c, 0x0038, 0x0038},  // 1233; Use Count =     1
  { 0x0025, 0x0025, 0x0039, 0x0039},  // 1234; Use Count =     1
  { 0x1e83, 0x1e82, 0x1e82, 0x1e83},  // 1235; Use Count =     1
  { 0x0027, 0x0027, 0x0040, 0x0040},  // 1236; Use Count =     4
  { 0x0023, 0x0023, 0x007e, 0x007e},  // 1237; Use Count =     4
  { 0x0060, 0x0060, 0x00ac, 0x00ac},  // 1238; Use Count =     3
  { 0x0253, 0x0181, 0x0181, 0x0253},  // 1239; Use Count =     1
  { 0x0257, 0x018a, 0x018a, 0x0257},  // 1240; Use Count =     1
  { 0x0199, 0x0198, 0x0198, 0x0199},  // 1241; Use Count =     1
  { 0x01b4, 0x01b3, 0x01b3, 0x01b4},  // 1242; Use Count =     1
  { 0x0000, 0x0000, 0x00a6, 0x00a6},  // 1243; Use Count =     4
  { 0x0000, 0x0000, 0x00a8, 0x00a8},  // 1244; Use Count =     1
  { 0x1ecb, 0x1eca, 0x1eca, 0x1ecb},  // 1245; Use Count =     1
  { 0x1e45, 0x1e44, 0x1e44, 0x1e45},  // 1246; Use Count =     1
  { 0x1ecd, 0x1ecc, 0x1ecc, 0x1ecd},  // 1247; Use Count =     1
  { 0x1ee5, 0x1ee4, 0x1ee4, 0x1ee5},  // 1248; Use Count =     1
  { 0x00f1, 0x0037, 0x0037, 0x00f1},  // 1249; Use Count =     1
  { 0x014b, 0x0039, 0x0039, 0x014b},  // 1250; Use Count =     1
  { 0x00f9, 0x00f9, 0x00c0, 0x00c0},  // 1251; Use Count =     1
  { 0x0029, 0x00c9, 0x00c9, 0x0029},  // 1252; Use Count =     1
  { 0x002a, 0x00d1, 0x00d1, 0x002a},  // 1253; Use Count =     1
  { 0x005e, 0x005e, 0x00a8, 0x00a8},  // 1254; Use Count =     2
  { 0x00e3, 0x00c3, 0x00c3, 0x00e3},  // 1255; Use Count =     1
  { 0x0021, 0x014a, 0x014a, 0x0021},  // 1256; Use Count =     1
  { 0x0031, 0x0031, 0x002b, 0x002b},  // 1257; Use Count =     2
  { 0x0033, 0x0033, 0x002a, 0x002a},  // 1258; Use Count =     2
  { 0x0034, 0x0034, 0x00e7, 0x00e7},  // 1259; Use Count =     2
  { 0x00fc, 0x00dc, 0x00e8, 0x00c8},  // 1260; Use Count =     1
  { 0x00a7, 0x00a7, 0x00b0, 0x00b0},  // 1261; Use Count =     2
  { 0x00a8, 0x00a8, 0x0021, 0x0021},  // 1262; Use Count =     2
  { 0x00e4, 0x00c4, 0x00e0, 0x00c0},  // 1263; Use Count =     1
  { 0x005e, 0x005e, 0x0060, 0x0060},  // 1264; Use Count =     2
  { 0x00f6, 0x00d6, 0x00e9, 0x00c9},  // 1265; Use Count =     1
  { 0x0024, 0x0024, 0x00a3, 0x00a3},  // 1266; Use Count =     2
  { 0x007d, 0x007d, 0x005d, 0x005d},  // 1267; Use Count =     1
  { 0x007c, 0x007c, 0x00b0, 0x00b0},  // 1268; Use Count =     1
  { 0x00bf, 0x00bf, 0x00a1, 0x00a1},  // 1269; Use Count =     1
  { 0x007b, 0x007b, 0x005b, 0x005b},  // 1270; Use Count =     1
  { 0x00a7, 0x0036, 0x0036, 0x00a7},  // 1271; Use Count =     3
  { 0x0021, 0x0038, 0x0038, 0x0021},  // 1272; Use Count =     3
  { 0x0024, 0x002a, 0x002a, 0x0024},  // 1273; Use Count =     3
  { 0x007e, 0x007e, 0x007e, 0x007e},  // 1274; Use Count =     4
  { 0x002d, 0x005f, 0x005f, 0x002d},  // 1275; Use Count =     3
  { 0x00b4, 0x00b4, 0x00b4, 0x00b4},  // 1276; Use Count =     5
  { 0x00b5, 0x00a3, 0x00a3, 0x00b5},  // 1277; Use Count =     3
  { 0x0060, 0x0060, 0x0060, 0x0060},  // 1278; Use Count =     7
  { 0x00b2, 0x00b2, 0x00b3, 0x00b3},  // 1279; Use Count =     4
  { 0x00ab, 0x00ab, 0x00bb, 0x00bb},  // 1280; Use Count =     2
  { 0x201a, 0x201a, 0x007e, 0x007e},  // 1281; Use Count =     1
  { 0x0458, 0x0408, 0x0408, 0x0458},  // 1282; Use Count =     3
  { 0x04b9, 0x04b8, 0x04b8, 0x04b9},  // 1283; Use Count =     1
  { 0x049d, 0x049c, 0x049c, 0x049d},  // 1284; Use Count =     1
  { 0x00b9, 0x00b9, 0x00a1, 0x00a1},  // 1285; Use Count =     3
  { 0x0040, 0x0040, 0x00b2, 0x00b2},  // 1286; Use Count =     1
  { 0x00b3, 0x00b3, 0x00a3, 0x00a3},  // 1287; Use Count =     2
  { 0x00bc, 0x00bc, 0x00a4, 0x00a4},  // 1288; Use Count =     2
  { 0x0036, 0x0036, 0x003f, 0x003f},  // 1289; Use Count =     3
  { 0x005d, 0x005d, 0x00b1, 0x00b1},  // 1290; Use Count =     1
  { 0x00a2, 0x00a2, 0x00a9, 0x00a9},  // 1291; Use Count =     3
  { 0x00b5, 0x00b5, 0x00ba, 0x00ba},  // 1292; Use Count =     3
  { 0x00b6, 0x00b6, 0x00ae, 0x00ae},  // 1293; Use Count =     3
  { 0x002c, 0x002c, 0x0027, 0x0027},  // 1294; Use Count =     3
  { 0x007c, 0x007c, 0x00bf, 0x00bf},  // 1295; Use Count =     1
  { 0x00e8, 0x00c8, 0x00c8, 0x00e8},  // 1296; Use Count =     2
  { 0x00e0, 0x00c0, 0x00c0, 0x00e0},  // 1297; Use Count =     2
  { 0x007e, 0x007e, 0x00a8, 0x00a8},  // 1298; Use Count =     1
  { 0x00b0, 0x00b0, 0x00b0, 0x00b0},  // 1299; Use Count =     1
  { 0x00f9, 0x00d9, 0x00d9, 0x00f9},  // 1300; Use Count =     2
  { 0x0459, 0x0409, 0x0409, 0x0459},  // 1301; Use Count =     2
  { 0x045a, 0x040a, 0x040a, 0x045a},  // 1302; Use Count =     2
  { 0x045f, 0x040f, 0x040f, 0x045f},  // 1303; Use Count =     2
  { 0x0455, 0x0405, 0x0405, 0x0455},  // 1304; Use Count =     2
  { 0x0452, 0x0402, 0x0402, 0x0452},  // 1305; Use Count =     2
  { 0x045b, 0x040b, 0x040b, 0x045b},  // 1306; Use Count =     2
  { 0x0033, 0x0033, 0x002f, 0x002f},  // 1307; Use Count =     2
  { 0x00af, 0x00af, 0x0000, 0x0000},  // 1308; Use Count =     1
  { 0x00ad, 0x00ad, 0x0000, 0x0000},  // 1309; Use Count =     3
  { 0x0023, 0x0023, 0x007c, 0x007c},  // 1310; Use Count =     1
  { 0x00e8, 0x00e8, 0x00fc, 0x00fc},  // 1311; Use Count =     1
  { 0x00e0, 0x00e0, 0x00e4, 0x00e4},  // 1312; Use Count =     1
  { 0x00e9, 0x00e9, 0x00f6, 0x00f6},  // 1313; Use Count =     1
  { 0x00a6, 0x00a6, 0x00a6, 0x00a6},  // 1314; Use Count =     1
  { 0x0029, 0x0029, 0x0000, 0x0000},  // 1315; Use Count =     1
  { 0x0021, 0x0021, 0x0000, 0x0000},  // 1316; Use Count =     2
  { 0x0028, 0x0028, 0x0000, 0x0000},  // 1317; Use Count =     1
  { 0x003c, 0x003c, 0x00d7, 0x00d7},  // 1318; Use Count =     1
  { 0x003e, 0x003e, 0x00f7, 0x00f7},  // 1319; Use Count =     1
  { 0x00a4, 0x00a4, 0x005e, 0x005e},  // 1320; Use Count =     1
  { 0x00df, 0x00df, 0x02dd, 0x02dd},  // 1321; Use Count =     2
  { 0x00b2, 0x00b2, 0x00b2, 0x00b2},  // 1322; Use Count =     1
  { 0x0033, 0x0033, 0x00a7, 0x00a7},  // 1323; Use Count =     1
  { 0x00b3, 0x00b3, 0x00b3, 0x00b3},  // 1324; Use Count =     1
  { 0x00b5, 0x00b5, 0x00b5, 0x00b5},  // 1325; Use Count =     1
  { 0x0023, 0x0023, 0x0027, 0x0027},  // 1326; Use Count =     1
  { 0x00df, 0x00df, 0x003f, 0x003f},  // 1327; Use Count =     1
  { 0x037e, 0x037e, 0x003a, 0x003a},  // 1328; Use Count =     1
  { 0x03c2, 0x03c2, 0x007e, 0x007e},  // 1329; Use Count =     1
  { 0x00bd, 0x00bd, 0x00b1, 0x00b1},  // 1330; Use Count =     2
  { 0x0023, 0x0023, 0x0040, 0x0040},  // 1331; Use Count =     2
  { 0x007d, 0x007d, 0x007b, 0x007b},  // 1332; Use Count =     2
  { 0x00a8, 0x00a8, 0x0385, 0x0385},  // 1333; Use Count =     2
  { 0x0030, 0x0030, 0x20a7, 0x20a7},  // 1334; Use Count =     1
  { 0x0031, 0x0031, 0x00aa, 0x00aa},  // 1335; Use Count =     1
  { 0x0034, 0x0034, 0x0028, 0x0028},  // 1336; Use Count =     1
  { 0x0035, 0x0035, 0x0029, 0x0029},  // 1337; Use Count =     1
  { 0x0036, 0x0036, 0x00a1, 0x00a1},  // 1338; Use Count =     1
  { 0x0037, 0x0037, 0x0021, 0x0021},  // 1339; Use Count =     1
  { 0x005f, 0x005f, 0x0000, 0x0000},  // 1340; Use Count =     2
  { 0x0038, 0x0038, 0x00bf, 0x00bf},  // 1341; Use Count =     1
  { 0x0039, 0x0039, 0x003f, 0x003f},  // 1342; Use Count =     1
  { 0x002d, 0x002d, 0x002b, 0x002b},  // 1343; Use Count =     2
  { 0x00a8, 0x00a8, 0x00a8, 0x00a8},  // 1344; Use Count =     1
  { 0x0027, 0x0027, 0x00b7, 0x00b7},  // 1345; Use Count =     1
  { 0x00f7, 0x00d7, 0x00d7, 0x00f7},  // 1346; Use Count =     1
  { 0x02db, 0x02db, 0x00b7, 0x00b7},  // 1347; Use Count =     1
  { 0x017c, 0x017c, 0x0144, 0x0144},  // 1348; Use Count =     1
  { 0x00f3, 0x00f3, 0x017a, 0x017a},  // 1349; Use Count =     1
  { 0x015b, 0x015b, 0x0107, 0x0107},  // 1350; Use Count =     1
  { 0x0105, 0x0105, 0x0119, 0x0119},  // 1351; Use Count =     1
  { 0x0219, 0x0218, 0x0218, 0x0219},  // 1352; Use Count =     2
  { 0x00b8, 0x00b8, 0x00b1, 0x00b1},  // 1353; Use Count =     2
  { 0x003c, 0x003c, 0x00ab, 0x00ab},  // 1354; Use Count =     1
  { 0x00a8, 0x00a8, 0x2013, 0x2013},  // 1355; Use Count =     2
  { 0x003e, 0x003e, 0x00bb, 0x00bb},  // 1356; Use Count =     1
  { 0x201e, 0x201e, 0x201d, 0x201d},  // 1357; Use Count =     1
  { 0x021b, 0x021a, 0x021a, 0x021b},  // 1358; Use Count =     2
  { 0x0025, 0x0025, 0x0030, 0x0030},  // 1359; Use Count =     1
  { 0x0022, 0x0022, 0x0034, 0x0034},  // 1360; Use Count =     1
  { 0x005f, 0x005f, 0x0038, 0x0038},  // 1361; Use Count =     1
  { 0x003f, 0x003f, 0x0039, 0x0039},  // 1362; Use Count =     1
  { 0x003b, 0x003b, 0x005c, 0x005c},  // 1363; Use Count =     1
  { 0x0021, 0x0021, 0x003d, 0x003d},  // 1364; Use Count =     1
  { 0x007c, 0x007c, 0x002b, 0x002b},  // 1365; Use Count =     1
  { 0x0e50, 0x0029, 0x0029, 0x0e50},  // 1366; Use Count =     1
  { 0x0e52, 0x0022, 0x0022, 0x0e52},  // 1367; Use Count =     1
  { 0x0e53, 0x002f, 0x002f, 0x0e53},  // 1368; Use Count =     1
  { 0x0e54, 0x002c, 0x002c, 0x0e54},  // 1369; Use Count =     1
  { 0x0e55, 0x003f, 0x003f, 0x0e55},  // 1370; Use Count =     1
  { 0x0e39, 0x0e38, 0x0e38, 0x0e39},  // 1371; Use Count =     1
  { 0x0e57, 0x005f, 0x005f, 0x0e57},  // 1372; Use Count =     1
  { 0x0e58, 0x002e, 0x002e, 0x0e58},  // 1373; Use Count =     1
  { 0x0e59, 0x0028, 0x0028, 0x0e59},  // 1374; Use Count =     1
  { 0x0e49, 0x0e4b, 0x0e4b, 0x0e49},  // 1375; Use Count =     1
  { 0x0e34, 0x0e31, 0x0e31, 0x0e34},  // 1376; Use Count =     1
  { 0x0e25, 0x0e10, 0x0e10, 0x0e25},  // 1377; Use Count =     1
  { 0x0e07, 0x0e33, 0x0e33, 0x0e07},  // 1378; Use Count =     1
  { 0x0e22, 0x0e46, 0x0e46, 0x0e22},  // 1379; Use Count =     1
  { 0x0e01, 0x0e13, 0x0e13, 0x0e01},  // 1380; Use Count =     1
  { 0x0e31, 0x0e4c, 0x0e4c, 0x0e31},  // 1381; Use Count =     1
  { 0x0e35, 0x0e37, 0x0e37, 0x0e35},  // 1382; Use Count =     1
  { 0x0e21, 0x0e0b, 0x0e0b, 0x0e21},  // 1383; Use Count =     1
  { 0x0e32, 0x0e1c, 0x0e1c, 0x0e32},  // 1384; Use Count =     1
  { 0x0e19, 0x0e0a, 0x0e0a, 0x0e19},  // 1385; Use Count =     1
  { 0x0e40, 0x0e42, 0x0e42, 0x0e40},  // 1386; Use Count =     1
  { 0x0e2a, 0x0e2e, 0x0e2e, 0x0e2a},  // 1387; Use Count =     1
  { 0x0e04, 0x0e28, 0x0e28, 0x0e04},  // 1388; Use Count =     1
  { 0x0e27, 0x0e16, 0x0e16, 0x0e27},  // 1389; Use Count =     1
  { 0x0e41, 0x0e12, 0x0e12, 0x0e41},  // 1390; Use Count =     1
  { 0x0e47, 0x0e4a, 0x0e4a, 0x0e47},  // 1391; Use Count =     1
  { 0x0e2d, 0x0e0d, 0x0e0d, 0x0e2d},  // 1392; Use Count =     1
  { 0x0e17, 0x0e18, 0x0e18, 0x0e17},  // 1393; Use Count =     1
  { 0x0e23, 0x0e29, 0x0e29, 0x0e23},  // 1394; Use Count =     1
  { 0x0e14, 0x0e1d, 0x0e1d, 0x0e14},  // 1395; Use Count =     1
  { 0x0e2b, 0x0e20, 0x0e20, 0x0e2b},  // 1396; Use Count =     1
  { 0x0e15, 0x0e24, 0x0e24, 0x0e15},  // 1397; Use Count =     1
  { 0x0e1b, 0x0e0f, 0x0e0f, 0x0e1b},  // 1398; Use Count =     1
  { 0x0e48, 0x0e36, 0x0e36, 0x0e48},  // 1399; Use Count =     1
  { 0x0e1a, 0x0e0e, 0x0e0e, 0x0e1a},  // 1400; Use Count =     1
  { 0x0e44, 0x0e06, 0x0e06, 0x0e44},  // 1401; Use Count =     1
  { 0x0e56, 0x0025, 0x0025, 0x0e56},  // 1402; Use Count =     1
  { 0x0e30, 0x0e1f, 0x0e1f, 0x0e30},  // 1403; Use Count =     1
  { 0x0e51, 0x002d, 0x002d, 0x0e51},  // 1404; Use Count =     1
  { 0x0e08, 0x0e09, 0x0e09, 0x0e08},  // 1405; Use Count =     1
  { 0x0e1e, 0x0e2c, 0x0e2c, 0x0e1e},  // 1406; Use Count =     1
  { 0x005f, 0x0e3f, 0x0e3f, 0x005f},  // 1407; Use Count =     1
  { 0x0e43, 0x0e2f, 0x0e2f, 0x0e43},  // 1408; Use Count =     1
  { 0xf8c7, 0x0e4d, 0x0e4d, 0xf8c7},  // 1409; Use Count =     2
  { 0x0e0c, 0x0e26, 0x0e26, 0x0e0c},  // 1410; Use Count =     1
  { 0x0e02, 0x0e11, 0x0e11, 0x0e02},  // 1411; Use Count =     1
  { 0x0023, 0x0023, 0x00b3, 0x00b3},  // 1412; Use Count =     1
  { 0x0037, 0x0037, 0x0027, 0x0027},  // 1413; Use Count =     1
  { 0x0000, 0x0000, 0x00aa, 0x00aa},  // 1414; Use Count =     2
  { 0x00ab, 0x00ab, 0x003c, 0x003c},  // 1415; Use Count =     1
  { 0x005c, 0x005c, 0x00bf, 0x00bf},  // 1416; Use Count =     1
  { 0x00df, 0x00a7, 0x00a7, 0x00df},  // 1417; Use Count =     1
  { 0x00bb, 0x00bb, 0x003e, 0x003e},  // 1418; Use Count =     1
  { 0x007c, 0x007c, 0x00a6, 0x00a6},  // 1419; Use Count =     1
  { 0x0020, 0x0020, 0x0000, 0x0000},  // 1420; Use Count =     1
  { 0x20ac, 0x20ac, 0x00a7, 0x00a7},  // 1421; Use Count =     1
  { 0x0000, 0x0000, 0x00b0, 0x00b0},  // 1422; Use Count =     1
  { 0x0000, 0x0000, 0x00d7, 0x00d7},  // 1423; Use Count =     1
  { 0x00b0, 0x00b0, 0x007c, 0x007c},  // 1424; Use Count =     1
  { 0x10d0, 0x10d0, 0x0000, 0x0000},  // 1425; Use Count =     2
  { 0x10fa, 0x10fa, 0x0000, 0x0000},  // 1426; Use Count =     1
  { 0x10d1, 0x10d1, 0x0000, 0x0000},  // 1427; Use Count =     2
  { 0x10ea, 0x10ea, 0x10e9, 0x10e9},  // 1428; Use Count =     1
  { 0x10d3, 0x10d3, 0x0000, 0x0000},  // 1429; Use Count =     2
  { 0x10d4, 0x10d4, 0x0000, 0x0000},  // 1430; Use Count =     2
  { 0x10e4, 0x10e4, 0x0000, 0x0000},  // 1431; Use Count =     2
  { 0x10d2, 0x10d2, 0x0000, 0x0000},  // 1432; Use Count =     2
  { 0x10f9, 0x10f9, 0x0000, 0x0000},  // 1433; Use Count =     1
  { 0x10f0, 0x10f0, 0x0000, 0x0000},  // 1434; Use Count =     2
  { 0x10d8, 0x10d8, 0x0000, 0x0000},  // 1435; Use Count =     2
  { 0x10ef, 0x10ef, 0x10df, 0x10df},  // 1436; Use Count =     1
  { 0x10f7, 0x10f7, 0x0000, 0x0000},  // 1437; Use Count =     1
  { 0x10d9, 0x10d9, 0x0000, 0x0000},  // 1438; Use Count =     2
  { 0x10da, 0x10da, 0x0000, 0x0000},  // 1439; Use Count =     2
  { 0x10db, 0x10db, 0x0000, 0x0000},  // 1440; Use Count =     2
  { 0x10dc, 0x10dc, 0x004e, 0x004e},  // 1441; Use Count =     1
  { 0x10fc, 0x10fc, 0x0000, 0x0000},  // 1442; Use Count =     1
  { 0x10dd, 0x10dd, 0x0000, 0x0000},  // 1443; Use Count =     2
  { 0x10de, 0x10de, 0x0000, 0x0000},  // 1444; Use Count =     2
  { 0x10e5, 0x10e5, 0x0000, 0x0000},  // 1445; Use Count =     2
  { 0x10e0, 0x10e0, 0x10e6, 0x10e6},  // 1446; Use Count =     1
  { 0x10e1, 0x10e1, 0x10e8, 0x10e8},  // 1447; Use Count =     1
  { 0x10e2, 0x10e2, 0x10d7, 0x10d7},  // 1448; Use Count =     1
  { 0x10e3, 0x10e3, 0x0000, 0x0000},  // 1449; Use Count =     2
  { 0x10d5, 0x10d5, 0x0000, 0x0000},  // 1450; Use Count =     2
  { 0x10ec, 0x10ec, 0x10ed, 0x10ed},  // 1451; Use Count =     1
  { 0x10ee, 0x10ee, 0x0000, 0x0000},  // 1452; Use Count =     2
  { 0x10e7, 0x10e7, 0x0000, 0x0000},  // 1453; Use Count =     2
  { 0x10f8, 0x10f8, 0x0000, 0x0000},  // 1454; Use Count =     1
  { 0x10d6, 0x10d6, 0x10eb, 0x10eb},  // 1455; Use Count =     1
  { 0x2013, 0x2013, 0x0000, 0x0000},  // 1456; Use Count =     2
  { 0x2014, 0x2014, 0x0000, 0x0000},  // 1457; Use Count =     1
  { 0x10fb, 0x10fb, 0x0000, 0x0000},  // 1458; Use Count =     2
  { 0x007e, 0x007e, 0x007c, 0x007c},  // 1459; Use Count =     1
  { 0x0967, 0x0967, 0x0021, 0x0021},  // 1460; Use Count =     1
  { 0x0968, 0x0968, 0x0040, 0x0040},  // 1461; Use Count =     1
  { 0x0969, 0x0969, 0x0023, 0x0023},  // 1462; Use Count =     1
  { 0x096a, 0x096a, 0x0024, 0x0024},  // 1463; Use Count =     1
  { 0x096b, 0x096b, 0x0025, 0x0025},  // 1464; Use Count =     1
  { 0x096c, 0x096c, 0x005e, 0x005e},  // 1465; Use Count =     1
  { 0x096d, 0x096d, 0x0026, 0x0026},  // 1466; Use Count =     1
  { 0x096e, 0x096e, 0x002a, 0x002a},  // 1467; Use Count =     1
  { 0x007e, 0x007e, 0x02c7, 0x02c7},  // 1468; Use Count =     2
  { 0x09e6, 0x09e6, 0x0029, 0x0029},  // 1469; Use Count =     2
  { 0x09e7, 0x09e7, 0x0021, 0x0021},  // 1470; Use Count =     2
  { 0x09e8, 0x09e8, 0x0040, 0x0040},  // 1471; Use Count =     2
  { 0x09ea, 0x09ea, 0xfffe, 0xfffe},  // 1472; Use Count =     2
  { 0x09eb, 0x09eb, 0xfffd, 0xfffd},  // 1473; Use Count =     2
  { 0x09ec, 0x09ec, 0xfffd, 0xfffd},  // 1474; Use Count =     2
  { 0x09ed, 0x09ed, 0xfffd, 0xfffd},  // 1475; Use Count =     2
  { 0x09ee, 0x09ee, 0xfffd, 0xfffd},  // 1476; Use Count =     2
  { 0x09ef, 0x09ef, 0x0028, 0x0028},  // 1477; Use Count =     2
  { 0x09df, 0x09df, 0x09af, 0x09af},  // 1478; Use Count =     2
  { 0x06be, 0x06be, 0x0000, 0x0000},  // 1479; Use Count =     1
  { 0x0628, 0x0628, 0x0000, 0x0000},  // 1480; Use Count =     1
  { 0x063a, 0x063a, 0x0000, 0x0000},  // 1481; Use Count =     1
  { 0x062f, 0x062f, 0x0698, 0x0698},  // 1482; Use Count =     1
  { 0x06d0, 0x06d0, 0x0000, 0x0000},  // 1483; Use Count =     1
  { 0x0627, 0x0627, 0x0641, 0x0641},  // 1484; Use Count =     1
  { 0x06d5, 0x06d5, 0x06af, 0x06af},  // 1485; Use Count =     1
  { 0x0649, 0x0649, 0x062e, 0x062e},  // 1486; Use Count =     1
  { 0x06ad, 0x06ad, 0x0000, 0x0000},  // 1487; Use Count =     1
  { 0x0642, 0x0642, 0x062c, 0x062c},  // 1488; Use Count =     1
  { 0x0643, 0x0643, 0x06c6, 0x06c6},  // 1489; Use Count =     1
  { 0x0645, 0x0645, 0x0000, 0x0000},  // 1490; Use Count =     1
  { 0x0646, 0x0646, 0x0000, 0x0000},  // 1491; Use Count =     1
  { 0x0648, 0x0648, 0x0000, 0x0000},  // 1492; Use Count =     1
  { 0x067e, 0x067e, 0x0000, 0x0000},  // 1493; Use Count =     1
  { 0x0686, 0x0686, 0x0000, 0x0000},  // 1494; Use Count =     1
  { 0x0631, 0x0631, 0x0000, 0x0000},  // 1495; Use Count =     1
  { 0x062a, 0x062a, 0x0000, 0x0000},  // 1496; Use Count =     1
  { 0x06c7, 0x06c7, 0x0000, 0x0000},  // 1497; Use Count =     1
  { 0x06c8, 0x06c8, 0x0000, 0x0000},  // 1498; Use Count =     1
  { 0x06cb, 0x06cb, 0x0000, 0x0000},  // 1499; Use Count =     1
  { 0x0634, 0x0634, 0x0000, 0x0000},  // 1500; Use Count =     1
  { 0x064a, 0x064a, 0x0000, 0x0000},  // 1501; Use Count =     1
  { 0x0632, 0x0632, 0x0000, 0x0000},  // 1502; Use Count =     1
  { 0x002e, 0x002e, 0x003c, 0x003c},  // 1503; Use Count =     1
  { 0x0626, 0x0626, 0x061f, 0x061f},  // 1504; Use Count =     1
  { 0x005d, 0x005d, 0x00bb, 0x00bb},  // 1505; Use Count =     2
  { 0x005b, 0x005b, 0x00ab, 0x00ab},  // 1506; Use Count =     2
  { 0x00bc, 0x00bc, 0x20ac, 0x20ac},  // 1507; Use Count =     1
  { 0x00bd, 0x00bd, 0x215c, 0x215c},  // 1508; Use Count =     1
  { 0x00be, 0x00be, 0x215d, 0x215d},  // 1509; Use Count =     1
  { 0x0000, 0x0000, 0x215e, 0x215e},  // 1510; Use Count =     1
  { 0x0000, 0x0000, 0x2122, 0x2122},  // 1511; Use Count =     1
  { 0x00e6, 0x00e6, 0x00c6, 0x00c6},  // 1512; Use Count =     1
  { 0x201d, 0x201d, 0x2019, 0x2019},  // 1513; Use Count =     1
  { 0x00f0, 0x00f0, 0x00d0, 0x00d0},  // 1514; Use Count =     1
  { 0x0153, 0x0153, 0x0152, 0x0152},  // 1515; Use Count =     1
  { 0x014b, 0x014b, 0x014a, 0x014a},  // 1516; Use Count =     1
  { 0x0127, 0x0127, 0x0126, 0x0126},  // 1517; Use Count =     1
  { 0x2192, 0x2192, 0x0131, 0x0131},  // 1518; Use Count =     1
  { 0x0133, 0x0133, 0x0132, 0x0132},  // 1519; Use Count =     1
  { 0x0138, 0x0138, 0x0000, 0x0000},  // 1520; Use Count =     1
  { 0x0140, 0x0140, 0x013f, 0x013f},  // 1521; Use Count =     1
  { 0x0149, 0x0149, 0x266a, 0x266a},  // 1522; Use Count =     1
  { 0x00f8, 0x00f8, 0x00d8, 0x00d8},  // 1523; Use Count =     1
  { 0x00fe, 0x00fe, 0x00de, 0x00de},  // 1524; Use Count =     1
  { 0x0000, 0x0000, 0x2126, 0x2126},  // 1525; Use Count =     1
  { 0x0167, 0x0167, 0x0166, 0x0166},  // 1526; Use Count =     1
  { 0x2193, 0x2193, 0x2191, 0x2191},  // 1527; Use Count =     1
  { 0x201c, 0x201c, 0x2018, 0x2018},  // 1528; Use Count =     1
  { 0x0142, 0x0142, 0x0141, 0x0141},  // 1529; Use Count =     1
  { 0x2190, 0x2190, 0x00a5, 0x00a5},  // 1530; Use Count =     1
  { 0x00b4, 0x00b4, 0x02dd, 0x02dd},  // 1531; Use Count =     1
  { 0x00b8, 0x00b8, 0x02db, 0x02db},  // 1532; Use Count =     1
  { 0x2015, 0x2015, 0x00d7, 0x00d7},  // 1533; Use Count =     1
  { 0x0000, 0x0000, 0x00bf, 0x00bf},  // 1534; Use Count =     1
  { 0x002e, 0x002e, 0x0022, 0x0022},  // 1535; Use Count =     1
  { 0x00b7, 0x00b7, 0x00f7, 0x00f7},  // 1536; Use Count =     1
  { 0x0000, 0x0000, 0x00b7, 0x00b7},  // 1537; Use Count =     1
  { 0x0000, 0x0000, 0x02c7, 0x02c7},  // 1538; Use Count =     1
  { 0x0000, 0x0000, 0x02da, 0x02da},  // 1539; Use Count =     1
  { 0x0000, 0x0000, 0x02d8, 0x02d8},  // 1540; Use Count =     1
  { 0x007e, 0x007e, 0x00af, 0x00af},  // 1541; Use Count =     1
  { 0x002f, 0x002f, 0x005c, 0x005c},  // 1542; Use Count =     1
  { 0x0000, 0x0000, 0x00ad, 0x00ad},  // 1543; Use Count =     1
  { 0x00a6, 0x00a6, 0x00ac, 0x00ac},  // 1544; Use Count =     1
  { 0x00e9, 0x00e9, 0x0000, 0x0000},  // 1545; Use Count =     1
  { 0x011b, 0x011b, 0x0000, 0x0000},  // 1546; Use Count =     1
  { 0x0161, 0x0161, 0x0000, 0x0000},  // 1547; Use Count =     1
  { 0x010d, 0x010d, 0x0000, 0x0000},  // 1548; Use Count =     1
  { 0x0159, 0x0159, 0x0000, 0x0000},  // 1549; Use Count =     1
  { 0x017e, 0x017e, 0x0000, 0x0000},  // 1550; Use Count =     1
  { 0x00fd, 0x00fd, 0x0000, 0x0000},  // 1551; Use Count =     1
  { 0x00e1, 0x00e1, 0x0000, 0x0000},  // 1552; Use Count =     1
  { 0x016f, 0x016f, 0x0022, 0x0022},  // 1553; Use Count =     1
  { 0x003f, 0x003f, 0x00d7, 0x00d7},  // 1554; Use Count =     1
  { 0x003a, 0x003a, 0x00f7, 0x00f7},  // 1555; Use Count =     1
  { 0x0036, 0x0036, 0x00ac, 0x00ac},  // 1556; Use Count =     1
  { 0x00b7, 0x2015, 0x2015, 0x00b7},  // 1557; Use Count =     1
  { 0x03c2, 0x00a6, 0x00a6, 0x03c2},  // 1558; Use Count =     1
  { 0x0027, 0x0027, 0x00b0, 0x00b0},  // 1559; Use Count =     1
  { 0x2019, 0x2019, 0x2018, 0x2018},  // 1560; Use Count =     1
  { 0x00a7, 0x00a7, 0x00a9, 0x00a9},  // 1561; Use Count =     1
  { 0x201d, 0x201d, 0x0000, 0x0000},  // 1562; Use Count =     1
  { 0x0e08, 0x0e08, 0x0e57, 0x0e57},  // 1563; Use Count =     1
  { 0x0e45, 0x0e45, 0x002b, 0x002b},  // 1564; Use Count =     1
  { 0x002f, 0x002f, 0x0e51, 0x0e51},  // 1565; Use Count =     1
  { 0x002d, 0x002d, 0x0e52, 0x0e52},  // 1566; Use Count =     1
  { 0x0e20, 0x0e20, 0x0e53, 0x0e53},  // 1567; Use Count =     1
  { 0x0e16, 0x0e16, 0x0e54, 0x0e54},  // 1568; Use Count =     1
  { 0x0e38, 0x0e38, 0x0e39, 0x0e39},  // 1569; Use Count =     1
  { 0x0e36, 0x0e36, 0x0e3f, 0x0e3f},  // 1570; Use Count =     1
  { 0x0e04, 0x0e04, 0x0e55, 0x0e55},  // 1571; Use Count =     1
  { 0x0e15, 0x0e15, 0x0e56, 0x0e56},  // 1572; Use Count =     1
  { 0x0e1f, 0x0e1f, 0x0e24, 0x0e24},  // 1573; Use Count =     1
  { 0x0e34, 0x0e34, 0x0e3a, 0x0e3a},  // 1574; Use Count =     1
  { 0x0e41, 0x0e41, 0x0e09, 0x0e09},  // 1575; Use Count =     1
  { 0x0e01, 0x0e01, 0x0e0f, 0x0e0f},  // 1576; Use Count =     1
  { 0x0e33, 0x0e33, 0x0e0e, 0x0e0e},  // 1577; Use Count =     1
  { 0x0e14, 0x0e14, 0x0e42, 0x0e42},  // 1578; Use Count =     1
  { 0x0e40, 0x0e40, 0x0e0c, 0x0e0c},  // 1579; Use Count =     1
  { 0x0e49, 0x0e49, 0x0e47, 0x0e47},  // 1580; Use Count =     1
  { 0x0e23, 0x0e23, 0x0e13, 0x0e13},  // 1581; Use Count =     1
  { 0x0e48, 0x0e48, 0x0e4b, 0x0e4b},  // 1582; Use Count =     1
  { 0x0e32, 0x0e32, 0x0e29, 0x0e29},  // 1583; Use Count =     1
  { 0x0e2a, 0x0e2a, 0x0e28, 0x0e28},  // 1584; Use Count =     1
  { 0x0e17, 0x0e17, 0x003f, 0x003f},  // 1585; Use Count =     1
  { 0x0e37, 0x0e37, 0x0e4c, 0x0e4c},  // 1586; Use Count =     1
  { 0x0e19, 0x0e19, 0x0e2f, 0x0e2f},  // 1587; Use Count =     1
  { 0x0e22, 0x0e22, 0x0e0d, 0x0e0d},  // 1588; Use Count =     1
  { 0x0e46, 0x0e46, 0x0e50, 0x0e50},  // 1589; Use Count =     1
  { 0x0e1e, 0x0e1e, 0x0e11, 0x0e11},  // 1590; Use Count =     1
  { 0x0e2b, 0x0e2b, 0x0e06, 0x0e06},  // 1591; Use Count =     1
  { 0x0e30, 0x0e30, 0x0e18, 0x0e18},  // 1592; Use Count =     1
  { 0x0e35, 0x0e35, 0x0e4a, 0x0e4a},  // 1593; Use Count =     1
  { 0x0e2d, 0x0e2d, 0x0e2e, 0x0e2e},  // 1594; Use Count =     1
  { 0x0e44, 0x0e44, 0x0022, 0x0022},  // 1595; Use Count =     1
  { 0x0e1b, 0x0e1b, 0x0029, 0x0029},  // 1596; Use Count =     1
  { 0x0e31, 0x0e31, 0x0e4d, 0x0e4d},  // 1597; Use Count =     1
  { 0x0e1c, 0x0e1c, 0x0028, 0x0028},  // 1598; Use Count =     1
  { 0x0e27, 0x0e27, 0x0e0b, 0x0e0b},  // 1599; Use Count =     1
  { 0x0e0a, 0x0e0a, 0x0e59, 0x0e59},  // 1600; Use Count =     1
  { 0x0e21, 0x0e21, 0x0e12, 0x0e12},  // 1601; Use Count =     1
  { 0x0e02, 0x0e02, 0x0e58, 0x0e58},  // 1602; Use Count =     1
  { 0x0e43, 0x0e43, 0x0e2c, 0x0e2c},  // 1603; Use Count =     1
  { 0x0e1d, 0x0e1d, 0x0e26, 0x0e26},  // 1604; Use Count =     1
  { 0x005f, 0x005f, 0x0025, 0x0025},  // 1605; Use Count =     1
  { 0x0e1a, 0x0e1a, 0x0e10, 0x0e10},  // 1606; Use Count =     1
  { 0x0e03, 0x0e03, 0x0e05, 0x0e05},  // 1607; Use Count =     2
  { 0x0e25, 0x0e25, 0x002c, 0x002c},  // 1608; Use Count =     1
  { 0x0e07, 0x0e07, 0x002e, 0x002e},  // 1609; Use Count =     1
  { 0x0491, 0x0491, 0x0490, 0x0490},  // 1610; Use Count =     1
  { 0x0027, 0x0027, 0x20b4, 0x20b4},  // 1611; Use Count =     1
  { 0x003d, 0x003d, 0x0038, 0x0038},  // 1612; Use Count =     1
  { 0x003f, 0x003f, 0x002b, 0x002b},  // 1613; Use Count =     1
  { 0x0022, 0x0022, 0x0000, 0x0000},  // 1614; Use Count =     1
  { 0x0029, 0x0029, 0x00bb, 0x00bb},  // 1615; Use Count =     1
  { 0x2116, 0x2116, 0x0032, 0x0032},  // 1616; Use Count =     1
  { 0x002c, 0x002c, 0x0033, 0x0033},  // 1617; Use Count =     1
  { 0x0023, 0x0023, 0x00a7, 0x00a7},  // 1618; Use Count =     1
  { 0x003f, 0x003f, 0x0037, 0x0037},  // 1619; Use Count =     1
  { 0x002e, 0x002e, 0x0038, 0x0038},  // 1620; Use Count =     1
  { 0x002a, 0x002a, 0x00b0, 0x00b0},  // 1621; Use Count =     1
  { 0x0028, 0x0028, 0x00ab, 0x00ab},  // 1622; Use Count =     1
  { 0x10df, 0x10df, 0x0000, 0x0000},  // 1623; Use Count =     1
  { 0x10f8, 0x10f8, 0x0043, 0x0043},  // 1624; Use Count =     1
  { 0x10fa, 0x10fa, 0x0044, 0x0044},  // 1625; Use Count =     1
  { 0x10dc, 0x10dc, 0x0000, 0x0000},  // 1626; Use Count =     1
  { 0x10fc, 0x10fc, 0x0049, 0x0049},  // 1627; Use Count =     1
  { 0x10e1, 0x10e1, 0x0000, 0x0000},  // 1628; Use Count =     1
  { 0x10e0, 0x10e0, 0x0000, 0x0000},  // 1629; Use Count =     1
  { 0x0000, 0x0000, 0x004c, 0x004c},  // 1630; Use Count =     1
  { 0x10ea, 0x10ea, 0x0000, 0x0000},  // 1631; Use Count =     1
  { 0x0000, 0x0000, 0x004d, 0x004d},  // 1632; Use Count =     1
  { 0x10d6, 0x10d6, 0x0000, 0x0000},  // 1633; Use Count =     1
  { 0x10e8, 0x10e8, 0x0000, 0x0000},  // 1634; Use Count =     1
  { 0x10e9, 0x10e9, 0x0000, 0x0000},  // 1635; Use Count =     1
  { 0x10eb, 0x10eb, 0x0000, 0x0000},  // 1636; Use Count =     1
  { 0x10ed, 0x10ed, 0x0000, 0x0000},  // 1637; Use Count =     1
  { 0x10d7, 0x10d7, 0x0000, 0x0000},  // 1638; Use Count =     1
  { 0x10e6, 0x10e6, 0x0000, 0x0000},  // 1639; Use Count =     1
  { 0x10f7, 0x10f7, 0x0056, 0x0056},  // 1640; Use Count =     1
  { 0x10f5, 0x10f5, 0x0058, 0x0058},  // 1641; Use Count =     1
  { 0x10e2, 0x10e2, 0x0000, 0x0000},  // 1642; Use Count =     1
  { 0x10ef, 0x10ef, 0x0000, 0x0000},  // 1643; Use Count =     1
  { 0x201c, 0x201c, 0x003d, 0x003d},  // 1644; Use Count =     1
  { 0x003d, 0x003d, 0x0000, 0x0000},  // 1645; Use Count =     1
  { 0x0000, 0x0000, 0x003c, 0x003c},  // 1646; Use Count =     1
  { 0x2014, 0x2014, 0x005f, 0x005f},  // 1647; Use Count =     1
  { 0x10f6, 0x10f6, 0x003e, 0x003e},  // 1648; Use Count =     1
  { 0x10ec, 0x10ec, 0x0000, 0x0000},  // 1649; Use Count =     1
  { 0x201e, 0x201e, 0x0027, 0x0027},  // 1650; Use Count =     1
  { 0x002f, 0x002f, 0x00a7, 0x00a7},  // 1651; Use Count =     1
  { 0x10f9, 0x10f9, 0x0022, 0x0022},  // 1652; Use Count =     1
  { 0x09e9, 0x09e9, 0xfffe, 0xfffe},  // 1653; Use Count =     1
  { 0x0039, 0x0039, 0x2013, 0x2013},  // 1654; Use Count =     1
  { 0x044c, 0x042c, 0x045d, 0x040d},  // 1655; Use Count =     2
  { 0x002c, 0x002c, 0x044b, 0x042b},  // 1656; Use Count =     1
  { 0x002d, 0x002d, 0x0024, 0x0024},  // 1657; Use Count =     1
  { 0x002e, 0x002e, 0x20ac, 0x20ac},  // 1658; Use Count =     1
  { 0x045d, 0x040d, 0x040d, 0x045d},  // 1659; Use Count =     1
  { 0x0e50, 0x0e50, 0x0029, 0x0029},  // 1660; Use Count =     1
  { 0x0e52, 0x0e52, 0x0022, 0x0022},  // 1661; Use Count =     1
  { 0x0e53, 0x0e53, 0x002f, 0x002f},  // 1662; Use Count =     1
  { 0x0e54, 0x0e54, 0x002c, 0x002c},  // 1663; Use Count =     1
  { 0x0e55, 0x0e55, 0x003f, 0x003f},  // 1664; Use Count =     1
  { 0x0e39, 0x0e39, 0x0e38, 0x0e38},  // 1665; Use Count =     1
  { 0x0e57, 0x0e57, 0x005f, 0x005f},  // 1666; Use Count =     1
  { 0x0e58, 0x0e58, 0x002e, 0x002e},  // 1667; Use Count =     1
  { 0x0e59, 0x0e59, 0x0028, 0x0028},  // 1668; Use Count =     1
  { 0x0e49, 0x0e49, 0x0e4b, 0x0e4b},  // 1669; Use Count =     1
  { 0x0e34, 0x0e34, 0x0e31, 0x0e31},  // 1670; Use Count =     1
  { 0x0e25, 0x0e25, 0x0e10, 0x0e10},  // 1671; Use Count =     1
  { 0x0e07, 0x0e07, 0x0e33, 0x0e33},  // 1672; Use Count =     1
  { 0x0e22, 0x0e22, 0x0e46, 0x0e46},  // 1673; Use Count =     1
  { 0x0e01, 0x0e01, 0x0e13, 0x0e13},  // 1674; Use Count =     1
  { 0x0e31, 0x0e31, 0x0e4c, 0x0e4c},  // 1675; Use Count =     1
  { 0x0e35, 0x0e35, 0x0e37, 0x0e37},  // 1676; Use Count =     1
  { 0x0e21, 0x0e21, 0x0e0b, 0x0e0b},  // 1677; Use Count =     1
  { 0x0e32, 0x0e32, 0x0e1c, 0x0e1c},  // 1678; Use Count =     1
  { 0x0e19, 0x0e19, 0x0e0a, 0x0e0a},  // 1679; Use Count =     1
  { 0x0e40, 0x0e40, 0x0e42, 0x0e42},  // 1680; Use Count =     1
  { 0x0e2a, 0x0e2a, 0x0e2e, 0x0e2e},  // 1681; Use Count =     1
  { 0x0e04, 0x0e04, 0x0e28, 0x0e28},  // 1682; Use Count =     1
  { 0x0e27, 0x0e27, 0x0e16, 0x0e16},  // 1683; Use Count =     1
  { 0x0e41, 0x0e41, 0x0e12, 0x0e12},  // 1684; Use Count =     1
  { 0x0e47, 0x0e47, 0x0e4a, 0x0e4a},  // 1685; Use Count =     1
  { 0x0e2d, 0x0e2d, 0x0e0d, 0x0e0d},  // 1686; Use Count =     1
  { 0x0e17, 0x0e17, 0x0e18, 0x0e18},  // 1687; Use Count =     1
  { 0x0e23, 0x0e23, 0x0e29, 0x0e29},  // 1688; Use Count =     1
  { 0x0e14, 0x0e14, 0x0e1d, 0x0e1d},  // 1689; Use Count =     1
  { 0x0e2b, 0x0e2b, 0x0e20, 0x0e20},  // 1690; Use Count =     1
  { 0x0e15, 0x0e15, 0x0e24, 0x0e24},  // 1691; Use Count =     1
  { 0x0e1b, 0x0e1b, 0x0e0f, 0x0e0f},  // 1692; Use Count =     1
  { 0x0e48, 0x0e48, 0x0e36, 0x0e36},  // 1693; Use Count =     1
  { 0x0e1a, 0x0e1a, 0x0e0e, 0x0e0e},  // 1694; Use Count =     1
  { 0x0e44, 0x0e44, 0x0e06, 0x0e06},  // 1695; Use Count =     1
  { 0x0e56, 0x0e56, 0x0025, 0x0025},  // 1696; Use Count =     1
  { 0x0e30, 0x0e30, 0x0e1f, 0x0e1f},  // 1697; Use Count =     1
  { 0x0e51, 0x0e51, 0x002d, 0x002d},  // 1698; Use Count =     1
  { 0x0e08, 0x0e08, 0x0e09, 0x0e09},  // 1699; Use Count =     1
  { 0x0e1e, 0x0e1e, 0x0e2c, 0x0e2c},  // 1700; Use Count =     1
  { 0x005f, 0x005f, 0x0e3f, 0x0e3f},  // 1701; Use Count =     1
  { 0x0e43, 0x0e43, 0x0e2f, 0x0e2f},  // 1702; Use Count =     1
  { 0xf8c7, 0xf8c7, 0x0e4d, 0x0e4d},  // 1703; Use Count =     2
  { 0x0e0c, 0x0e0c, 0x0e26, 0x0e26},  // 1704; Use Count =     1
  { 0x0e02, 0x0e02, 0x0e11, 0x0e11},  // 1705; Use Count =     1
  { 0x0036, 0x0036, 0x20ac, 0x20ac},  // 1706; Use Count =     1
  { 0x0037, 0x0037, 0x00a7, 0x00a7},  // 1707; Use Count =     1
  { 0x0000, 0x0000, 0x042b, 0x042b},  // 1708; Use Count =     1
  { 0x0000, 0x0000, 0x042d, 0x042d},  // 1709; Use Count =     1
  { 0x0060, 0x0060, 0x0040, 0x0040},  // 1710; Use Count =     1
  { 0x005e, 0x005e, 0x007e, 0x007e},  // 1711; Use Count =     1
  { 0x03da, 0x03da, 0x0000, 0x0000},  // 1712; Use Count =     1
  { 0x03de, 0x03de, 0x00b2, 0x00b2},  // 1713; Use Count =     1
  { 0x03e0, 0x03e0, 0x00b3, 0x00b3},  // 1714; Use Count =     1
  { 0x1ffd, 0x1ffd, 0x0000, 0x0000},  // 1715; Use Count =     1
  { 0x00bd, 0x00bd, 0x1fdf, 0x1fdf},  // 1716; Use Count =     1
  { 0x1fbe, 0x1fbe, 0x1fde, 0x1fde},  // 1717; Use Count =     1
  { 0x007e, 0x007e, 0x0060, 0x0060},  // 1718; Use Count =     1
  { 0x1fc1, 0x1fc1, 0x0000, 0x0000},  // 1719; Use Count =     1
  { 0x00ac, 0x00ac, 0x1fdd, 0x1fdd},  // 1720; Use Count =     1
  { 0x00bb, 0x00bb, 0x0387, 0x0387},  // 1721; Use Count =     1
  { 0x1fbf, 0x1fbf, 0x1ffe, 0x1ffe},  // 1722; Use Count =     1
  { 0x20ac, 0x20ac, 0x007e, 0x007e},  // 1723; Use Count =     2
  { 0x624b, 0x624b, 0x0071, 0x0051},  // 1724; Use Count =     1
  { 0x7530, 0x7530, 0x0077, 0x0057},  // 1725; Use Count =     1
  { 0x6c34, 0x6c34, 0x0065, 0x0045},  // 1726; Use Count =     1
  { 0x53e3, 0x53e3, 0x0072, 0x0052},  // 1727; Use Count =     1
  { 0x5eff, 0x5eff, 0x0074, 0x0054},  // 1728; Use Count =     1
  { 0x535c, 0x535c, 0x0079, 0x0059},  // 1729; Use Count =     1
  { 0x5c71, 0x5c71, 0x0075, 0x0055},  // 1730; Use Count =     1
  { 0x6208, 0x6208, 0x0069, 0x0049},  // 1731; Use Count =     1
  { 0x4eba, 0x4eba, 0x006f, 0x004f},  // 1732; Use Count =     1
  { 0x5fc3, 0x5fc3, 0x0070, 0x0050},  // 1733; Use Count =     1
  { 0x65e5, 0x65e5, 0x0061, 0x0041},  // 1734; Use Count =     1
  { 0x5c38, 0x5c38, 0x0073, 0x0053},  // 1735; Use Count =     1
  { 0x6728, 0x6728, 0x0064, 0x0044},  // 1736; Use Count =     1
  { 0x706b, 0x706b, 0x0066, 0x0046},  // 1737; Use Count =     1
  { 0x571f, 0x571f, 0x0067, 0x0047},  // 1738; Use Count =     1
  { 0x7af9, 0x7af9, 0x0068, 0x0048},  // 1739; Use Count =     1
  { 0x5341, 0x5341, 0x006a, 0x004a},  // 1740; Use Count =     1
  { 0x5927, 0x5927, 0x006b, 0x004b},  // 1741; Use Count =     1
  { 0x4e2d, 0x4e2d, 0x006c, 0x004c},  // 1742; Use Count =     1
  { 0xff3a, 0xff3a, 0x007a, 0x005a},  // 1743; Use Count =     1
  { 0x96e3, 0x96e3, 0x0078, 0x0058},  // 1744; Use Count =     1
  { 0x91d1, 0x91d1, 0x0063, 0x0043},  // 1745; Use Count =     1
  { 0x5973, 0x5973, 0x0076, 0x0056},  // 1746; Use Count =     1
  { 0x6708, 0x6708, 0x0062, 0x0042},  // 1747; Use Count =     1
  { 0x5f13, 0x5f13, 0x006e, 0x004e},  // 1748; Use Count =     1
  { 0x4e00, 0x4e00, 0x006d, 0x004d},  // 1749; Use Count =     1
  { 0x3105, 0x3105, 0x0021, 0x0021},  // 1750; Use Count =     1
  { 0x3109, 0x3109, 0x0040, 0x0040},  // 1751; Use Count =     1
  { 0x02c7, 0x02c7, 0x0023, 0x0023},  // 1752; Use Count =     1
  { 0x02bd, 0x02bd, 0x0024, 0x0024},  // 1753; Use Count =     1
  { 0x3113, 0x3113, 0x0025, 0x0025},  // 1754; Use Count =     1
  { 0x02ca, 0x02ca, 0x005e, 0x005e},  // 1755; Use Count =     1
  { 0x02d9, 0x02d9, 0x0026, 0x0026},  // 1756; Use Count =     1
  { 0x311a, 0x311a, 0x002a, 0x002a},  // 1757; Use Count =     1
  { 0x311e, 0x311e, 0x0029, 0x0029},  // 1758; Use Count =     1
  { 0x3122, 0x3122, 0x0028, 0x0028},  // 1759; Use Count =     1
  { 0x3126, 0x3126, 0x005f, 0x005f},  // 1760; Use Count =     1
  { 0x3106, 0x3106, 0x0071, 0x0051},  // 1761; Use Count =     1
  { 0x310a, 0x310a, 0x0077, 0x0057},  // 1762; Use Count =     1
  { 0x310d, 0x310d, 0x0065, 0x0045},  // 1763; Use Count =     1
  { 0x3110, 0x3110, 0x0072, 0x0052},  // 1764; Use Count =     1
  { 0x3114, 0x3114, 0x0074, 0x0054},  // 1765; Use Count =     1
  { 0x3117, 0x3117, 0x0079, 0x0059},  // 1766; Use Count =     1
  { 0x3127, 0x3127, 0x0075, 0x0055},  // 1767; Use Count =     1
  { 0x311b, 0x311b, 0x0069, 0x0049},  // 1768; Use Count =     1
  { 0x311f, 0x311f, 0x006f, 0x004f},  // 1769; Use Count =     1
  { 0x3123, 0x3123, 0x0070, 0x0050},  // 1770; Use Count =     1
  { 0x3107, 0x3107, 0x0061, 0x0041},  // 1771; Use Count =     1
  { 0x310b, 0x310b, 0x0073, 0x0053},  // 1772; Use Count =     1
  { 0x310e, 0x310e, 0x0064, 0x0044},  // 1773; Use Count =     1
  { 0x3111, 0x3111, 0x0066, 0x0046},  // 1774; Use Count =     1
  { 0x3115, 0x3115, 0x0067, 0x0047},  // 1775; Use Count =     1
  { 0x3118, 0x3118, 0x0068, 0x0048},  // 1776; Use Count =     1
  { 0x3128, 0x3128, 0x006a, 0x004a},  // 1777; Use Count =     1
  { 0x311c, 0x311c, 0x006b, 0x004b},  // 1778; Use Count =     1
  { 0x3120, 0x3120, 0x006c, 0x004c},  // 1779; Use Count =     1
  { 0x3124, 0x3124, 0x003a, 0x003a},  // 1780; Use Count =     1
  { 0x3108, 0x3108, 0x007a, 0x005a},  // 1781; Use Count =     1
  { 0x310c, 0x310c, 0x0078, 0x0058},  // 1782; Use Count =     1
  { 0x310f, 0x310f, 0x0063, 0x0043},  // 1783; Use Count =     1
  { 0x3112, 0x3112, 0x0076, 0x0056},  // 1784; Use Count =     1
  { 0x3116, 0x3116, 0x0062, 0x0042},  // 1785; Use Count =     1
  { 0x3119, 0x3119, 0x006e, 0x004e},  // 1786; Use Count =     1
  { 0x3129, 0x3129, 0x006d, 0x004d},  // 1787; Use Count =     1
  { 0x311d, 0x311d, 0x003c, 0x003c},  // 1788; Use Count =     1
  { 0x3121, 0x3121, 0x003e, 0x003e},  // 1789; Use Count =     1
  { 0x3125, 0x3125, 0x003f, 0x003f},  // 1790; Use Count =     1
  { 0x1107, 0x1107, 0x1108, 0x1108},  // 1791; Use Count =     1
  { 0x110c, 0x110c, 0x110d, 0x110d},  // 1792; Use Count =     1
  { 0x1103, 0x1103, 0x1104, 0x1104},  // 1793; Use Count =     1
  { 0x1100, 0x1100, 0x1101, 0x1101},  // 1794; Use Count =     1
  { 0x1109, 0x1109, 0x110a, 0x110a},  // 1795; Use Count =     1
  { 0x116d, 0x116d, 0x0000, 0x0000},  // 1796; Use Count =     1
  { 0x1167, 0x1167, 0x0000, 0x0000},  // 1797; Use Count =     1
  { 0x1163, 0x1163, 0x0000, 0x0000},  // 1798; Use Count =     1
  { 0x1162, 0x1162, 0x1164, 0x1164},  // 1799; Use Count =     1
  { 0x1166, 0x1166, 0x1168, 0x1168},  // 1800; Use Count =     1
  { 0x20a9, 0x20a9, 0x007c, 0x007c},  // 1801; Use Count =     2
  { 0x1106, 0x1106, 0x0000, 0x0000},  // 1802; Use Count =     1
  { 0x1102, 0x1102, 0x0000, 0x0000},  // 1803; Use Count =     1
  { 0x110b, 0x110b, 0x0000, 0x0000},  // 1804; Use Count =     1
  { 0x1105, 0x1105, 0x0000, 0x0000},  // 1805; Use Count =     1
  { 0x1112, 0x1112, 0x0000, 0x0000},  // 1806; Use Count =     1
  { 0x1169, 0x1169, 0x0000, 0x0000},  // 1807; Use Count =     1
  { 0x1165, 0x1165, 0x0000, 0x0000},  // 1808; Use Count =     1
  { 0x1161, 0x1161, 0x0000, 0x0000},  // 1809; Use Count =     1
  { 0x1175, 0x1175, 0x0000, 0x0000},  // 1810; Use Count =     1
  { 0x003b, 0x003a, 0x003a, 0x003a},  // 1811; Use Count =     1
  { 0x0027, 0x0022, 0x0022, 0x0022},  // 1812; Use Count =     1
  { 0x110f, 0x110f, 0x0000, 0x0000},  // 1813; Use Count =     1
  { 0x1110, 0x1110, 0x0000, 0x0000},  // 1814; Use Count =     1
  { 0x110e, 0x110e, 0x0000, 0x0000},  // 1815; Use Count =     1
  { 0x1111, 0x1111, 0x0000, 0x0000},  // 1816; Use Count =     1
  { 0x1172, 0x1172, 0x0000, 0x0000},  // 1817; Use Count =     1
  { 0x116e, 0x116e, 0x0000, 0x0000},  // 1818; Use Count =     1
  { 0x1173, 0x1173, 0x0000, 0x0000},  // 1819; Use Count =     1
  { 0x308d, 0x308d, 0x308d, 0x308d},  // 1820; Use Count =     1
  { 0x30ed, 0x30ed, 0x30ed, 0x30ed},  // 1821; Use Count =     1
  { 0xff9b, 0xff9b, 0xff9b, 0xff9b},  // 1822; Use Count =     1
  { 0x306c, 0x306c, 0x306c, 0x306c},  // 1823; Use Count =     1
  { 0x30cc, 0x30cc, 0x30cc, 0x30cc},  // 1824; Use Count =     1
  { 0xff87, 0xff87, 0xff87, 0xff87},  // 1825; Use Count =     1
  { 0x3075, 0x3075, 0x3075, 0x3075},  // 1826; Use Count =     1
  { 0x30d5, 0x30d5, 0x30d5, 0x30d5},  // 1827; Use Count =     1
  { 0xff8c, 0xff8c, 0xff8c, 0xff8c},  // 1828; Use Count =     1
  { 0x3042, 0x3042, 0x3041, 0x3041},  // 1829; Use Count =     1
  { 0x30a2, 0x30a2, 0x30a1, 0x30a1},  // 1830; Use Count =     1
  { 0xff71, 0xff71, 0xff67, 0xff67},  // 1831; Use Count =     1
  { 0x3046, 0x3046, 0x3045, 0x3045},  // 1832; Use Count =     1
  { 0x30a6, 0x30a6, 0x30a5, 0x30a5},  // 1833; Use Count =     1
  { 0xff73, 0xff73, 0xff69, 0xff69},  // 1834; Use Count =     1
  { 0x3048, 0x3048, 0x3047, 0x3047},  // 1835; Use Count =     1
  { 0x30a8, 0x30a8, 0x30a7, 0x30a7},  // 1836; Use Count =     1
  { 0xff74, 0xff74, 0xff6a, 0xff6a},  // 1837; Use Count =     1
  { 0x304a, 0x304a, 0x3049, 0x3049},  // 1838; Use Count =     1
  { 0x30aa, 0x30aa, 0x30a9, 0x30a9},  // 1839; Use Count =     1
  { 0xff75, 0xff75, 0xff6b, 0xff6b},  // 1840; Use Count =     1
  { 0x3084, 0x3084, 0x3083, 0x3083},  // 1841; Use Count =     1
  { 0x30e4, 0x30e4, 0x30e3, 0x30a3},  // 1842; Use Count =     1
  { 0xff94, 0xff94, 0xff6c, 0xff6c},  // 1843; Use Count =     1
  { 0x3086, 0x3086, 0x3085, 0x3085},  // 1844; Use Count =     1
  { 0x30e6, 0x30e6, 0x30e5, 0x30e5},  // 1845; Use Count =     1
  { 0xff95, 0xff95, 0xff6d, 0xff6d},  // 1846; Use Count =     1
  { 0x3088, 0x3088, 0x3087, 0x3087},  // 1847; Use Count =     1
  { 0x30e8, 0x30e8, 0x30e7, 0x30e7},  // 1848; Use Count =     1
  { 0xff96, 0xff96, 0xff6e, 0xff6e},  // 1849; Use Count =     1
  { 0x308f, 0x308f, 0x3092, 0x3092},  // 1850; Use Count =     1
  { 0x30ef, 0x30ef, 0x30f2, 0x30f2},  // 1851; Use Count =     1
  { 0xff9c, 0xff9c, 0xff66, 0xff66},  // 1852; Use Count =     1
  { 0x307b, 0x307b, 0x30fc, 0x30fc},  // 1853; Use Count =     1
  { 0x30db, 0x30db, 0x30fc, 0x30fc},  // 1854; Use Count =     1
  { 0xff8e, 0xff8e, 0xff70, 0xff70},  // 1855; Use Count =     1
  { 0x3078, 0x3078, 0x3078, 0x3078},  // 1856; Use Count =     1
  { 0x30d8, 0x30d8, 0x30d8, 0x30d8},  // 1857; Use Count =     1
  { 0xff8d, 0xff8d, 0xff8d, 0xff8d},  // 1858; Use Count =     1
  { 0x305f, 0x305f, 0x305f, 0x305f},  // 1859; Use Count =     1
  { 0x30bf, 0x30bf, 0x30bf, 0x30bf},  // 1860; Use Count =     1
  { 0xff80, 0xff80, 0xff80, 0xff80},  // 1861; Use Count =     1
  { 0x3066, 0x3066, 0x3066, 0x3066},  // 1862; Use Count =     1
  { 0x30c6, 0x30c6, 0x30c6, 0x30c6},  // 1863; Use Count =     1
  { 0xff83, 0xff83, 0xff83, 0xff83},  // 1864; Use Count =     1
  { 0x3044, 0x3044, 0x3043, 0x3043},  // 1865; Use Count =     1
  { 0x30a4, 0x30a4, 0x30a3, 0x30a3},  // 1866; Use Count =     1
  { 0xff72, 0xff72, 0xff68, 0xff68},  // 1867; Use Count =     1
  { 0x3059, 0x3059, 0x3059, 0x3059},  // 1868; Use Count =     1
  { 0x30b9, 0x30b9, 0x30b9, 0x30b9},  // 1869; Use Count =     1
  { 0xff7d, 0xff7d, 0xff7d, 0xff7d},  // 1870; Use Count =     1
  { 0x304b, 0x304b, 0x304b, 0x304b},  // 1871; Use Count =     1
  { 0x30ab, 0x30ab, 0x30ab, 0x30ab},  // 1872; Use Count =     1
  { 0xff76, 0xff76, 0xff76, 0xff76},  // 1873; Use Count =     1
  { 0x3093, 0x3093, 0x3093, 0x3093},  // 1874; Use Count =     1
  { 0x30f3, 0x30f3, 0x30f3, 0x30f3},  // 1875; Use Count =     1
  { 0xff9d, 0xff9d, 0xff9d, 0xff9d},  // 1876; Use Count =     1
  { 0x306a, 0x306a, 0x306a, 0x306a},  // 1877; Use Count =     1
  { 0x30ca, 0x30ca, 0x30ca, 0x30ca},  // 1878; Use Count =     1
  { 0xff85, 0xff85, 0xff85, 0xff85},  // 1879; Use Count =     1
  { 0x306b, 0x306b, 0x306b, 0x306b},  // 1880; Use Count =     1
  { 0x30cb, 0x30cb, 0x30cb, 0x30cb},  // 1881; Use Count =     1
  { 0xff86, 0xff86, 0xff86, 0xff86},  // 1882; Use Count =     1
  { 0x3089, 0x3089, 0x3089, 0x3089},  // 1883; Use Count =     1
  { 0x30e9, 0x30e9, 0x30e9, 0x30e9},  // 1884; Use Count =     1
  { 0xff97, 0xff97, 0xff97, 0xff97},  // 1885; Use Count =     1
  { 0x305b, 0x305b, 0x305b, 0x305b},  // 1886; Use Count =     1
  { 0x30bb, 0x30bb, 0x30bb, 0x30bb},  // 1887; Use Count =     1
  { 0xff7e, 0xff7e, 0xff7e, 0xff7e},  // 1888; Use Count =     1
  { 0x309b, 0x309b, 0x300c, 0x300c},  // 1889; Use Count =     2
  { 0xff9e, 0xff9e, 0xff0c, 0xff0c},  // 1890; Use Count =     1
  { 0x309c, 0x309c, 0x300d, 0x300d},  // 1891; Use Count =     2
  { 0xff9f, 0xff9f, 0xff0d, 0xff0d},  // 1892; Use Count =     1
  { 0x00a5, 0x00a5, 0x007c, 0x007c},  // 1893; Use Count =     1
  { 0x3080, 0x3080, 0x3080, 0x3080},  // 1894; Use Count =     1
  { 0x30e0, 0x30e0, 0x30e0, 0x30e0},  // 1895; Use Count =     1
  { 0xff91, 0xff91, 0xff91, 0xff91},  // 1896; Use Count =     1
  { 0x3061, 0x3061, 0x3061, 0x3061},  // 1897; Use Count =     1
  { 0x30c1, 0x30c1, 0x30c1, 0x30c1},  // 1898; Use Count =     1
  { 0xff81, 0xff81, 0xff81, 0xff81},  // 1899; Use Count =     1
  { 0x3068, 0x3068, 0x3068, 0x3068},  // 1900; Use Count =     1
  { 0x30c8, 0x30c8, 0x30c8, 0x30c8},  // 1901; Use Count =     1
  { 0xff84, 0xff84, 0xff84, 0xff84},  // 1902; Use Count =     1
  { 0x3057, 0x3057, 0x3057, 0x3057},  // 1903; Use Count =     1
  { 0x30b7, 0x30b7, 0x30b7, 0x30b7},  // 1904; Use Count =     1
  { 0xff7c, 0xff7c, 0xff7c, 0xff7c},  // 1905; Use Count =     1
  { 0x306f, 0x306f, 0x306f, 0x306f},  // 1906; Use Count =     1
  { 0x30cf, 0x30cf, 0x30cf, 0x30cf},  // 1907; Use Count =     1
  { 0xff8a, 0xff8a, 0xff8a, 0xff8a},  // 1908; Use Count =     1
  { 0x304d, 0x304d, 0x304d, 0x304d},  // 1909; Use Count =     1
  { 0x30ad, 0x30ad, 0x30ad, 0x30ad},  // 1910; Use Count =     1
  { 0xff77, 0xff77, 0xff77, 0xff77},  // 1911; Use Count =     1
  { 0x304f, 0x304f, 0x304f, 0x304f},  // 1912; Use Count =     1
  { 0x30af, 0x30af, 0x30af, 0x30af},  // 1913; Use Count =     1
  { 0xff78, 0xff78, 0xff78, 0xff78},  // 1914; Use Count =     1
  { 0x307e, 0x307e, 0x3074, 0x3074},  // 1915; Use Count =     1
  { 0x30de, 0x30de, 0x30de, 0x30de},  // 1916; Use Count =     1
  { 0xff8f, 0xff8f, 0xff8f, 0xff8f},  // 1917; Use Count =     1
  { 0x306e, 0x306e, 0x306e, 0x306e},  // 1918; Use Count =     1
  { 0x30ce, 0x30ce, 0x30ce, 0x30ce},  // 1919; Use Count =     1
  { 0xff89, 0xff89, 0xff89, 0xff89},  // 1920; Use Count =     1
  { 0x308a, 0x308a, 0x308a, 0x308a},  // 1921; Use Count =     1
  { 0x30ea, 0x30ea, 0x30ea, 0x30ea},  // 1922; Use Count =     1
  { 0xff98, 0xff98, 0xff98, 0xff98},  // 1923; Use Count =     1
  { 0x003b, 0x003b, 0x002b, 0x002b},  // 1924; Use Count =     1
  { 0x308c, 0x308c, 0x308c, 0x308c},  // 1925; Use Count =     1
  { 0x30ec, 0x30ec, 0x30ec, 0x00ec},  // 1926; Use Count =     1
  { 0xff9a, 0xff9a, 0xff9a, 0xff9a},  // 1927; Use Count =     1
  { 0x003a, 0x003a, 0x002a, 0x002a},  // 1928; Use Count =     1
  { 0x3051, 0x3051, 0x3051, 0x3051},  // 1929; Use Count =     1
  { 0x30ba, 0x30ba, 0x30ba, 0x00ba},  // 1930; Use Count =     1
  { 0xff79, 0xff79, 0xff79, 0xff79},  // 1931; Use Count =     1
  { 0x3064, 0x3064, 0x3063, 0x3063},  // 1932; Use Count =     1
  { 0x30c4, 0x30c4, 0x30c4, 0x30c4},  // 1933; Use Count =     1
  { 0xff82, 0xff82, 0xff6f, 0xff6f},  // 1934; Use Count =     1
  { 0x3055, 0x3055, 0x3055, 0x3055},  // 1935; Use Count =     1
  { 0x30b5, 0x30b5, 0x30b5, 0x30b5},  // 1936; Use Count =     1
  { 0xff7b, 0xff7b, 0xff7b, 0xff7b},  // 1937; Use Count =     1
  { 0x305d, 0x305d, 0x305d, 0x305d},  // 1938; Use Count =     1
  { 0x30bd, 0x30bd, 0x30bd, 0x30bd},  // 1939; Use Count =     1
  { 0xff7f, 0xff7f, 0xff7f, 0xff7f},  // 1940; Use Count =     1
  { 0x3072, 0x3072, 0x3072, 0x3072},  // 1941; Use Count =     1
  { 0x30d2, 0x30d2, 0x30d2, 0x30d2},  // 1942; Use Count =     1
  { 0xff8b, 0xff8b, 0xff8b, 0xff8b},  // 1943; Use Count =     1
  { 0x3053, 0x3053, 0x3053, 0x3053},  // 1944; Use Count =     1
  { 0x30b3, 0x30b3, 0x30b3, 0x30b3},  // 1945; Use Count =     1
  { 0xff7a, 0xff7a, 0xff7a, 0xff7a},  // 1946; Use Count =     1
  { 0x307f, 0x307f, 0x307f, 0x307f},  // 1947; Use Count =     1
  { 0x30df, 0x30df, 0x30df, 0x30df},  // 1948; Use Count =     1
  { 0xff90, 0xff90, 0xff90, 0xff90},  // 1949; Use Count =     1
  { 0x3082, 0x3082, 0x3082, 0x3082},  // 1950; Use Count =     1
  { 0x30e2, 0x30e2, 0x30e2, 0x30e2},  // 1951; Use Count =     1
  { 0xff93, 0xff93, 0xff93, 0xff93},  // 1952; Use Count =     1
  { 0x306d, 0x306d, 0x3001, 0x3001},  // 1953; Use Count =     1
  { 0x30cd, 0x30cd, 0x3001, 0x3001},  // 1954; Use Count =     1
  { 0xff88, 0xff88, 0xff01, 0xff01},  // 1955; Use Count =     1
  { 0x308b, 0x308b, 0x3002, 0x3002},  // 1956; Use Count =     1
  { 0x30eb, 0x30f0, 0x3002, 0x3002},  // 1957; Use Count =     1
  { 0xff99, 0xff99, 0xff02, 0xff02},  // 1958; Use Count =     1
  { 0x3081, 0x3081, 0x30fb, 0x30fb},  // 1959; Use Count =     2
  { 0x30e1, 0x30e1, 0x30fb, 0x30fb},  // 1960; Use Count =     2
  { 0xff92, 0xff92, 0xfffb, 0xfffb},  // 1961; Use Count =     2
  { 0x005c, 0x005f, 0x003c, 0x005f}   // 1962; Use Count =     1
};


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 27

// Array to match KLIDs to Virtual keyboard structures
                                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KLID2VKBDX_Table.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/

static const st_IKLID2VKBD IKLID2VKBD[] = {
  {0x00000401, &VKBD_00000401},  //    0
  {0x00000402, &VKBD_00000402},  //    1
  {0x00000405, &VKBD_00000405},  //    2
  {0x00000406, &VKBD_00000406},  //    3
  {0x00000407, &VKBD_00000407},  //    4
  {0x00000408, &VKBD_00000408},  //    5
  {0x00000409, &VKBD_00000409},  //    6
  {0x0000040A, &VKBD_0000040A},  //    7
  {0x0000040B, &VKBD_0000040B},  //    8
  {0x0000040C, &VKBD_0000040C},  //    9
  {0x0000040D, &VKBD_0000040D},  //   10
  {0x0000040E, &VKBD_0000040E},  //   11
  {0x0000040F, &VKBD_0000040F},  //   12
  {0x00000410, &VKBD_00000410},  //   13
  {0x00000413, &VKBD_00000413},  //   14
  {0x00000414, &VKBD_00000414},  //   15
  {0x00000415, &VKBD_00000415},  //   16
  {0x00000416, &VKBD_00000416},  //   17
  {0x00000418, &VKBD_00000418},  //   18
  {0x00000419, &VKBD_00000419},  //   19
  {0x0000041A, &VKBD_0000041A},  //   20
  {0x0000041B, &VKBD_0000041B},  //   21
  {0x0000041C, &VKBD_0000041C},  //   22
  {0x0000041D, &VKBD_0000041D},  //   23
  {0x0000041E, &VKBD_0000041E},  //   24
  {0x0000041F, &VKBD_0000041F},  //   25
  {0x00000420, &VKBD_00000420},  //   26
  {0x00000422, &VKBD_00000422},  //   27
  {0x00000423, &VKBD_00000423},  //   28
  {0x00000424, &VKBD_00000424},  //   29
  {0x00000425, &VKBD_00000425},  //   30
  {0x00000426, &VKBD_00000426},  //   31
  {0x00000427, &VKBD_00000427},  //   32
  {0x00000428, &VKBD_00000428},  //   33
  {0x00000429, &VKBD_00000429},  //   34
  {0x0000042A, &VKBD_0000042A},  //   35
  {0x0000042B, &VKBD_0000042B},  //   36
  {0x0000042C, &VKBD_0000042C},  //   37
  {0x0000042E, &VKBD_0000042E},  //   38
  {0x00000432, &VKBD_00000432},  //   39
  {0x00000437, &VKBD_00000437},  //   40
  {0x00000438, &VKBD_00000438},  //   41
  {0x00000439, &VKBD_00000439},  //   42
  {0x0000043B, &VKBD_0000043B},  //   43
  {0x0000043F, &VKBD_0000043F},  //   44
  {0x00000440, &VKBD_00000440},  //   45
  {0x00000442, &VKBD_00000442},  //   46
  {0x00000444, &VKBD_00000444},  //   47
  {0x00000445, &VKBD_00000445},  //   48
  {0x00000446, &VKBD_00000446},  //   49
  {0x00000447, &VKBD_00000447},  //   50
  {0x00000448, &VKBD_00000448},  //   51
  {0x00000449, &VKBD_00000449},  //   52
  {0x0000044A, &VKBD_0000044A},  //   53
  {0x0000044B, &VKBD_0000044B},  //   54
  {0x0000044E, &VKBD_0000044E},  //   55
  {0x00000450, &VKBD_00000450},  //   56
  {0x00000452, &VKBD_00000452},  //   57
  {0x00000468, &VKBD_00000468},  //   58
  {0x0000046A, &VKBD_0000046A},  //   59
  {0x0000046C, &VKBD_0000046C},  //   60
  {0x00000470, &VKBD_00000470},  //   61
  {0x00000481, &VKBD_00000481},  //   62
  {0x00000488, &VKBD_00000488},  //   63
  {0x00000807, &VKBD_00000807},  //   64
  {0x00000809, &VKBD_00000809},  //   65
  {0x0000080A, &VKBD_0000080A},  //   66
  {0x0000080C, &VKBD_0000080C},  //   67
  {0x00000813, &VKBD_00000813},  //   68
  {0x00000816, &VKBD_00000816},  //   69
  {0x0000081A, &VKBD_0000081A},  //   70
  {0x0000082C, &VKBD_0000082C},  //   71
  {0x0000083B, &VKBD_0000083B},  //   72
  {0x00000843, &VKBD_00000843},  //   73
  {0x00000C0C, &VKBD_00000C0C},  //   74
  {0x00000C1A, &VKBD_00000C1A},  //   75
  {0x00001009, &VKBD_00001009},  //   76
  {0x0000100C, &VKBD_0000100C},  //   77
  {0x00001809, &VKBD_00001809},  //   78
  {0x0000201A, &VKBD_0000201A},  //   79
  {0x00010402, &VKBD_00010402},  //   80
  {0x00010405, &VKBD_00010405},  //   81
  {0x00010407, &VKBD_00010407},  //   82
  {0x00010408, &VKBD_00010408},  //   83
  {0x0001040A, &VKBD_0001040A},  //   84
  {0x0001040E, &VKBD_0001040E},  //   85
  {0x00010410, &VKBD_00010410},  //   86
  {0x00010415, &VKBD_00010415},  //   87
  {0x00010418, &VKBD_00010418},  //   88
  {0x00010419, &VKBD_00010419},  //   89
  {0x0001041B, &VKBD_0001041B},  //   90
  {0x0001041E, &VKBD_0001041E},  //   91
  {0x0001041F, &VKBD_0001041F},  //   92
  {0x00010426, &VKBD_00010426},  //   93
  {0x00010427, &VKBD_00010427},  //   94
  {0x0001042B, &VKBD_0001042B},  //   95
  {0x00010437, &VKBD_00010437},  //   96
  {0x00010439, &VKBD_00010439},  //   97
  {0x0001043B, &VKBD_0001043B},  //   98
  {0x00010445, &VKBD_00010445},  //   99
  {0x00010480, &VKBD_00010480},  //  100
  {0x0001080C, &VKBD_0001080C},  //  101
  {0x0001083B, &VKBD_0001083B},  //  102
  {0x00011009, &VKBD_00011009},  //  103
  {0x00011809, &VKBD_00011809},  //  104
  {0x00020405, &VKBD_00020405},  //  105
  {0x00020408, &VKBD_00020408},  //  106
  {0x00020409, &VKBD_00020409},  //  107
  {0x00020418, &VKBD_00020418},  //  108
  {0x0002041E, &VKBD_0002041E},  //  109
  {0x00020422, &VKBD_00020422},  //  110
  {0x00020427, &VKBD_00020427},  //  111
  {0x0002042E, &VKBD_0002042E},  //  112
  {0x00020437, &VKBD_00020437},  //  113
  {0x00020445, &VKBD_00020445},  //  114
  {0x0002083B, &VKBD_0002083B},  //  115
  {0x00030402, &VKBD_00030402},  //  116
  {0x00030408, &VKBD_00030408},  //  117
  {0x0003041E, &VKBD_0003041E},  //  118
  {0x00040402, &VKBD_00040402},  //  119
  {0x00040408, &VKBD_00040408},  //  120
  {0x00050408, &VKBD_00050408},  //  121
  {0x00060408, &VKBD_00060408},  //  122
  {0x0001FFFF, &VKBD_0001FFFF},  //  123
  {0x0002FFFF, &VKBD_0002FFFF},  //  124
  {0x0003FFFF, &VKBD_0003FFFF},  //  125
  {0x0004FFFF, &VKBD_0004FFFF},  //  126
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 30

// Arrays of DeadKey data
                              
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_DeadKey_Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


//
// Keyboard 00000405 - Czech deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02dd(dtaDeadkey_00000405_x02dd,
                                                     dtaDeadkey_00000405_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02c7(dtaDeadkey_00000405_x02c7,
                                                     dtaDeadkey_00000405_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000405_x005e(dtaDeadkey_00000405_x005e,
                                                     dtaDeadkey_00000405_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02d8[6] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
  { 0x22, 0x00,   38 },  //    4
  { 0x22, 0x01,   39 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02d8(dtaDeadkey_00000405_x02d8,
                                                     dtaDeadkey_00000405_x02d8 + 6);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b0(dtaDeadkey_00000405_x00b0,
                                                     dtaDeadkey_00000405_x00b0 + 6);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02db[10] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
  { 0x17, 0x00,   50 },  //    6
  { 0x17, 0x01,   51 },  //    7
  { 0x16, 0x00,   52 },  //    8
  { 0x16, 0x01,   53 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02db(dtaDeadkey_00000405_x02db,
                                                     dtaDeadkey_00000405_x02db + 10);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000405_x0060(dtaDeadkey_00000405_x0060,
                                                     dtaDeadkey_00000405_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x02d9[8] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x12, 0x00,   66 },  //    2
  { 0x12, 0x01,   67 },  //    3
  { 0x17, 0x00,   68 },  //    4
  { 0x17, 0x01,   69 },  //    5
  { 0x15, 0x00,   70 },  //    6
  { 0x15, 0x01,   71 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000405_x02d9(dtaDeadkey_00000405_x02d9,
                                                     dtaDeadkey_00000405_x02d9 + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b4(dtaDeadkey_00000405_x00b4,
                                                     dtaDeadkey_00000405_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
  { 0x2c, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00a8(dtaDeadkey_00000405_x00a8,
                                                     dtaDeadkey_00000405_x00a8 + 14);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000405_x00b8[18] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x22, 0x00,  113 },  //    4
  { 0x22, 0x01,  114 },  //    5
  { 0x25, 0x00,  115 },  //    6
  { 0x25, 0x01,  116 },  //    7
  { 0x26, 0x00,  117 },  //    8
  { 0x26, 0x01,  118 },  //    9
  { 0x31, 0x00,  119 },  //   10
  { 0x31, 0x01,  120 },  //   11
  { 0x13, 0x00,  121 },  //   12
  { 0x13, 0x01,  122 },  //   13
  { 0x1f, 0x00,  123 },  //   14
  { 0x1f, 0x01,  124 },  //   15
  { 0x14, 0x00,  125 },  //   16
  { 0x14, 0x01,  126 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00000405_x00b8(dtaDeadkey_00000405_x00b8,
                                                     dtaDeadkey_00000405_x00b8 + 18);

//
// Keyboard 00000406 - Danish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000406_x00a8(dtaDeadkey_00000406_x00a8,
                                                     dtaDeadkey_00000406_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000406_x005e(dtaDeadkey_00000406_x005e,
                                                     dtaDeadkey_00000406_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000406_x007e(dtaDeadkey_00000406_x007e,
                                                     dtaDeadkey_00000406_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000406_x00b4(dtaDeadkey_00000406_x00b4,
                                                     dtaDeadkey_00000406_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000406_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000406_x0060(dtaDeadkey_00000406_x0060,
                                                     dtaDeadkey_00000406_x0060 + 12);

//
// Keyboard 00000407 - German deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000407_x005e(dtaDeadkey_00000407_x005e,
                                                     dtaDeadkey_00000407_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000407_x00b4(dtaDeadkey_00000407_x00b4,
                                                     dtaDeadkey_00000407_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000407_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000407_x0060(dtaDeadkey_00000407_x0060,
                                                     dtaDeadkey_00000407_x0060 + 12);

//
// Keyboard 00000408 - Greek deadkeys
//

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000408_x0385(dtaDeadkey_00000408_x0385,
                                                     dtaDeadkey_00000408_x0385 + 4);

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000408_x0384(dtaDeadkey_00000408_x0384,
                                                     dtaDeadkey_00000408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000408_x00a8(dtaDeadkey_00000408_x00a8,
                                                     dtaDeadkey_00000408_x00a8 + 6);

//
// Keyboard 0000040A - Spanish deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x007e(dtaDeadkey_0000040A_x007e,
                                                     dtaDeadkey_0000040A_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x0060(dtaDeadkey_0000040A_x0060,
                                                     dtaDeadkey_0000040A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x005e(dtaDeadkey_0000040A_x005e,
                                                     dtaDeadkey_0000040A_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x00b4(dtaDeadkey_0000040A_x00b4,
                                                     dtaDeadkey_0000040A_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040A_x00a8(dtaDeadkey_0000040A_x00a8,
                                                     dtaDeadkey_0000040A_x00a8 + 13);

//
// Keyboard 0000040B - Finnish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x00a8(dtaDeadkey_0000040B_x00a8,
                                                     dtaDeadkey_0000040B_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x005e(dtaDeadkey_0000040B_x005e,
                                                     dtaDeadkey_0000040B_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x007e(dtaDeadkey_0000040B_x007e,
                                                     dtaDeadkey_0000040B_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x00b4(dtaDeadkey_0000040B_x00b4,
                                                     dtaDeadkey_0000040B_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040B_x0060(dtaDeadkey_0000040B_x0060,
                                                     dtaDeadkey_0000040B_x0060 + 12);

//
// Keyboard 0000040C - French deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x007e(dtaDeadkey_0000040C_x007e,
                                                     dtaDeadkey_0000040C_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x0060(dtaDeadkey_0000040C_x0060,
                                                     dtaDeadkey_0000040C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x005e(dtaDeadkey_0000040C_x005e,
                                                     dtaDeadkey_0000040C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040C_x00a8(dtaDeadkey_0000040C_x00a8,
                                                     dtaDeadkey_0000040C_x00a8 + 13);

//
// Keyboard 0000040E - Hungarian deadkeys
//

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02c7[18] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x31, 0x00,   14 },  //    8
  { 0x31, 0x01,   15 },  //    9
  { 0x13, 0x00,   16 },  //   10
  { 0x13, 0x01,   17 },  //   11
  { 0x1f, 0x00,   18 },  //   12
  { 0x1f, 0x01,   19 },  //   13
  { 0x14, 0x00,   20 },  //   14
  { 0x14, 0x01,   21 },  //   15
  { 0x15, 0x00,   22 },  //   16
  { 0x15, 0x01,   23 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02c7(dtaDeadkey_0000040E_x02c7,
                                                     dtaDeadkey_0000040E_x02c7 + 18);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x005e(dtaDeadkey_0000040E_x005e,
                                                     dtaDeadkey_0000040E_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02d8(dtaDeadkey_0000040E_x02d8,
                                                     dtaDeadkey_0000040E_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b0(dtaDeadkey_0000040E_x00b0,
                                                     dtaDeadkey_0000040E_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02db(dtaDeadkey_0000040E_x02db,
                                                     dtaDeadkey_0000040E_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02d9(dtaDeadkey_0000040E_x02d9,
                                                     dtaDeadkey_0000040E_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b4(dtaDeadkey_0000040E_x00b4,
                                                     dtaDeadkey_0000040E_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00b8(dtaDeadkey_0000040E_x00b8,
                                                     dtaDeadkey_0000040E_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x00a8(dtaDeadkey_0000040E_x00a8,
                                                     dtaDeadkey_0000040E_x00a8 + 10);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000040E_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000040E_x02dd(dtaDeadkey_0000040E_x02dd,
                                                     dtaDeadkey_0000040E_x02dd + 6);

//
// Keyboard 0000040F - Icelandic deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x0060(dtaDeadkey_0000040F_x0060,
                                                     dtaDeadkey_0000040F_x0060 + 12);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00b0(dtaDeadkey_0000040F_x00b0,
                                                     dtaDeadkey_0000040F_x00b0 + 4);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00a8(dtaDeadkey_0000040F_x00a8,
                                                     dtaDeadkey_0000040F_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x00b4(dtaDeadkey_0000040F_x00b4,
                                                     dtaDeadkey_0000040F_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000040F_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000040F_x005e(dtaDeadkey_0000040F_x005e,
                                                     dtaDeadkey_0000040F_x005e + 12);

//
// Keyboard 00000413 - Dutch deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000413_x007e(dtaDeadkey_00000413_x007e,
                                                     dtaDeadkey_00000413_x007e + 8);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00b8[4] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00b8(dtaDeadkey_00000413_x00b8,
                                                     dtaDeadkey_00000413_x00b8 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00b4(dtaDeadkey_00000413_x00b4,
                                                     dtaDeadkey_00000413_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000413_x0060(dtaDeadkey_00000413_x0060,
                                                     dtaDeadkey_00000413_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000413_x00a8(dtaDeadkey_00000413_x00a8,
                                                     dtaDeadkey_00000413_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000413_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000413_x005e(dtaDeadkey_00000413_x005e,
                                                     dtaDeadkey_00000413_x005e + 12);

//
// Keyboard 00000414 - Norwegian deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000414_x00a8(dtaDeadkey_00000414_x00a8,
                                                     dtaDeadkey_00000414_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000414_x005e(dtaDeadkey_00000414_x005e,
                                                     dtaDeadkey_00000414_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000414_x007e(dtaDeadkey_00000414_x007e,
                                                     dtaDeadkey_00000414_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000414_x0060(dtaDeadkey_00000414_x0060,
                                                     dtaDeadkey_00000414_x0060 + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000414_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000414_x00b4(dtaDeadkey_00000414_x00b4,
                                                     dtaDeadkey_00000414_x00b4 + 14);

//
// Keyboard 00000415 - Polish (Programmers) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000415_x007e[20] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   48 },  //    6
  { 0x12, 0x01,   49 },  //    7
  { 0x26, 0x00,  157 },  //    8
  { 0x26, 0x01,  158 },  //    9
  { 0x31, 0x00,   83 },  //   10
  { 0x31, 0x01,   84 },  //   11
  { 0x18, 0x00,   85 },  //   12
  { 0x18, 0x01,   86 },  //   13
  { 0x1f, 0x00,   89 },  //   14
  { 0x1f, 0x01,   90 },  //   15
  { 0x2d, 0x00,   95 },  //   16
  { 0x2d, 0x01,   96 },  //   17
  { 0x2c, 0x00,   70 },  //   18
  { 0x2c, 0x01,   71 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000415_x007e(dtaDeadkey_00000415_x007e,
                                                     dtaDeadkey_00000415_x007e + 20);

//
// Keyboard 00000416 - Portuguese (Brazilian ABNT) deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000416_x00a8(dtaDeadkey_00000416_x00a8,
                                                     dtaDeadkey_00000416_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000416_x00b4(dtaDeadkey_00000416_x00b4,
                                                     dtaDeadkey_00000416_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000416_x0060(dtaDeadkey_00000416_x0060,
                                                     dtaDeadkey_00000416_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000416_x007e(dtaDeadkey_00000416_x007e,
                                                     dtaDeadkey_00000416_x007e + 8);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000416_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000416_x005e(dtaDeadkey_00000416_x005e,
                                                     dtaDeadkey_00000416_x005e + 12);

//
// Keyboard 00000418 - Romanian (Legacy) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02dd(dtaDeadkey_00000418_x02dd,
                                                     dtaDeadkey_00000418_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02c7(dtaDeadkey_00000418_x02c7,
                                                     dtaDeadkey_00000418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000418_x005e(dtaDeadkey_00000418_x005e,
                                                     dtaDeadkey_00000418_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02d8(dtaDeadkey_00000418_x02d8,
                                                     dtaDeadkey_00000418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b0(dtaDeadkey_00000418_x00b0,
                                                     dtaDeadkey_00000418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000418_x02db(dtaDeadkey_00000418_x02db,
                                                     dtaDeadkey_00000418_x02db + 6);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b7[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b7(dtaDeadkey_00000418_x00b7,
                                                     dtaDeadkey_00000418_x00b7 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b4(dtaDeadkey_00000418_x00b4,
                                                     dtaDeadkey_00000418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  159 },  //    4
  { 0x1f, 0x01,  160 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00b8(dtaDeadkey_00000418_x00b8,
                                                     dtaDeadkey_00000418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000418_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000418_x00a8(dtaDeadkey_00000418_x00a8,
                                                     dtaDeadkey_00000418_x00a8 + 10);

//
// Keyboard 0000041A - Croatian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02dd(dtaDeadkey_0000041A_x02dd,
                                                     dtaDeadkey_0000041A_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02c7(dtaDeadkey_0000041A_x02c7,
                                                     dtaDeadkey_0000041A_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x005e(dtaDeadkey_0000041A_x005e,
                                                     dtaDeadkey_0000041A_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02d8(dtaDeadkey_0000041A_x02d8,
                                                     dtaDeadkey_0000041A_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b0(dtaDeadkey_0000041A_x00b0,
                                                     dtaDeadkey_0000041A_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02db(dtaDeadkey_0000041A_x02db,
                                                     dtaDeadkey_0000041A_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x02d9(dtaDeadkey_0000041A_x02d9,
                                                     dtaDeadkey_0000041A_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b4(dtaDeadkey_0000041A_x00b4,
                                                     dtaDeadkey_0000041A_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00b8(dtaDeadkey_0000041A_x00b8,
                                                     dtaDeadkey_0000041A_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041A_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000041A_x00a8(dtaDeadkey_0000041A_x00a8,
                                                     dtaDeadkey_0000041A_x00a8 + 10);

//
// Keyboard 0000041B - Slovak deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02dd(dtaDeadkey_0000041B_x02dd,
                                                     dtaDeadkey_0000041B_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02c7(dtaDeadkey_0000041B_x02c7,
                                                     dtaDeadkey_0000041B_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x005e(dtaDeadkey_0000041B_x005e,
                                                     dtaDeadkey_0000041B_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02d8(dtaDeadkey_0000041B_x02d8,
                                                     dtaDeadkey_0000041B_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b0(dtaDeadkey_0000041B_x00b0,
                                                     dtaDeadkey_0000041B_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02db(dtaDeadkey_0000041B_x02db,
                                                     dtaDeadkey_0000041B_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x02d9(dtaDeadkey_0000041B_x02d9,
                                                     dtaDeadkey_0000041B_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b4(dtaDeadkey_0000041B_x00b4,
                                                     dtaDeadkey_0000041B_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x18, 0x00,  104 },  //    4
  { 0x18, 0x01,  105 },  //    5
  { 0x16, 0x00,  106 },  //    6
  { 0x16, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00a8(dtaDeadkey_0000041B_x00a8,
                                                     dtaDeadkey_0000041B_x00a8 + 8);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041B_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041B_x00b8(dtaDeadkey_0000041B_x00b8,
                                                     dtaDeadkey_0000041B_x00b8 + 8);

//
// Keyboard 0000041C - Albanian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02dd(dtaDeadkey_0000041C_x02dd,
                                                     dtaDeadkey_0000041C_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02c7(dtaDeadkey_0000041C_x02c7,
                                                     dtaDeadkey_0000041C_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x005e(dtaDeadkey_0000041C_x005e,
                                                     dtaDeadkey_0000041C_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02d8(dtaDeadkey_0000041C_x02d8,
                                                     dtaDeadkey_0000041C_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b0(dtaDeadkey_0000041C_x00b0,
                                                     dtaDeadkey_0000041C_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02db(dtaDeadkey_0000041C_x02db,
                                                     dtaDeadkey_0000041C_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x02d9(dtaDeadkey_0000041C_x02d9,
                                                     dtaDeadkey_0000041C_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b4(dtaDeadkey_0000041C_x00b4,
                                                     dtaDeadkey_0000041C_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00b8(dtaDeadkey_0000041C_x00b8,
                                                     dtaDeadkey_0000041C_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041C_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000041C_x00a8(dtaDeadkey_0000041C_x00a8,
                                                     dtaDeadkey_0000041C_x00a8 + 10);

//
// Keyboard 0000041D - Swedish deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x00a8(dtaDeadkey_0000041D_x00a8,
                                                     dtaDeadkey_0000041D_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x005e(dtaDeadkey_0000041D_x005e,
                                                     dtaDeadkey_0000041D_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x007e(dtaDeadkey_0000041D_x007e,
                                                     dtaDeadkey_0000041D_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x00b4(dtaDeadkey_0000041D_x00b4,
                                                     dtaDeadkey_0000041D_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000041D_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000041D_x0060(dtaDeadkey_0000041D_x0060,
                                                     dtaDeadkey_0000041D_x0060 + 12);

//
// Keyboard 0000041F - Turkish Q deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x005e[14] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
  { 0x28, 0x00,   29 },  //   12
  { 0x28, 0x01,   30 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x005e(dtaDeadkey_0000041F_x005e,
                                                     dtaDeadkey_0000041F_x005e + 14);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x28, 0x00,   79 },  //   12
  { 0x28, 0x01,   80 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x00b4(dtaDeadkey_0000041F_x00b4,
                                                     dtaDeadkey_0000041F_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x28, 0x00,   59 },  //   12
  { 0x28, 0x01,   60 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x0060(dtaDeadkey_0000041F_x0060,
                                                     dtaDeadkey_0000041F_x0060 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x28, 0x00,  102 },  //   12
  { 0x28, 0x01,  103 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x00a8(dtaDeadkey_0000041F_x00a8,
                                                     dtaDeadkey_0000041F_x00a8 + 14);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000041F_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000041F_x007e(dtaDeadkey_0000041F_x007e,
                                                     dtaDeadkey_0000041F_x007e + 8);

//
// Keyboard 00000424 - Slovenian deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02dd(dtaDeadkey_00000424_x02dd,
                                                     dtaDeadkey_00000424_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02c7(dtaDeadkey_00000424_x02c7,
                                                     dtaDeadkey_00000424_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000424_x005e(dtaDeadkey_00000424_x005e,
                                                     dtaDeadkey_00000424_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02d8(dtaDeadkey_00000424_x02d8,
                                                     dtaDeadkey_00000424_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b0(dtaDeadkey_00000424_x00b0,
                                                     dtaDeadkey_00000424_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02db(dtaDeadkey_00000424_x02db,
                                                     dtaDeadkey_00000424_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000424_x02d9(dtaDeadkey_00000424_x02d9,
                                                     dtaDeadkey_00000424_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b4(dtaDeadkey_00000424_x00b4,
                                                     dtaDeadkey_00000424_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00b8(dtaDeadkey_00000424_x00b8,
                                                     dtaDeadkey_00000424_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000424_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000424_x00a8(dtaDeadkey_00000424_x00a8,
                                                     dtaDeadkey_00000424_x00a8 + 10);

//
// Keyboard 00000425 - Estonian deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x1f, 0x00,   89 },  //   10
  { 0x1f, 0x01,   90 },  //   11
  { 0x2c, 0x00,   95 },  //   12
  { 0x2c, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000425_x00b4(dtaDeadkey_00000425_x00b4,
                                                     dtaDeadkey_00000425_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x0060[10] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x18, 0x00,   61 },  //    6
  { 0x18, 0x01,   62 },  //    7
  { 0x16, 0x00,   63 },  //    8
  { 0x16, 0x01,   64 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00000425_x0060(dtaDeadkey_00000425_x0060,
                                                     dtaDeadkey_00000425_x0060 + 10);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x22, 0x00,  161 },  //    6
  { 0x22, 0x01,  162 },  //    7
  { 0x17, 0x00,   29 },  //    8
  { 0x17, 0x01,   30 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000425_x005e(dtaDeadkey_00000425_x005e,
                                                     dtaDeadkey_00000425_x005e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x02c7[8] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x1f, 0x00,   18 },  //    4
  { 0x1f, 0x01,   19 },  //    5
  { 0x2c, 0x00,   22 },  //    6
  { 0x2c, 0x01,   23 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000425_x02c7(dtaDeadkey_00000425_x02c7,
                                                     dtaDeadkey_00000425_x02c7 + 8);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000425_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x18, 0x00,  132 },  //    2
  { 0x18, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000425_x007e(dtaDeadkey_00000425_x007e,
                                                     dtaDeadkey_00000425_x007e + 4);

//
// Keyboard 00000426 - Latvian deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x31, 0x00,  132 },  //    2
  { 0x31, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00000426_x007e(dtaDeadkey_00000426_x007e,
                                                     dtaDeadkey_00000426_x007e + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x27, 0x00,   75 },  //    2
  { 0x27, 0x01,   76 },  //    3
  { 0x26, 0x00,   77 },  //    4
  { 0x26, 0x01,   78 },  //    5
  { 0x16, 0x00,   83 },  //    6
  { 0x16, 0x01,   84 },  //    7
  { 0x31, 0x00,   85 },  //    8
  { 0x31, 0x01,   86 },  //    9
  { 0x20, 0x00,   89 },  //   10
  { 0x20, 0x01,   90 },  //   11
  { 0x17, 0x00,   95 },  //   12
  { 0x17, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00b4(dtaDeadkey_00000426_x00b4,
                                                     dtaDeadkey_00000426_x00b4 + 14);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00b0[9] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x24, 0x00,   41 },  //    2
  { 0x24, 0x01,   42 },  //    3
  { 0x26, 0x00,   66 },  //    4
  { 0x26, 0x01,   67 },  //    5
  { 0x11, 0x00,  163 },  //    6
  { 0x17, 0x00,   70 },  //    7
  { 0x17, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00b0(dtaDeadkey_00000426_x00b0,
                                                     dtaDeadkey_00000426_x00b0 + 9);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000426_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x24, 0x00,   98 },  //    2
  { 0x24, 0x01,   99 },  //    3
  { 0x31, 0x00,  104 },  //    4
  { 0x31, 0x01,  105 },  //    5
  { 0x1f, 0x00,  106 },  //    6
  { 0x1f, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000426_x00a8(dtaDeadkey_00000426_x00a8,
                                                     dtaDeadkey_00000426_x00a8 + 8);

//
// Keyboard 0000042E - Sorbian Standard (Legacy) deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x18, 0x00,   32 },  //   12
  { 0x18, 0x01,   31 },  //   13
  { 0x13, 0x00,   16 },  //   14
  { 0x13, 0x01,   17 },  //   15
  { 0x1f, 0x00,   18 },  //   16
  { 0x1f, 0x01,   19 },  //   17
  { 0x14, 0x00,   20 },  //   18
  { 0x14, 0x01,   21 },  //   19
  { 0x15, 0x00,   22 },  //   20
  { 0x15, 0x01,   23 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x005e(dtaDeadkey_0000042E_x005e,
                                                     dtaDeadkey_0000042E_x005e + 22);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x00b0[9] = {
  { 0x39, 0x00,  164 },  //    0
  { 0x39, 0x01,  164 },  //    1
  { 0x12, 0x00,   66 },  //    2
  { 0x12, 0x01,   67 },  //    3
  { 0x1f, 0x00,  165 },  //    4
  { 0x16, 0x00,   43 },  //    5
  { 0x16, 0x01,   44 },  //    6
  { 0x15, 0x00,   70 },  //    7
  { 0x15, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x00b0(dtaDeadkey_0000042E_x00b0,
                                                     dtaDeadkey_0000042E_x00b0 + 9);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x00b4[28] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x20, 0x00,  166 },  //    6
  { 0x20, 0x01,  167 },  //    7
  { 0x12, 0x00,   77 },  //    8
  { 0x12, 0x01,   78 },  //    9
  { 0x17, 0x00,   79 },  //   10
  { 0x17, 0x01,   80 },  //   11
  { 0x26, 0x00,   81 },  //   12
  { 0x26, 0x01,   82 },  //   13
  { 0x31, 0x00,   83 },  //   14
  { 0x31, 0x01,   84 },  //   15
  { 0x18, 0x00,   85 },  //   16
  { 0x18, 0x01,   86 },  //   17
  { 0x13, 0x00,   87 },  //   18
  { 0x13, 0x01,   88 },  //   19
  { 0x1f, 0x00,   89 },  //   20
  { 0x1f, 0x01,   90 },  //   21
  { 0x16, 0x00,   91 },  //   22
  { 0x16, 0x01,   92 },  //   23
  { 0x2c, 0x00,   93 },  //   24
  { 0x2c, 0x01,   94 },  //   25
  { 0x15, 0x00,   95 },  //   26
  { 0x15, 0x01,   96 },  //   27
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x00b4(dtaDeadkey_0000042E_x00b4,
                                                     dtaDeadkey_0000042E_x00b4 + 28);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000042E_x0060[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   57 },  //    6
  { 0x12, 0x01,   58 },  //    7
  { 0x17, 0x00,   59 },  //    8
  { 0x17, 0x01,   60 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x1f, 0x00,  123 },  //   12
  { 0x1f, 0x01,  124 },  //   13
  { 0x16, 0x00,   63 },  //   14
  { 0x16, 0x01,   64 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000042E_x0060(dtaDeadkey_0000042E_x0060,
                                                     dtaDeadkey_0000042E_x0060 + 16);

//
// Keyboard 00000432 - Setswana deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000432_x005e(dtaDeadkey_00000432_x005e,
                                                     dtaDeadkey_00000432_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0060(dtaDeadkey_00000432_x0060,
                                                     dtaDeadkey_00000432_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000432_x007e(dtaDeadkey_00000432_x007e,
                                                     dtaDeadkey_00000432_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0027(dtaDeadkey_00000432_x0027,
                                                     dtaDeadkey_00000432_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00000432_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000432_x0022(dtaDeadkey_00000432_x0022,
                                                     dtaDeadkey_00000432_x0022 + 13);

//
// Keyboard 00000438 - Faeroese deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000438_x007e(dtaDeadkey_00000438_x007e,
                                                     dtaDeadkey_00000438_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000438_x00b4(dtaDeadkey_00000438_x00b4,
                                                     dtaDeadkey_00000438_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000438_x0060(dtaDeadkey_00000438_x0060,
                                                     dtaDeadkey_00000438_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000438_x00a8(dtaDeadkey_00000438_x00a8,
                                                     dtaDeadkey_00000438_x00a8 + 13);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000438_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000438_x005e(dtaDeadkey_00000438_x005e,
                                                     dtaDeadkey_00000438_x005e + 12);

//
// Keyboard 0000043B - Norwegian with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x00a8(dtaDeadkey_0000043B_x00a8,
                                                     dtaDeadkey_0000043B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x005e(dtaDeadkey_0000043B_x005e,
                                                     dtaDeadkey_0000043B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x007e(dtaDeadkey_0000043B_x007e,
                                                     dtaDeadkey_0000043B_x007e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x0060(dtaDeadkey_0000043B_x0060,
                                                     dtaDeadkey_0000043B_x0060 + 16);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000043B_x00b4[34] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x27, 0x00,  194 },  //   28
  { 0x27, 0x01,  195 },  //   29
  { 0x1a, 0x00,  196 },  //   30
  { 0x1a, 0x01,  197 },  //   31
  { 0x28, 0x00,  198 },  //   32
  { 0x28, 0x01,  199 },  //   33
};

static const Vct_IDeadkeys vctDeadkey_0000043B_x00b4(dtaDeadkey_0000043B_x00b4,
                                                     dtaDeadkey_0000043B_x00b4 + 34);

//
// Keyboard 00000452 - United Kingdom Extended deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x00a8(dtaDeadkey_00000452_x00a8,
                                                     dtaDeadkey_00000452_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x005e[16] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
  { 0x11, 0x00,  180 },  //   12
  { 0x11, 0x01,  181 },  //   13
  { 0x15, 0x00,  182 },  //   14
  { 0x15, 0x01,  183 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x005e(dtaDeadkey_00000452_x005e,
                                                     dtaDeadkey_00000452_x005e + 16);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x11, 0x00,  192 },  //   12
  { 0x11, 0x01,  193 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x00b4(dtaDeadkey_00000452_x00b4,
                                                     dtaDeadkey_00000452_x00b4 + 16);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000452_x007e(dtaDeadkey_00000452_x007e,
                                                     dtaDeadkey_00000452_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000452_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000452_x0060(dtaDeadkey_00000452_x0060,
                                                     dtaDeadkey_00000452_x0060 + 16);

//
// Keyboard 0000046A - Yoruba deadkeys
//

// Deadkey 0x005b
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x005b[14] = {
  { 0x39, 0x00,  200 },  //    0
  { 0x39, 0x01,  200 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x31, 0x00,  201 },  //    8
  { 0x31, 0x01,  202 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x16, 0x00,   63 },  //   12
  { 0x16, 0x01,   64 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x005b(dtaDeadkey_0000046A_x005b,
                                                     dtaDeadkey_0000046A_x005b + 14);

// Deadkey 0x005c
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x005c[8] = {
  { 0x39, 0x00,  203 },  //    0
  { 0x39, 0x01,  203 },  //    1
  { 0x12, 0x00,  204 },  //    2
  { 0x12, 0x01,  205 },  //    3
  { 0x18, 0x00,  206 },  //    4
  { 0x18, 0x01,  207 },  //    5
  { 0x1f, 0x00,  208 },  //    6
  { 0x1f, 0x01,  209 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x005c(dtaDeadkey_0000046A_x005c,
                                                     dtaDeadkey_0000046A_x005c + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000046A_x0027[14] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x31, 0x00,   83 },  //    8
  { 0x31, 0x01,   84 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000046A_x0027(dtaDeadkey_0000046A_x0027,
                                                     dtaDeadkey_0000046A_x0027 + 14);

//
// Keyboard 0000046C - Sesotho sa Leboa deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x005e(dtaDeadkey_0000046C_x005e,
                                                     dtaDeadkey_0000046C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0060(dtaDeadkey_0000046C_x0060,
                                                     dtaDeadkey_0000046C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x007e(dtaDeadkey_0000046C_x007e,
                                                     dtaDeadkey_0000046C_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0027(dtaDeadkey_0000046C_x0027,
                                                     dtaDeadkey_0000046C_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_0000046C_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000046C_x0022(dtaDeadkey_0000046C_x0022,
                                                     dtaDeadkey_0000046C_x0022 + 13);

//
// Keyboard 00000470 - Igbo deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000470_x005e(dtaDeadkey_00000470_x005e,
                                                     dtaDeadkey_00000470_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x31, 0x00,  201 },  //    8
  { 0x31, 0x01,  202 },  //    9
  { 0x18, 0x00,   61 },  //   10
  { 0x18, 0x01,   62 },  //   11
  { 0x16, 0x00,   63 },  //   12
  { 0x16, 0x01,   64 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000470_x0060(dtaDeadkey_00000470_x0060,
                                                     dtaDeadkey_00000470_x0060 + 14);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000470_x007e[16] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x32, 0x00,  220 },  //    8
  { 0x32, 0x01,  221 },  //    9
  { 0x31, 0x00,   83 },  //   10
  { 0x31, 0x01,   84 },  //   11
  { 0x18, 0x00,   85 },  //   12
  { 0x18, 0x01,   86 },  //   13
  { 0x16, 0x00,   91 },  //   14
  { 0x16, 0x01,   92 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00000470_x007e(dtaDeadkey_00000470_x007e,
                                                     dtaDeadkey_00000470_x007e + 16);

//
// Keyboard 00000481 - Maori deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000481_x0060[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000481_x0060(dtaDeadkey_00000481_x0060,
                                                     dtaDeadkey_00000481_x0060 + 12);

//
// Keyboard 00000488 - Wolof deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000488_x007e(dtaDeadkey_00000488_x007e,
                                                     dtaDeadkey_00000488_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000488_x0060(dtaDeadkey_00000488_x0060,
                                                     dtaDeadkey_00000488_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000488_x005e(dtaDeadkey_00000488_x005e,
                                                     dtaDeadkey_00000488_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000488_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000488_x00a8(dtaDeadkey_00000488_x00a8,
                                                     dtaDeadkey_00000488_x00a8 + 13);

//
// Keyboard 00000807 - Swiss German deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000807_x00a8(dtaDeadkey_00000807_x00a8,
                                                     dtaDeadkey_00000807_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000807_x00b4(dtaDeadkey_00000807_x00b4,
                                                     dtaDeadkey_00000807_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000807_x005e(dtaDeadkey_00000807_x005e,
                                                     dtaDeadkey_00000807_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000807_x0060(dtaDeadkey_00000807_x0060,
                                                     dtaDeadkey_00000807_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000807_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000807_x007e(dtaDeadkey_00000807_x007e,
                                                     dtaDeadkey_00000807_x007e + 8);

//
// Keyboard 0000080A - Latin American deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x00b4(dtaDeadkey_0000080A_x00b4,
                                                     dtaDeadkey_0000080A_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x00a8(dtaDeadkey_0000080A_x00a8,
                                                     dtaDeadkey_0000080A_x00a8 + 13);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x0060(dtaDeadkey_0000080A_x0060,
                                                     dtaDeadkey_0000080A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000080A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080A_x005e(dtaDeadkey_0000080A_x005e,
                                                     dtaDeadkey_0000080A_x005e + 12);

//
// Keyboard 0000080C - Belgian French deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x007e(dtaDeadkey_0000080C_x007e,
                                                     dtaDeadkey_0000080C_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x00b4(dtaDeadkey_0000080C_x00b4,
                                                     dtaDeadkey_0000080C_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x0060(dtaDeadkey_0000080C_x0060,
                                                     dtaDeadkey_0000080C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x005e(dtaDeadkey_0000080C_x005e,
                                                     dtaDeadkey_0000080C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000080C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000080C_x00a8(dtaDeadkey_0000080C_x00a8,
                                                     dtaDeadkey_0000080C_x00a8 + 13);

//
// Keyboard 00000813 - Belgian (Period) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000813_x007e(dtaDeadkey_00000813_x007e,
                                                     dtaDeadkey_00000813_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000813_x00b4(dtaDeadkey_00000813_x00b4,
                                                     dtaDeadkey_00000813_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000813_x0060(dtaDeadkey_00000813_x0060,
                                                     dtaDeadkey_00000813_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000813_x005e(dtaDeadkey_00000813_x005e,
                                                     dtaDeadkey_00000813_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000813_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000813_x00a8(dtaDeadkey_00000813_x00a8,
                                                     dtaDeadkey_00000813_x00a8 + 13);

//
// Keyboard 00000816 - Portuguese deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000816_x00b4(dtaDeadkey_00000816_x00b4,
                                                     dtaDeadkey_00000816_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000816_x0060(dtaDeadkey_00000816_x0060,
                                                     dtaDeadkey_00000816_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000816_x00a8(dtaDeadkey_00000816_x00a8,
                                                     dtaDeadkey_00000816_x00a8 + 13);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000816_x007e(dtaDeadkey_00000816_x007e,
                                                     dtaDeadkey_00000816_x007e + 8);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000816_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000816_x005e(dtaDeadkey_00000816_x005e,
                                                     dtaDeadkey_00000816_x005e + 12);

//
// Keyboard 0000081A - Serbian (Latin) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02dd(dtaDeadkey_0000081A_x02dd,
                                                     dtaDeadkey_0000081A_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x15, 0x00,   22 },  //   18
  { 0x15, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02c7(dtaDeadkey_0000081A_x02c7,
                                                     dtaDeadkey_0000081A_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x005e(dtaDeadkey_0000081A_x005e,
                                                     dtaDeadkey_0000081A_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02d8(dtaDeadkey_0000081A_x02d8,
                                                     dtaDeadkey_0000081A_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b0(dtaDeadkey_0000081A_x00b0,
                                                     dtaDeadkey_0000081A_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02db(dtaDeadkey_0000081A_x02db,
                                                     dtaDeadkey_0000081A_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x02d9(dtaDeadkey_0000081A_x02d9,
                                                     dtaDeadkey_0000081A_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b4(dtaDeadkey_0000081A_x00b4,
                                                     dtaDeadkey_0000081A_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00b8[6] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00b8(dtaDeadkey_0000081A_x00b8,
                                                     dtaDeadkey_0000081A_x00b8 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x00a8(dtaDeadkey_0000081A_x00a8,
                                                     dtaDeadkey_0000081A_x00a8 + 10);

// Deadkey 0x201a
static const st_IDKSCSS2Offset dtaDeadkey_0000081A_x201a[6] = {
  { 0x39, 0x00,  222 },  //    0
  { 0x39, 0x01,  222 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000081A_x201a(dtaDeadkey_0000081A_x201a,
                                                     dtaDeadkey_0000081A_x201a + 6);

//
// Keyboard 0000083B - Swedish with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x00a8(dtaDeadkey_0000083B_x00a8,
                                                     dtaDeadkey_0000083B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x005e(dtaDeadkey_0000083B_x005e,
                                                     dtaDeadkey_0000083B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x007e(dtaDeadkey_0000083B_x007e,
                                                     dtaDeadkey_0000083B_x007e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x1a, 0x00,  196 },  //   28
  { 0x1a, 0x01,  197 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x00b4(dtaDeadkey_0000083B_x00b4,
                                                     dtaDeadkey_0000083B_x00b4 + 30);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000083B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0000083B_x0060(dtaDeadkey_0000083B_x0060,
                                                     dtaDeadkey_0000083B_x0060 + 16);

//
// Keyboard 00000C0C - Canadian French (Legacy) deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00b4(dtaDeadkey_00000C0C_x00b4,
                                                     dtaDeadkey_00000C0C_x00b4 + 14);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00b8[2] = {
  { 0x2e, 0x00,  111 },  //    0
  { 0x2e, 0x01,  112 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00b8(dtaDeadkey_00000C0C_x00b8,
                                                     dtaDeadkey_00000C0C_x00b8 + 2);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x005e(dtaDeadkey_00000C0C_x005e,
                                                     dtaDeadkey_00000C0C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x0060(dtaDeadkey_00000C0C_x0060,
                                                     dtaDeadkey_00000C0C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x007e(dtaDeadkey_00000C0C_x007e,
                                                     dtaDeadkey_00000C0C_x007e + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00000C0C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00000C0C_x00a8(dtaDeadkey_00000C0C_x00a8,
                                                     dtaDeadkey_00000C0C_x00a8 + 13);

//
// Keyboard 00000C1A - Serbian (Cyrillic) deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00000C1A_x0027[6] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x22, 0x00,  223 },  //    2
  { 0x22, 0x01,  224 },  //    3
  { 0x25, 0x00,  225 },  //    4
  { 0x25, 0x01,  226 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00000C1A_x0027(dtaDeadkey_00000C1A_x0027,
                                                     dtaDeadkey_00000C1A_x0027 + 6);

//
// Keyboard 00001009 - Canadian French deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00b4(dtaDeadkey_00001009_x00b4,
                                                     dtaDeadkey_00001009_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001009_x0060(dtaDeadkey_00001009_x0060,
                                                     dtaDeadkey_00001009_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001009_x005e(dtaDeadkey_00001009_x005e,
                                                     dtaDeadkey_00001009_x005e + 12);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00b8[4] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00b8(dtaDeadkey_00001009_x00b8,
                                                     dtaDeadkey_00001009_x00b8 + 4);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00001009_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00001009_x00a8(dtaDeadkey_00001009_x00a8,
                                                     dtaDeadkey_00001009_x00a8 + 13);

//
// Keyboard 0000100C - Swiss French deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x00a8[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x2c, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x00a8(dtaDeadkey_0000100C_x00a8,
                                                     dtaDeadkey_0000100C_x00a8 + 13);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x00b4(dtaDeadkey_0000100C_x00b4,
                                                     dtaDeadkey_0000100C_x00b4 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x005e(dtaDeadkey_0000100C_x005e,
                                                     dtaDeadkey_0000100C_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x0060(dtaDeadkey_0000100C_x0060,
                                                     dtaDeadkey_0000100C_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0000100C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0000100C_x007e(dtaDeadkey_0000100C_x007e,
                                                     dtaDeadkey_0000100C_x007e + 8);

//
// Keyboard 00001809 - Irish deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00001809_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00001809_x00b4(dtaDeadkey_00001809_x00b4,
                                                     dtaDeadkey_00001809_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00001809_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00001809_x0060(dtaDeadkey_00001809_x0060,
                                                     dtaDeadkey_00001809_x0060 + 12);

//
// Keyboard 0000201A - Bosnian (Cyrillic) deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_0000201A_x0027[6] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x22, 0x00,  223 },  //    2
  { 0x22, 0x01,  224 },  //    3
  { 0x25, 0x00,  225 },  //    4
  { 0x25, 0x01,  226 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0000201A_x0027(dtaDeadkey_0000201A_x0027,
                                                     dtaDeadkey_0000201A_x0027 + 6);

//
// Keyboard 00010405 - Czech (QWERTY) deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00b4(dtaDeadkey_00010405_x00b4,
                                                     dtaDeadkey_00010405_x00b4 + 26);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00010405_x02c7(dtaDeadkey_00010405_x02c7,
                                                     dtaDeadkey_00010405_x02c7 + 20);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00b0(dtaDeadkey_00010405_x00b0,
                                                     dtaDeadkey_00010405_x00b0 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010405_x00a8(dtaDeadkey_00010405_x00a8,
                                                     dtaDeadkey_00010405_x00a8 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010405_x005e(dtaDeadkey_00010405_x005e,
                                                     dtaDeadkey_00010405_x005e + 12);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010405_x02dd(dtaDeadkey_00010405_x02dd,
                                                     dtaDeadkey_00010405_x02dd + 6);

//
// Keyboard 00010407 - German (IBM) deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010407_x005e(dtaDeadkey_00010407_x005e,
                                                     dtaDeadkey_00010407_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x2c, 0x00,   93 },  //   12
  { 0x2c, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010407_x00b4(dtaDeadkey_00010407_x00b4,
                                                     dtaDeadkey_00010407_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00010407_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010407_x0060(dtaDeadkey_00010407_x0060,
                                                     dtaDeadkey_00010407_x0060 + 12);

//
// Keyboard 00010408 - Greek (220) deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00010408_x0384(dtaDeadkey_00010408_x0384,
                                                     dtaDeadkey_00010408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010408_x00a8(dtaDeadkey_00010408_x00a8,
                                                     dtaDeadkey_00010408_x00a8 + 6);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00010408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010408_x0385(dtaDeadkey_00010408_x0385,
                                                     dtaDeadkey_00010408_x0385 + 4);

//
// Keyboard 0001040A - Spanish Variation deadkeys
//

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x0060(dtaDeadkey_0001040A_x0060,
                                                     dtaDeadkey_0001040A_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x005e(dtaDeadkey_0001040A_x005e,
                                                     dtaDeadkey_0001040A_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x00b4[13] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x00b4(dtaDeadkey_0001040A_x00b4,
                                                     dtaDeadkey_0001040A_x00b4 + 13);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x00a8(dtaDeadkey_0001040A_x00a8,
                                                     dtaDeadkey_0001040A_x00a8 + 13);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001040A_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001040A_x007e(dtaDeadkey_0001040A_x007e,
                                                     dtaDeadkey_0001040A_x007e + 8);

//
// Keyboard 00010415 - Polish (214) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02dd(dtaDeadkey_00010415_x02dd,
                                                     dtaDeadkey_00010415_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02c7[18] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x31, 0x00,   14 },  //    8
  { 0x31, 0x01,   15 },  //    9
  { 0x13, 0x00,   16 },  //   10
  { 0x13, 0x01,   17 },  //   11
  { 0x1f, 0x00,   18 },  //   12
  { 0x1f, 0x01,   19 },  //   13
  { 0x14, 0x00,   20 },  //   14
  { 0x14, 0x01,   21 },  //   15
  { 0x15, 0x00,   22 },  //   16
  { 0x15, 0x01,   23 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02c7(dtaDeadkey_00010415_x02c7,
                                                     dtaDeadkey_00010415_x02c7 + 18);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010415_x005e(dtaDeadkey_00010415_x005e,
                                                     dtaDeadkey_00010415_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02d8(dtaDeadkey_00010415_x02d8,
                                                     dtaDeadkey_00010415_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b0(dtaDeadkey_00010415_x00b0,
                                                     dtaDeadkey_00010415_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010415_x02db(dtaDeadkey_00010415_x02db,
                                                     dtaDeadkey_00010415_x02db + 6);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b7[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x15, 0x00,   70 },  //    2
  { 0x15, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b7(dtaDeadkey_00010415_x00b7,
                                                     dtaDeadkey_00010415_x00b7 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   93 },  //   22
  { 0x2c, 0x01,   94 },  //   23
  { 0x15, 0x00,   95 },  //   24
  { 0x15, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b4(dtaDeadkey_00010415_x00b4,
                                                     dtaDeadkey_00010415_x00b4 + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00a8(dtaDeadkey_00010415_x00a8,
                                                     dtaDeadkey_00010415_x00a8 + 10);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00010415_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010415_x00b8(dtaDeadkey_00010415_x00b8,
                                                     dtaDeadkey_00010415_x00b8 + 8);

//
// Keyboard 00010418 - Romanian (Standard) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02dd(dtaDeadkey_00010418_x02dd,
                                                     dtaDeadkey_00010418_x02dd + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x007e[2] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00010418_x007e(dtaDeadkey_00010418_x007e,
                                                     dtaDeadkey_00010418_x007e + 2);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02c7(dtaDeadkey_00010418_x02c7,
                                                     dtaDeadkey_00010418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010418_x005e(dtaDeadkey_00010418_x005e,
                                                     dtaDeadkey_00010418_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02d8(dtaDeadkey_00010418_x02d8,
                                                     dtaDeadkey_00010418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b0(dtaDeadkey_00010418_x00b0,
                                                     dtaDeadkey_00010418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02db(dtaDeadkey_00010418_x02db,
                                                     dtaDeadkey_00010418_x02db + 6);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00010418_x0060(dtaDeadkey_00010418_x0060,
                                                     dtaDeadkey_00010418_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010418_x02d9(dtaDeadkey_00010418_x02d9,
                                                     dtaDeadkey_00010418_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b4(dtaDeadkey_00010418_x00b4,
                                                     dtaDeadkey_00010418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00b8(dtaDeadkey_00010418_x00b8,
                                                     dtaDeadkey_00010418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010418_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010418_x00a8(dtaDeadkey_00010418_x00a8,
                                                     dtaDeadkey_00010418_x00a8 + 14);

//
// Keyboard 0001041B - Slovak (QWERTY) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02dd(dtaDeadkey_0001041B_x02dd,
                                                     dtaDeadkey_0001041B_x02dd + 6);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02c7(dtaDeadkey_0001041B_x02c7,
                                                     dtaDeadkey_0001041B_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x005e[8] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x17, 0x00,   29 },  //    4
  { 0x17, 0x01,   30 },  //    5
  { 0x18, 0x00,   31 },  //    6
  { 0x18, 0x01,   32 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x005e(dtaDeadkey_0001041B_x005e,
                                                     dtaDeadkey_0001041B_x005e + 8);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02d8(dtaDeadkey_0001041B_x02d8,
                                                     dtaDeadkey_0001041B_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b0(dtaDeadkey_0001041B_x00b0,
                                                     dtaDeadkey_0001041B_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02db(dtaDeadkey_0001041B_x02db,
                                                     dtaDeadkey_0001041B_x02db + 6);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x02d9[4] = {
  { 0x39, 0x00,  156 },  //    0
  { 0x39, 0x01,  156 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x02d9(dtaDeadkey_0001041B_x02d9,
                                                     dtaDeadkey_0001041B_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b4(dtaDeadkey_0001041B_x00b4,
                                                     dtaDeadkey_0001041B_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00b8(dtaDeadkey_0001041B_x00b8,
                                                     dtaDeadkey_0001041B_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001041B_x00a8[10] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x18, 0x00,  104 },  //    6
  { 0x18, 0x01,  105 },  //    7
  { 0x16, 0x00,  106 },  //    8
  { 0x16, 0x01,  107 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_0001041B_x00a8(dtaDeadkey_0001041B_x00a8,
                                                     dtaDeadkey_0001041B_x00a8 + 10);

//
// Keyboard 0001041F - Turkish F deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x005e[14] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x21, 0x00,   25 },  //    2
  { 0x21, 0x01,   26 },  //    3
  { 0x20, 0x00,   27 },  //    4
  { 0x20, 0x01,   28 },  //    5
  { 0x13, 0x00,   29 },  //    6
  { 0x13, 0x01,   30 },  //    7
  { 0x14, 0x00,   31 },  //    8
  { 0x14, 0x01,   32 },  //    9
  { 0x1e, 0x00,   33 },  //   10
  { 0x1e, 0x01,   34 },  //   11
  { 0x1f, 0x00,   29 },  //   12
  { 0x1f, 0x01,   30 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x005e(dtaDeadkey_0001041F_x005e,
                                                     dtaDeadkey_0001041F_x005e + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x00a8[15] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x21, 0x00,   98 },  //    2
  { 0x21, 0x01,   99 },  //    3
  { 0x20, 0x00,  100 },  //    4
  { 0x20, 0x01,  101 },  //    5
  { 0x13, 0x00,  102 },  //    6
  { 0x13, 0x01,  103 },  //    7
  { 0x14, 0x00,  104 },  //    8
  { 0x14, 0x01,  105 },  //    9
  { 0x1e, 0x00,  106 },  //   10
  { 0x1e, 0x01,  107 },  //   11
  { 0x27, 0x00,  108 },  //   12
  { 0x1f, 0x00,  102 },  //   13
  { 0x1f, 0x01,  103 },  //   14
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x00a8(dtaDeadkey_0001041F_x00a8,
                                                     dtaDeadkey_0001041F_x00a8 + 15);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x21, 0x00,  128 },  //    2
  { 0x21, 0x01,  129 },  //    3
  { 0x17, 0x00,  130 },  //    4
  { 0x17, 0x01,  131 },  //    5
  { 0x14, 0x00,  132 },  //    6
  { 0x14, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x007e(dtaDeadkey_0001041F_x007e,
                                                     dtaDeadkey_0001041F_x007e + 8);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x0060[14] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x21, 0x00,   55 },  //    2
  { 0x21, 0x01,   56 },  //    3
  { 0x20, 0x00,   57 },  //    4
  { 0x20, 0x01,   58 },  //    5
  { 0x13, 0x00,   59 },  //    6
  { 0x13, 0x01,   60 },  //    7
  { 0x14, 0x00,   61 },  //    8
  { 0x14, 0x01,   62 },  //    9
  { 0x1e, 0x00,   63 },  //   10
  { 0x1e, 0x01,   64 },  //   11
  { 0x1f, 0x00,   59 },  //   12
  { 0x1f, 0x01,   60 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x0060(dtaDeadkey_0001041F_x0060,
                                                     dtaDeadkey_0001041F_x0060 + 14);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001041F_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x21, 0x00,   73 },  //    2
  { 0x21, 0x01,   74 },  //    3
  { 0x20, 0x00,   77 },  //    4
  { 0x20, 0x01,   78 },  //    5
  { 0x13, 0x00,   79 },  //    6
  { 0x13, 0x01,   80 },  //    7
  { 0x14, 0x00,   85 },  //    8
  { 0x14, 0x01,   86 },  //    9
  { 0x1e, 0x00,   91 },  //   10
  { 0x1e, 0x01,   92 },  //   11
  { 0x1f, 0x00,   79 },  //   12
  { 0x1f, 0x01,   80 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001041F_x00b4(dtaDeadkey_0001041F_x00b4,
                                                     dtaDeadkey_0001041F_x00b4 + 14);

//
// Keyboard 00010426 - Latvian (QWERTY) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x007e[4] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x18, 0x00,  132 },  //    2
  { 0x18, 0x01,  133 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00010426_x007e(dtaDeadkey_00010426_x007e,
                                                     dtaDeadkey_00010426_x007e + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00b0[9] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x12, 0x00,   66 },  //    4
  { 0x12, 0x01,   67 },  //    5
  { 0x22, 0x00,  163 },  //    6
  { 0x2c, 0x00,   70 },  //    7
  { 0x2c, 0x01,   71 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00b0(dtaDeadkey_00010426_x00b0,
                                                     dtaDeadkey_00010426_x00b0 + 9);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x1f, 0x00,   89 },  //   10
  { 0x1f, 0x01,   90 },  //   11
  { 0x2c, 0x00,   95 },  //   12
  { 0x2c, 0x01,   96 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00b4(dtaDeadkey_00010426_x00b4,
                                                     dtaDeadkey_00010426_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00010426_x00a8[8] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x18, 0x00,  104 },  //    4
  { 0x18, 0x01,  105 },  //    5
  { 0x16, 0x00,  106 },  //    6
  { 0x16, 0x01,  107 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00010426_x00a8(dtaDeadkey_00010426_x00a8,
                                                     dtaDeadkey_00010426_x00a8 + 8);

//
// Keyboard 0001043B - Sami Extended Norway deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x007e(dtaDeadkey_0001043B_x007e,
                                                     dtaDeadkey_0001043B_x007e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x02c7[26] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x22, 0x00,  227 },  //    8
  { 0x22, 0x01,  228 },  //    9
  { 0x23, 0x00,  229 },  //   10
  { 0x23, 0x01,  230 },  //   11
  { 0x25, 0x00,  231 },  //   12
  { 0x25, 0x01,  232 },  //   13
  { 0x26, 0x00,   12 },  //   14
  { 0x26, 0x01,   13 },  //   15
  { 0x31, 0x00,   14 },  //   16
  { 0x31, 0x01,   15 },  //   17
  { 0x13, 0x00,   16 },  //   18
  { 0x13, 0x01,   17 },  //   19
  { 0x1f, 0x00,   18 },  //   20
  { 0x1f, 0x01,   19 },  //   21
  { 0x14, 0x00,   20 },  //   22
  { 0x14, 0x01,   21 },  //   23
  { 0x2c, 0x00,   22 },  //   24
  { 0x2c, 0x01,   23 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x02c7(dtaDeadkey_0001043B_x02c7,
                                                     dtaDeadkey_0001043B_x02c7 + 26);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x0060(dtaDeadkey_0001043B_x0060,
                                                     dtaDeadkey_0001043B_x0060 + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   95 },  //   22
  { 0x2c, 0x01,   96 },  //   23
  { 0x27, 0x00,  194 },  //   24
  { 0x27, 0x01,  195 },  //   25
  { 0x1a, 0x00,  196 },  //   26
  { 0x1a, 0x01,  197 },  //   27
  { 0x28, 0x00,  198 },  //   28
  { 0x28, 0x01,  199 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x00b4(dtaDeadkey_0001043B_x00b4,
                                                     dtaDeadkey_0001043B_x00b4 + 30);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x00a8[12] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x00a8(dtaDeadkey_0001043B_x00a8,
                                                     dtaDeadkey_0001043B_x00a8 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001043B_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0001043B_x005e(dtaDeadkey_0001043B_x005e,
                                                     dtaDeadkey_0001043B_x005e + 22);

//
// Keyboard 0001080C - Belgian (Comma) deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x10, 0x00,  128 },  //    2
  { 0x10, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x007e(dtaDeadkey_0001080C_x007e,
                                                     dtaDeadkey_0001080C_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x10, 0x00,   73 },  //    2
  { 0x10, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x00b4(dtaDeadkey_0001080C_x00b4,
                                                     dtaDeadkey_0001080C_x00b4 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x10, 0x00,   55 },  //    2
  { 0x10, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x0060(dtaDeadkey_0001080C_x0060,
                                                     dtaDeadkey_0001080C_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x10, 0x00,   25 },  //    2
  { 0x10, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x005e(dtaDeadkey_0001080C_x005e,
                                                     dtaDeadkey_0001080C_x005e + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001080C_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x10, 0x00,   98 },  //    2
  { 0x10, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_0001080C_x00a8(dtaDeadkey_0001080C_x00a8,
                                                     dtaDeadkey_0001080C_x00a8 + 13);

//
// Keyboard 0001083B - Finnish with Sami deadkeys
//

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x00a8[16] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x11, 0x00,  170 },  //   12
  { 0x11, 0x01,  171 },  //   13
  { 0x15, 0x00,  108 },  //   14
  { 0x15, 0x01,  109 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x00a8(dtaDeadkey_0001083B_x00a8,
                                                     dtaDeadkey_0001083B_x00a8 + 16);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x005e(dtaDeadkey_0001083B_x005e,
                                                     dtaDeadkey_0001083B_x005e + 26);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x007e(dtaDeadkey_0001083B_x007e,
                                                     dtaDeadkey_0001083B_x007e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x00b4[30] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x11, 0x00,  192 },  //   22
  { 0x11, 0x01,  193 },  //   23
  { 0x15, 0x00,   93 },  //   24
  { 0x15, 0x01,   94 },  //   25
  { 0x2c, 0x00,   95 },  //   26
  { 0x2c, 0x01,   96 },  //   27
  { 0x1a, 0x00,  196 },  //   28
  { 0x1a, 0x01,  197 },  //   29
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x00b4(dtaDeadkey_0001083B_x00b4,
                                                     dtaDeadkey_0001083B_x00b4 + 30);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0001083B_x0060[16] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
  { 0x11, 0x00,  188 },  //   12
  { 0x11, 0x01,  189 },  //   13
  { 0x15, 0x00,  190 },  //   14
  { 0x15, 0x01,  191 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0001083B_x0060(dtaDeadkey_0001083B_x0060,
                                                     dtaDeadkey_0001083B_x0060 + 16);

//
// Keyboard 00011009 - Canadian Multilingual Standard deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b4(dtaDeadkey_00011009_x00b4,
                                                     dtaDeadkey_00011009_x00b4 + 26);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02dd(dtaDeadkey_00011009_x02dd,
                                                     dtaDeadkey_00011009_x02dd + 6);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b8[18] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x22, 0x00,  113 },  //    4
  { 0x22, 0x01,  114 },  //    5
  { 0x25, 0x00,  115 },  //    6
  { 0x25, 0x01,  116 },  //    7
  { 0x26, 0x00,  117 },  //    8
  { 0x26, 0x01,  118 },  //    9
  { 0x31, 0x00,  119 },  //   10
  { 0x31, 0x01,  120 },  //   11
  { 0x13, 0x00,  121 },  //   12
  { 0x13, 0x01,  122 },  //   13
  { 0x1f, 0x00,  123 },  //   14
  { 0x1f, 0x01,  124 },  //   15
  { 0x14, 0x00,  125 },  //   16
  { 0x14, 0x01,  126 },  //   17
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b8(dtaDeadkey_00011009_x00b8,
                                                     dtaDeadkey_00011009_x00b8 + 18);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02db[10] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
  { 0x17, 0x00,   50 },  //    6
  { 0x17, 0x01,   51 },  //    7
  { 0x16, 0x00,   52 },  //    8
  { 0x16, 0x01,   53 },  //    9
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02db(dtaDeadkey_00011009_x02db,
                                                     dtaDeadkey_00011009_x02db + 10);

// Deadkey 0x00b7
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00b7[11] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2e, 0x00,  233 },  //    2
  { 0x2e, 0x01,  234 },  //    3
  { 0x12, 0x00,   66 },  //    4
  { 0x12, 0x01,   67 },  //    5
  { 0x22, 0x00,  163 },  //    6
  { 0x22, 0x01,  235 },  //    7
  { 0x17, 0x01,   69 },  //    8
  { 0x2c, 0x00,   70 },  //    9
  { 0x2c, 0x01,   71 },  //   10
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00b7(dtaDeadkey_00011009_x00b7,
                                                     dtaDeadkey_00011009_x00b7 + 11);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02c7(dtaDeadkey_00011009_x02c7,
                                                     dtaDeadkey_00011009_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x005e[26] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
  { 0x11, 0x00,  180 },  //   22
  { 0x11, 0x01,  181 },  //   23
  { 0x15, 0x00,  182 },  //   24
  { 0x15, 0x01,  183 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00011009_x005e(dtaDeadkey_00011009_x005e,
                                                     dtaDeadkey_00011009_x005e + 26);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00a8(dtaDeadkey_00011009_x00a8,
                                                     dtaDeadkey_00011009_x00a8 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x0060(dtaDeadkey_00011009_x0060,
                                                     dtaDeadkey_00011009_x0060 + 12);

// Deadkey 0x02da
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02da[6] = {
  { 0x39, 0x00,  236 },  //    0
  { 0x39, 0x01,  236 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02da(dtaDeadkey_00011009_x02da,
                                                     dtaDeadkey_00011009_x02da + 6);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x02d8[8] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
  { 0x22, 0x00,   38 },  //    4
  { 0x22, 0x01,   39 },  //    5
  { 0x16, 0x00,  237 },  //    6
  { 0x16, 0x01,  238 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00011009_x02d8(dtaDeadkey_00011009_x02d8,
                                                     dtaDeadkey_00011009_x02d8 + 8);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x007e(dtaDeadkey_00011009_x007e,
                                                     dtaDeadkey_00011009_x007e + 12);

// Deadkey 0x00af
static const st_IDKSCSS2Offset dtaDeadkey_00011009_x00af[12] = {
  { 0x39, 0x00,  239 },  //    0
  { 0x39, 0x01,  239 },  //    1
  { 0x1e, 0x00,  210 },  //    2
  { 0x1e, 0x01,  211 },  //    3
  { 0x12, 0x00,  212 },  //    4
  { 0x12, 0x01,  213 },  //    5
  { 0x17, 0x00,  214 },  //    6
  { 0x17, 0x01,  215 },  //    7
  { 0x18, 0x00,  216 },  //    8
  { 0x18, 0x01,  217 },  //    9
  { 0x16, 0x00,  218 },  //   10
  { 0x16, 0x01,  219 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011009_x00af(dtaDeadkey_00011009_x00af,
                                                     dtaDeadkey_00011009_x00af + 12);

//
// Keyboard 00011809 - Gaelic deadkeys
//

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00011809_x0027[14] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00011809_x0027(dtaDeadkey_00011809_x0027,
                                                     dtaDeadkey_00011809_x0027 + 14);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00011809_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00011809_x0060(dtaDeadkey_00011809_x0060,
                                                     dtaDeadkey_00011809_x0060 + 12);

//
// Keyboard 00020405 - Czech Programmers deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00b4(dtaDeadkey_00020405_x00b4,
                                                     dtaDeadkey_00020405_x00b4 + 26);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00020405_x02c7(dtaDeadkey_00020405_x02c7,
                                                     dtaDeadkey_00020405_x02c7 + 20);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00b0[6] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x1e, 0x00,   41 },  //    2
  { 0x1e, 0x01,   42 },  //    3
  { 0x16, 0x00,   43 },  //    4
  { 0x16, 0x01,   44 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00b0(dtaDeadkey_00020405_x00b0,
                                                     dtaDeadkey_00020405_x00b0 + 6);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00020405_x00a8(dtaDeadkey_00020405_x00a8,
                                                     dtaDeadkey_00020405_x00a8 + 14);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020405_x005e(dtaDeadkey_00020405_x005e,
                                                     dtaDeadkey_00020405_x005e + 12);

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00020405_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020405_x02dd(dtaDeadkey_00020405_x02dd,
                                                     dtaDeadkey_00020405_x02dd + 6);

//
// Keyboard 00020408 - Greek (319) deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x0384[16] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00020408_x0384(dtaDeadkey_00020408_x0384,
                                                     dtaDeadkey_00020408_x0384 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x00a8[6] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020408_x00a8(dtaDeadkey_00020408_x00a8,
                                                     dtaDeadkey_00020408_x00a8 + 6);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00020408_x0385[4] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020408_x0385(dtaDeadkey_00020408_x0385,
                                                     dtaDeadkey_00020408_x0385 + 4);

//
// Keyboard 00020409 - United States-International deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020409_x005e(dtaDeadkey_00020409_x005e,
                                                     dtaDeadkey_00020409_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0060(dtaDeadkey_00020409_x0060,
                                                     dtaDeadkey_00020409_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00020409_x007e(dtaDeadkey_00020409_x007e,
                                                     dtaDeadkey_00020409_x007e + 8);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0027[16] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0027(dtaDeadkey_00020409_x0027,
                                                     dtaDeadkey_00020409_x0027 + 16);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00020409_x0022[13] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00020409_x0022(dtaDeadkey_00020409_x0022,
                                                     dtaDeadkey_00020409_x0022 + 13);

//
// Keyboard 00020418 - Romanian (Programmers) deadkeys
//

// Deadkey 0x02dd
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02dd[6] = {
  { 0x39, 0x00,    0 },  //    0
  { 0x39, 0x01,    0 },  //    1
  { 0x18, 0x00,    1 },  //    2
  { 0x18, 0x01,    2 },  //    3
  { 0x16, 0x00,    3 },  //    4
  { 0x16, 0x01,    4 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02dd(dtaDeadkey_00020418_x02dd,
                                                     dtaDeadkey_00020418_x02dd + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x007e[2] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00020418_x007e(dtaDeadkey_00020418_x007e,
                                                     dtaDeadkey_00020418_x007e + 2);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02c7[20] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x26, 0x00,   12 },  //    8
  { 0x26, 0x01,   13 },  //    9
  { 0x31, 0x00,   14 },  //   10
  { 0x31, 0x01,   15 },  //   11
  { 0x13, 0x00,   16 },  //   12
  { 0x13, 0x01,   17 },  //   13
  { 0x1f, 0x00,   18 },  //   14
  { 0x1f, 0x01,   19 },  //   15
  { 0x14, 0x00,   20 },  //   16
  { 0x14, 0x01,   21 },  //   17
  { 0x2c, 0x00,   22 },  //   18
  { 0x2c, 0x01,   23 },  //   19
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02c7(dtaDeadkey_00020418_x02c7,
                                                     dtaDeadkey_00020418_x02c7 + 20);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020418_x005e(dtaDeadkey_00020418_x005e,
                                                     dtaDeadkey_00020418_x005e + 12);

// Deadkey 0x02d8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02d8[4] = {
  { 0x39, 0x00,   35 },  //    0
  { 0x39, 0x01,   35 },  //    1
  { 0x1e, 0x00,   36 },  //    2
  { 0x1e, 0x01,   37 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02d8(dtaDeadkey_00020418_x02d8,
                                                     dtaDeadkey_00020418_x02d8 + 4);

// Deadkey 0x00b0
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b0[4] = {
  { 0x39, 0x00,   40 },  //    0
  { 0x39, 0x01,   40 },  //    1
  { 0x16, 0x00,   43 },  //    2
  { 0x16, 0x01,   44 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b0(dtaDeadkey_00020418_x00b0,
                                                     dtaDeadkey_00020418_x00b0 + 4);

// Deadkey 0x02db
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02db[6] = {
  { 0x39, 0x00,   45 },  //    0
  { 0x39, 0x01,   45 },  //    1
  { 0x1e, 0x00,   46 },  //    2
  { 0x1e, 0x01,   47 },  //    3
  { 0x12, 0x00,   48 },  //    4
  { 0x12, 0x01,   49 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02db(dtaDeadkey_00020418_x02db,
                                                     dtaDeadkey_00020418_x02db + 6);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00020418_x0060(dtaDeadkey_00020418_x0060,
                                                     dtaDeadkey_00020418_x0060 + 12);

// Deadkey 0x02d9
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x02d9[4] = {
  { 0x39, 0x00,   65 },  //    0
  { 0x39, 0x01,   65 },  //    1
  { 0x2c, 0x00,   70 },  //    2
  { 0x2c, 0x01,   71 },  //    3
};

static const Vct_IDeadkeys vctDeadkey_00020418_x02d9(dtaDeadkey_00020418_x02d9,
                                                     dtaDeadkey_00020418_x02d9 + 4);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x15, 0x00,   93 },  //   22
  { 0x15, 0x01,   94 },  //   23
  { 0x2c, 0x00,   95 },  //   24
  { 0x2c, 0x01,   96 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b4(dtaDeadkey_00020418_x00b4,
                                                     dtaDeadkey_00020418_x00b4 + 26);

// Deadkey 0x00b8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00b8[8] = {
  { 0x39, 0x00,  110 },  //    0
  { 0x39, 0x01,  110 },  //    1
  { 0x2e, 0x00,  111 },  //    2
  { 0x2e, 0x01,  112 },  //    3
  { 0x1f, 0x00,  123 },  //    4
  { 0x1f, 0x01,  124 },  //    5
  { 0x14, 0x00,  125 },  //    6
  { 0x14, 0x01,  126 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00b8(dtaDeadkey_00020418_x00b8,
                                                     dtaDeadkey_00020418_x00b8 + 8);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00020418_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  109 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00020418_x00a8(dtaDeadkey_00020418_x00a8,
                                                     dtaDeadkey_00020418_x00a8 + 14);

//
// Keyboard 0002042E - Sorbian Standard deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x12, 0x00,   10 },  //    4
  { 0x12, 0x01,   11 },  //    5
  { 0x13, 0x00,   16 },  //    6
  { 0x13, 0x01,   17 },  //    7
  { 0x1f, 0x00,   18 },  //    8
  { 0x1f, 0x01,   19 },  //    9
  { 0x15, 0x00,   22 },  //   10
  { 0x15, 0x01,   23 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x005e(dtaDeadkey_0002042E_x005e,
                                                     dtaDeadkey_0002042E_x005e + 12);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x2e, 0x00,   75 },  //    2
  { 0x2e, 0x01,   76 },  //    3
  { 0x26, 0x00,  157 },  //    4
  { 0x26, 0x01,  158 },  //    5
  { 0x31, 0x00,   83 },  //    6
  { 0x31, 0x01,   84 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x13, 0x00,   87 },  //   10
  { 0x13, 0x01,   88 },  //   11
  { 0x1f, 0x00,   89 },  //   12
  { 0x1f, 0x01,   90 },  //   13
  { 0x15, 0x00,   95 },  //   14
  { 0x15, 0x01,   96 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x00b4(dtaDeadkey_0002042E_x00b4,
                                                     dtaDeadkey_0002042E_x00b4 + 16);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0002042E_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002042E_x0060(dtaDeadkey_0002042E_x0060,
                                                     dtaDeadkey_0002042E_x0060 + 12);

//
// Keyboard 0002083B - Sami Extended Finland-Sweden deadkeys
//

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x007e[12] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x17, 0x00,  184 },  //    4
  { 0x17, 0x01,  185 },  //    5
  { 0x31, 0x00,  130 },  //    6
  { 0x31, 0x01,  131 },  //    7
  { 0x18, 0x00,  132 },  //    8
  { 0x18, 0x01,  133 },  //    9
  { 0x16, 0x00,  186 },  //   10
  { 0x16, 0x01,  187 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x007e(dtaDeadkey_0002083B_x007e,
                                                     dtaDeadkey_0002083B_x007e + 12);

// Deadkey 0x02c7
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x02c7[26] = {
  { 0x39, 0x00,    5 },  //    0
  { 0x39, 0x01,    5 },  //    1
  { 0x2e, 0x00,    6 },  //    2
  { 0x2e, 0x01,    7 },  //    3
  { 0x20, 0x00,    8 },  //    4
  { 0x20, 0x01,    9 },  //    5
  { 0x12, 0x00,   10 },  //    6
  { 0x12, 0x01,   11 },  //    7
  { 0x22, 0x00,  227 },  //    8
  { 0x22, 0x01,  228 },  //    9
  { 0x23, 0x00,  229 },  //   10
  { 0x23, 0x01,  230 },  //   11
  { 0x25, 0x00,  231 },  //   12
  { 0x25, 0x01,  232 },  //   13
  { 0x26, 0x00,   12 },  //   14
  { 0x26, 0x01,   13 },  //   15
  { 0x31, 0x00,   14 },  //   16
  { 0x31, 0x01,   15 },  //   17
  { 0x13, 0x00,   16 },  //   18
  { 0x13, 0x01,   17 },  //   19
  { 0x1f, 0x00,   18 },  //   20
  { 0x1f, 0x01,   19 },  //   21
  { 0x14, 0x00,   20 },  //   22
  { 0x14, 0x01,   21 },  //   23
  { 0x2c, 0x00,   22 },  //   24
  { 0x2c, 0x01,   23 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x02c7(dtaDeadkey_0002083B_x02c7,
                                                     dtaDeadkey_0002083B_x02c7 + 26);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x00b4[26] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,   75 },  //    4
  { 0x2e, 0x01,   76 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x26, 0x00,   81 },  //   10
  { 0x26, 0x01,   82 },  //   11
  { 0x31, 0x00,   83 },  //   12
  { 0x31, 0x01,   84 },  //   13
  { 0x18, 0x00,   85 },  //   14
  { 0x18, 0x01,   86 },  //   15
  { 0x13, 0x00,   87 },  //   16
  { 0x13, 0x01,   88 },  //   17
  { 0x1f, 0x00,   89 },  //   18
  { 0x1f, 0x01,   90 },  //   19
  { 0x16, 0x00,   91 },  //   20
  { 0x16, 0x01,   92 },  //   21
  { 0x2c, 0x00,   95 },  //   22
  { 0x2c, 0x01,   96 },  //   23
  { 0x1a, 0x00,  196 },  //   24
  { 0x1a, 0x01,  197 },  //   25
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x00b4(dtaDeadkey_0002083B_x00b4,
                                                     dtaDeadkey_0002083B_x00b4 + 26);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x0060(dtaDeadkey_0002083B_x0060,
                                                     dtaDeadkey_0002083B_x0060 + 12);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x00a8[12] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x00a8(dtaDeadkey_0002083B_x00a8,
                                                     dtaDeadkey_0002083B_x00a8 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_0002083B_x005e[22] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x2e, 0x00,  172 },  //    4
  { 0x2e, 0x01,  173 },  //    5
  { 0x12, 0x00,   27 },  //    6
  { 0x12, 0x01,   28 },  //    7
  { 0x22, 0x00,  161 },  //    8
  { 0x22, 0x01,  162 },  //    9
  { 0x23, 0x00,  174 },  //   10
  { 0x23, 0x01,  175 },  //   11
  { 0x17, 0x00,   29 },  //   12
  { 0x17, 0x01,   30 },  //   13
  { 0x24, 0x00,  176 },  //   14
  { 0x24, 0x01,  177 },  //   15
  { 0x18, 0x00,   31 },  //   16
  { 0x18, 0x01,   32 },  //   17
  { 0x1f, 0x00,  178 },  //   18
  { 0x1f, 0x01,  179 },  //   19
  { 0x16, 0x00,   33 },  //   20
  { 0x16, 0x01,   34 },  //   21
};

static const Vct_IDeadkeys vctDeadkey_0002083B_x005e(dtaDeadkey_0002083B_x005e,
                                                     dtaDeadkey_0002083B_x005e + 22);

//
// Keyboard 00030408 - Greek (220) Latin deadkeys
//

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x0384[2] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x0384(dtaDeadkey_00030408_x0384,
                                                     dtaDeadkey_00030408_x0384 + 2);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x00a8[2] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x00a8(dtaDeadkey_00030408_x00a8,
                                                     dtaDeadkey_00030408_x00a8 + 2);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00030408_x0385[2] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
};

static const Vct_IDeadkeys vctDeadkey_00030408_x0385(dtaDeadkey_00030408_x0385,
                                                     dtaDeadkey_00030408_x0385 + 2);

//
// Keyboard 00040408 - Greek (319) Latin deadkeys
//

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x00b4[14] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x12, 0x00,   77 },  //    4
  { 0x12, 0x01,   78 },  //    5
  { 0x17, 0x00,   79 },  //    6
  { 0x17, 0x01,   80 },  //    7
  { 0x18, 0x00,   85 },  //    8
  { 0x18, 0x01,   86 },  //    9
  { 0x16, 0x00,   91 },  //   10
  { 0x16, 0x01,   92 },  //   11
  { 0x15, 0x00,   93 },  //   12
  { 0x15, 0x01,   94 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00040408_x00b4(dtaDeadkey_00040408_x00b4,
                                                     dtaDeadkey_00040408_x00b4 + 14);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x00a8[13] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00040408_x00a8(dtaDeadkey_00040408_x00a8,
                                                     dtaDeadkey_00040408_x00a8 + 13);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00040408_x0060(dtaDeadkey_00040408_x0060,
                                                     dtaDeadkey_00040408_x0060 + 12);

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00040408_x005e(dtaDeadkey_00040408_x005e,
                                                     dtaDeadkey_00040408_x005e + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00040408_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00040408_x007e(dtaDeadkey_00040408_x007e,
                                                     dtaDeadkey_00040408_x007e + 8);

//
// Keyboard 00050408 - Greek Latin deadkeys
//

// Deadkey 0x005e
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x005e[12] = {
  { 0x39, 0x00,   24 },  //    0
  { 0x39, 0x01,   24 },  //    1
  { 0x1e, 0x00,   25 },  //    2
  { 0x1e, 0x01,   26 },  //    3
  { 0x12, 0x00,   27 },  //    4
  { 0x12, 0x01,   28 },  //    5
  { 0x17, 0x00,   29 },  //    6
  { 0x17, 0x01,   30 },  //    7
  { 0x18, 0x00,   31 },  //    8
  { 0x18, 0x01,   32 },  //    9
  { 0x16, 0x00,   33 },  //   10
  { 0x16, 0x01,   34 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00050408_x005e(dtaDeadkey_00050408_x005e,
                                                     dtaDeadkey_00050408_x005e + 12);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x0060[12] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x1e, 0x00,   55 },  //    2
  { 0x1e, 0x01,   56 },  //    3
  { 0x12, 0x00,   57 },  //    4
  { 0x12, 0x01,   58 },  //    5
  { 0x17, 0x00,   59 },  //    6
  { 0x17, 0x01,   60 },  //    7
  { 0x18, 0x00,   61 },  //    8
  { 0x18, 0x01,   62 },  //    9
  { 0x16, 0x00,   63 },  //   10
  { 0x16, 0x01,   64 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00050408_x0060(dtaDeadkey_00050408_x0060,
                                                     dtaDeadkey_00050408_x0060 + 12);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x007e[8] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x1e, 0x00,  128 },  //    2
  { 0x1e, 0x01,  129 },  //    3
  { 0x31, 0x00,  130 },  //    4
  { 0x31, 0x01,  131 },  //    5
  { 0x18, 0x00,  132 },  //    6
  { 0x18, 0x01,  133 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00050408_x007e(dtaDeadkey_00050408_x007e,
                                                     dtaDeadkey_00050408_x007e + 8);

// Deadkey 0x00b4
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x00b4[16] = {
  { 0x39, 0x00,   72 },  //    0
  { 0x39, 0x01,   72 },  //    1
  { 0x1e, 0x00,   73 },  //    2
  { 0x1e, 0x01,   74 },  //    3
  { 0x2e, 0x00,  111 },  //    4
  { 0x2e, 0x01,  112 },  //    5
  { 0x12, 0x00,   77 },  //    6
  { 0x12, 0x01,   78 },  //    7
  { 0x17, 0x00,   79 },  //    8
  { 0x17, 0x01,   80 },  //    9
  { 0x18, 0x00,   85 },  //   10
  { 0x18, 0x01,   86 },  //   11
  { 0x16, 0x00,   91 },  //   12
  { 0x16, 0x01,   92 },  //   13
  { 0x15, 0x00,   93 },  //   14
  { 0x15, 0x01,   94 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00050408_x00b4(dtaDeadkey_00050408_x00b4,
                                                     dtaDeadkey_00050408_x00b4 + 16);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00050408_x00a8[14] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x1e, 0x00,   98 },  //    2
  { 0x1e, 0x01,   99 },  //    3
  { 0x12, 0x00,  100 },  //    4
  { 0x12, 0x01,  101 },  //    5
  { 0x17, 0x00,  102 },  //    6
  { 0x17, 0x01,  103 },  //    7
  { 0x18, 0x00,  104 },  //    8
  { 0x18, 0x01,  105 },  //    9
  { 0x16, 0x00,  106 },  //   10
  { 0x16, 0x01,  107 },  //   11
  { 0x15, 0x00,  108 },  //   12
  { 0x15, 0x01,  240 },  //   13
};

static const Vct_IDeadkeys vctDeadkey_00050408_x00a8(dtaDeadkey_00050408_x00a8,
                                                     dtaDeadkey_00050408_x00a8 + 14);

//
// Keyboard 00060408 - Greek Polytonic deadkeys
//

// Deadkey 0x003b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003b[17] = {
  { 0x39, 0x00,  241 },  //    0
  { 0x39, 0x01,  241 },  //    1
  { 0x1e, 0x00,  242 },  //    2
  { 0x1e, 0x01,  243 },  //    3
  { 0x12, 0x00,  244 },  //    4
  { 0x12, 0x01,  245 },  //    5
  { 0x23, 0x00,  246 },  //    6
  { 0x23, 0x01,  247 },  //    7
  { 0x17, 0x00,  248 },  //    8
  { 0x17, 0x01,  249 },  //    9
  { 0x18, 0x00,  250 },  //   10
  { 0x18, 0x01,  251 },  //   11
  { 0x2f, 0x00,  252 },  //   12
  { 0x2f, 0x01,  253 },  //   13
  { 0x15, 0x00,  254 },  //   14
  { 0x15, 0x01,  255 },  //   15
  { 0x34, 0x00,  256 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003b(dtaDeadkey_00060408_x003b,
                                                     dtaDeadkey_00060408_x003b + 17);

// Deadkey 0x003a
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003a[7] = {
  { 0x39, 0x00,  257 },  //    0
  { 0x39, 0x01,  257 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
  { 0x34, 0x00,   97 },  //    6
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003a(dtaDeadkey_00060408_x003a,
                                                     dtaDeadkey_00060408_x003a + 7);

// Deadkey 0x1ffd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1ffd[3] = {
  { 0x1e, 0x00,  258 },  //    0
  { 0x23, 0x00,  259 },  //    1
  { 0x2f, 0x00,  260 },  //    2
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1ffd(dtaDeadkey_00060408_x1ffd,
                                                     dtaDeadkey_00060408_x1ffd + 3);

// Deadkey 0x0385
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0385[5] = {
  { 0x39, 0x00,  134 },  //    0
  { 0x39, 0x01,  134 },  //    1
  { 0x17, 0x00,  135 },  //    2
  { 0x15, 0x00,  136 },  //    3
  { 0x34, 0x00,  134 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0385(dtaDeadkey_00060408_x0385,
                                                     dtaDeadkey_00060408_x0385 + 5);

// Deadkey 0x0384
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0384[17] = {
  { 0x39, 0x00,  137 },  //    0
  { 0x39, 0x01,  137 },  //    1
  { 0x1e, 0x00,  138 },  //    2
  { 0x1e, 0x01,  139 },  //    3
  { 0x12, 0x00,  140 },  //    4
  { 0x12, 0x01,  141 },  //    5
  { 0x23, 0x00,  142 },  //    6
  { 0x23, 0x01,  143 },  //    7
  { 0x17, 0x00,  144 },  //    8
  { 0x17, 0x01,  145 },  //    9
  { 0x18, 0x00,  146 },  //   10
  { 0x18, 0x01,  147 },  //   11
  { 0x2f, 0x00,  148 },  //   12
  { 0x2f, 0x01,  149 },  //   13
  { 0x15, 0x00,  150 },  //   14
  { 0x15, 0x01,  151 },  //   15
  { 0x34, 0x00,  137 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0384(dtaDeadkey_00060408_x0384,
                                                     dtaDeadkey_00060408_x0384 + 17);

// Deadkey 0x00a8
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00a8[7] = {
  { 0x39, 0x00,   97 },  //    0
  { 0x39, 0x01,   97 },  //    1
  { 0x17, 0x00,  152 },  //    2
  { 0x17, 0x01,  153 },  //    3
  { 0x15, 0x00,  154 },  //    4
  { 0x15, 0x01,  155 },  //    5
  { 0x34, 0x00,   97 },  //    6
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00a8(dtaDeadkey_00060408_x00a8,
                                                     dtaDeadkey_00060408_x00a8 + 7);

// Deadkey 0x003d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003d[12] = {
  { 0x39, 0x00,  261 },  //    0
  { 0x39, 0x01,  261 },  //    1
  { 0x1e, 0x00,  262 },  //    2
  { 0x1e, 0x01,  263 },  //    3
  { 0x23, 0x00,  264 },  //    4
  { 0x23, 0x01,  265 },  //    5
  { 0x17, 0x00,  266 },  //    6
  { 0x17, 0x01,  267 },  //    7
  { 0x2f, 0x00,  268 },  //    8
  { 0x2f, 0x01,  269 },  //    9
  { 0x15, 0x00,  270 },  //   10
  { 0x34, 0x00,  271 },  //   11
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003d(dtaDeadkey_00060408_x003d,
                                                     dtaDeadkey_00060408_x003d + 12);

// Deadkey 0x002b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002b[13] = {
  { 0x39, 0x00,  272 },  //    0
  { 0x39, 0x01,  272 },  //    1
  { 0x1e, 0x00,  273 },  //    2
  { 0x1e, 0x01,  274 },  //    3
  { 0x23, 0x00,  275 },  //    4
  { 0x23, 0x01,  276 },  //    5
  { 0x17, 0x00,  277 },  //    6
  { 0x17, 0x01,  278 },  //    7
  { 0x2f, 0x00,  279 },  //    8
  { 0x2f, 0x01,  280 },  //    9
  { 0x15, 0x00,  281 },  //   10
  { 0x15, 0x01,  282 },  //   11
  { 0x34, 0x00,  283 },  //   12
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002b(dtaDeadkey_00060408_x002b,
                                                     dtaDeadkey_00060408_x002b + 13);

// Deadkey 0x00bd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00bd[8] = {
  { 0x39, 0x00,  284 },  //    0
  { 0x39, 0x01,  284 },  //    1
  { 0x1e, 0x00,  285 },  //    2
  { 0x1e, 0x01,  286 },  //    3
  { 0x23, 0x00,  287 },  //    4
  { 0x23, 0x01,  288 },  //    5
  { 0x2f, 0x00,  289 },  //    6
  { 0x2f, 0x01,  290 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00bd(dtaDeadkey_00060408_x00bd,
                                                     dtaDeadkey_00060408_x00bd + 8);

// Deadkey 0x1fdf
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fdf[6] = {
  { 0x1e, 0x00,  291 },  //    0
  { 0x1e, 0x01,  292 },  //    1
  { 0x23, 0x00,  293 },  //    2
  { 0x23, 0x01,  294 },  //    3
  { 0x2f, 0x00,  295 },  //    4
  { 0x2f, 0x01,  296 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fdf(dtaDeadkey_00060408_x1fdf,
                                                     dtaDeadkey_00060408_x1fdf + 6);

// Deadkey 0x002d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002d[9] = {
  { 0x39, 0x00,  297 },  //    0
  { 0x39, 0x01,  297 },  //    1
  { 0x1e, 0x00,  298 },  //    2
  { 0x1e, 0x01,  299 },  //    3
  { 0x17, 0x00,  300 },  //    4
  { 0x17, 0x01,  301 },  //    5
  { 0x15, 0x00,  302 },  //    6
  { 0x15, 0x01,  303 },  //    7
  { 0x34, 0x00,  239 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002d(dtaDeadkey_00060408_x002d,
                                                     dtaDeadkey_00060408_x002d + 9);

// Deadkey 0x005f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005f[9] = {
  { 0x39, 0x00,  304 },  //    0
  { 0x39, 0x01,  304 },  //    1
  { 0x1e, 0x00,  305 },  //    2
  { 0x1e, 0x01,  306 },  //    3
  { 0x17, 0x00,  307 },  //    4
  { 0x17, 0x01,  308 },  //    5
  { 0x15, 0x00,  309 },  //    6
  { 0x15, 0x01,  310 },  //    7
  { 0x34, 0x00,   35 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005f(dtaDeadkey_00060408_x005f,
                                                     dtaDeadkey_00060408_x005f + 9);

// Deadkey 0x002f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x002f[16] = {
  { 0x39, 0x00,  311 },  //    0
  { 0x39, 0x01,  311 },  //    1
  { 0x1e, 0x00,  312 },  //    2
  { 0x1e, 0x01,  313 },  //    3
  { 0x12, 0x00,  314 },  //    4
  { 0x12, 0x01,  315 },  //    5
  { 0x23, 0x00,  316 },  //    6
  { 0x23, 0x01,  317 },  //    7
  { 0x17, 0x00,  318 },  //    8
  { 0x17, 0x01,  319 },  //    9
  { 0x18, 0x00,  320 },  //   10
  { 0x18, 0x01,  321 },  //   11
  { 0x2f, 0x00,  322 },  //   12
  { 0x2f, 0x01,  323 },  //   13
  { 0x15, 0x00,  324 },  //   14
  { 0x34, 0x00,  325 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00060408_x002f(dtaDeadkey_00060408_x002f,
                                                     dtaDeadkey_00060408_x002f + 16);

// Deadkey 0x003f
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x003f[17] = {
  { 0x39, 0x00,  326 },  //    0
  { 0x39, 0x01,  326 },  //    1
  { 0x1e, 0x00,  327 },  //    2
  { 0x1e, 0x01,  328 },  //    3
  { 0x12, 0x00,  329 },  //    4
  { 0x12, 0x01,  330 },  //    5
  { 0x23, 0x00,  331 },  //    6
  { 0x23, 0x01,  332 },  //    7
  { 0x17, 0x00,  333 },  //    8
  { 0x17, 0x01,  334 },  //    9
  { 0x18, 0x00,  335 },  //   10
  { 0x18, 0x01,  336 },  //   11
  { 0x2f, 0x00,  337 },  //   12
  { 0x2f, 0x01,  338 },  //   13
  { 0x15, 0x00,  339 },  //   14
  { 0x15, 0x01,  340 },  //   15
  { 0x34, 0x00,  341 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x003f(dtaDeadkey_00060408_x003f,
                                                     dtaDeadkey_00060408_x003f + 17);

// Deadkey 0x1fbe
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fbe[6] = {
  { 0x1e, 0x00,  342 },  //    0
  { 0x1e, 0x01,  343 },  //    1
  { 0x23, 0x00,  344 },  //    2
  { 0x23, 0x01,  345 },  //    3
  { 0x2f, 0x00,  346 },  //    4
  { 0x2f, 0x01,  347 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fbe(dtaDeadkey_00060408_x1fbe,
                                                     dtaDeadkey_00060408_x1fbe + 6);

// Deadkey 0x1fde
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fde[6] = {
  { 0x1e, 0x00,  348 },  //    0
  { 0x1e, 0x01,  349 },  //    1
  { 0x23, 0x00,  350 },  //    2
  { 0x23, 0x01,  351 },  //    3
  { 0x2f, 0x00,  352 },  //    4
  { 0x2f, 0x01,  353 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fde(dtaDeadkey_00060408_x1fde,
                                                     dtaDeadkey_00060408_x1fde + 6);

// Deadkey 0x007e
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007e[5] = {
  { 0x39, 0x00,  127 },  //    0
  { 0x39, 0x01,  127 },  //    1
  { 0x17, 0x00,  354 },  //    2
  { 0x15, 0x00,  355 },  //    3
  { 0x34, 0x00,  356 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007e(dtaDeadkey_00060408_x007e,
                                                     dtaDeadkey_00060408_x007e + 5);

// Deadkey 0x0060
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0060[5] = {
  { 0x39, 0x00,   54 },  //    0
  { 0x39, 0x01,   54 },  //    1
  { 0x17, 0x00,  357 },  //    2
  { 0x15, 0x00,  358 },  //    3
  { 0x34, 0x00,  359 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0060(dtaDeadkey_00060408_x0060,
                                                     dtaDeadkey_00060408_x0060 + 5);

// Deadkey 0x1fc1
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fc1[5] = {
  { 0x39, 0x00,  360 },  //    0
  { 0x39, 0x01,  360 },  //    1
  { 0x17, 0x00,  361 },  //    2
  { 0x15, 0x00,  362 },  //    3
  { 0x34, 0x00,  360 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fc1(dtaDeadkey_00060408_x1fc1,
                                                     dtaDeadkey_00060408_x1fc1 + 5);

// Deadkey 0x005b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005b[8] = {
  { 0x39, 0x00,  200 },  //    0
  { 0x39, 0x01,  200 },  //    1
  { 0x1e, 0x00,  363 },  //    2
  { 0x23, 0x00,  364 },  //    3
  { 0x17, 0x00,  365 },  //    4
  { 0x2f, 0x00,  366 },  //    5
  { 0x15, 0x00,  367 },  //    6
  { 0x34, 0x00,  368 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005b(dtaDeadkey_00060408_x005b,
                                                     dtaDeadkey_00060408_x005b + 8);

// Deadkey 0x007b
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007b[9] = {
  { 0x39, 0x00,  369 },  //    0
  { 0x39, 0x01,  369 },  //    1
  { 0x1e, 0x00,  370 },  //    2
  { 0x1e, 0x01,  371 },  //    3
  { 0x23, 0x00,  372 },  //    4
  { 0x23, 0x01,  373 },  //    5
  { 0x2f, 0x00,  374 },  //    6
  { 0x2f, 0x01,  375 },  //    7
  { 0x34, 0x00,  376 },  //    8
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007b(dtaDeadkey_00060408_x007b,
                                                     dtaDeadkey_00060408_x007b + 9);

// Deadkey 0x00ab
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00ab[5] = {
  { 0x39, 0x00,  377 },  //    0
  { 0x39, 0x01,  377 },  //    1
  { 0x1e, 0x00,  378 },  //    2
  { 0x23, 0x00,  379 },  //    3
  { 0x2f, 0x00,  380 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00ab(dtaDeadkey_00060408_x00ab,
                                                     dtaDeadkey_00060408_x00ab + 5);

// Deadkey 0x005c
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005c[16] = {
  { 0x39, 0x00,  203 },  //    0
  { 0x39, 0x01,  203 },  //    1
  { 0x1e, 0x00,  381 },  //    2
  { 0x1e, 0x01,  382 },  //    3
  { 0x12, 0x00,  383 },  //    4
  { 0x12, 0x01,  384 },  //    5
  { 0x23, 0x00,  385 },  //    6
  { 0x23, 0x01,  386 },  //    7
  { 0x17, 0x00,  387 },  //    8
  { 0x17, 0x01,  388 },  //    9
  { 0x18, 0x00,  389 },  //   10
  { 0x18, 0x01,  390 },  //   11
  { 0x2f, 0x00,  391 },  //   12
  { 0x2f, 0x01,  392 },  //   13
  { 0x15, 0x00,  393 },  //   14
  { 0x34, 0x00,  394 },  //   15
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005c(dtaDeadkey_00060408_x005c,
                                                     dtaDeadkey_00060408_x005c + 16);

// Deadkey 0x007c
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007c[17] = {
  { 0x39, 0x00,  395 },  //    0
  { 0x39, 0x01,  395 },  //    1
  { 0x1e, 0x00,  396 },  //    2
  { 0x1e, 0x01,  397 },  //    3
  { 0x12, 0x00,  398 },  //    4
  { 0x12, 0x01,  399 },  //    5
  { 0x23, 0x00,  400 },  //    6
  { 0x23, 0x01,  401 },  //    7
  { 0x17, 0x00,  402 },  //    8
  { 0x17, 0x01,  403 },  //    9
  { 0x18, 0x00,  404 },  //   10
  { 0x18, 0x01,  405 },  //   11
  { 0x2f, 0x00,  406 },  //   12
  { 0x2f, 0x01,  407 },  //   13
  { 0x15, 0x00,  408 },  //   14
  { 0x15, 0x01,  409 },  //   15
  { 0x34, 0x00,  410 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007c(dtaDeadkey_00060408_x007c,
                                                     dtaDeadkey_00060408_x007c + 17);

// Deadkey 0x00ac
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00ac[8] = {
  { 0x39, 0x00,  411 },  //    0
  { 0x39, 0x01,  411 },  //    1
  { 0x1e, 0x00,  412 },  //    2
  { 0x1e, 0x01,  413 },  //    3
  { 0x23, 0x00,  414 },  //    4
  { 0x23, 0x01,  415 },  //    5
  { 0x2f, 0x00,  416 },  //    6
  { 0x2f, 0x01,  417 },  //    7
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00ac(dtaDeadkey_00060408_x00ac,
                                                     dtaDeadkey_00060408_x00ac + 8);

// Deadkey 0x1fdd
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fdd[6] = {
  { 0x1e, 0x00,  418 },  //    0
  { 0x1e, 0x01,  419 },  //    1
  { 0x23, 0x00,  420 },  //    2
  { 0x23, 0x01,  421 },  //    3
  { 0x2f, 0x00,  422 },  //    4
  { 0x2f, 0x01,  423 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fdd(dtaDeadkey_00060408_x1fdd,
                                                     dtaDeadkey_00060408_x1fdd + 6);

// Deadkey 0x005d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x005d[17] = {
  { 0x39, 0x00,  424 },  //    0
  { 0x39, 0x01,  424 },  //    1
  { 0x1e, 0x00,  425 },  //    2
  { 0x1e, 0x01,  426 },  //    3
  { 0x12, 0x00,  427 },  //    4
  { 0x12, 0x01,  428 },  //    5
  { 0x23, 0x00,  429 },  //    6
  { 0x23, 0x01,  430 },  //    7
  { 0x17, 0x00,  431 },  //    8
  { 0x17, 0x01,  432 },  //    9
  { 0x18, 0x00,  433 },  //   10
  { 0x18, 0x01,  434 },  //   11
  { 0x2f, 0x00,  435 },  //   12
  { 0x2f, 0x01,  436 },  //   13
  { 0x15, 0x00,  437 },  //   14
  { 0x15, 0x01,  438 },  //   15
  { 0x34, 0x00,  439 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x005d(dtaDeadkey_00060408_x005d,
                                                     dtaDeadkey_00060408_x005d + 17);

// Deadkey 0x007d
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x007d[3] = {
  { 0x39, 0x00,  440 },  //    0
  { 0x39, 0x01,  440 },  //    1
  { 0x34, 0x00,  441 },  //    2
};

static const Vct_IDeadkeys vctDeadkey_00060408_x007d(dtaDeadkey_00060408_x007d,
                                                     dtaDeadkey_00060408_x007d + 3);

// Deadkey 0x00bb
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x00bb[5] = {
  { 0x39, 0x00,  442 },  //    0
  { 0x39, 0x01,  442 },  //    1
  { 0x1e, 0x00,  443 },  //    2
  { 0x23, 0x00,  444 },  //    3
  { 0x2f, 0x00,  445 },  //    4
};

static const Vct_IDeadkeys vctDeadkey_00060408_x00bb(dtaDeadkey_00060408_x00bb,
                                                     dtaDeadkey_00060408_x00bb + 5);

// Deadkey 0x0027
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0027[17] = {
  { 0x39, 0x00,  168 },  //    0
  { 0x39, 0x01,  168 },  //    1
  { 0x1e, 0x00,  446 },  //    2
  { 0x1e, 0x01,  447 },  //    3
  { 0x12, 0x00,  448 },  //    4
  { 0x12, 0x01,  449 },  //    5
  { 0x23, 0x00,  450 },  //    6
  { 0x23, 0x01,  451 },  //    7
  { 0x17, 0x00,  452 },  //    8
  { 0x17, 0x01,  453 },  //    9
  { 0x18, 0x00,  454 },  //   10
  { 0x18, 0x01,  455 },  //   11
  { 0x13, 0x00,  456 },  //   12
  { 0x2f, 0x00,  457 },  //   13
  { 0x2f, 0x01,  458 },  //   14
  { 0x15, 0x00,  459 },  //   15
  { 0x34, 0x00,  460 },  //   16
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0027(dtaDeadkey_00060408_x0027,
                                                     dtaDeadkey_00060408_x0027 + 17);

// Deadkey 0x0022
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x0022[19] = {
  { 0x39, 0x00,  169 },  //    0
  { 0x39, 0x01,  169 },  //    1
  { 0x1e, 0x00,  461 },  //    2
  { 0x1e, 0x01,  462 },  //    3
  { 0x12, 0x00,  463 },  //    4
  { 0x12, 0x01,  464 },  //    5
  { 0x23, 0x00,  465 },  //    6
  { 0x23, 0x01,  466 },  //    7
  { 0x17, 0x00,  467 },  //    8
  { 0x17, 0x01,  468 },  //    9
  { 0x18, 0x00,  469 },  //   10
  { 0x18, 0x01,  470 },  //   11
  { 0x13, 0x00,  471 },  //   12
  { 0x13, 0x01,  472 },  //   13
  { 0x2f, 0x00,  473 },  //   14
  { 0x2f, 0x01,  474 },  //   15
  { 0x15, 0x00,  475 },  //   16
  { 0x15, 0x01,  476 },  //   17
  { 0x34, 0x00,  477 },  //   18
};

static const Vct_IDeadkeys vctDeadkey_00060408_x0022(dtaDeadkey_00060408_x0022,
                                                     dtaDeadkey_00060408_x0022 + 19);

// Deadkey 0x1fbf
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1fbf[6] = {
  { 0x1e, 0x00,  478 },  //    0
  { 0x1e, 0x01,  479 },  //    1
  { 0x23, 0x00,  480 },  //    2
  { 0x23, 0x01,  481 },  //    3
  { 0x2f, 0x00,  482 },  //    4
  { 0x2f, 0x01,  483 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1fbf(dtaDeadkey_00060408_x1fbf,
                                                     dtaDeadkey_00060408_x1fbf + 6);

// Deadkey 0x1ffe
static const st_IDKSCSS2Offset dtaDeadkey_00060408_x1ffe[6] = {
  { 0x1e, 0x00,  484 },  //    0
  { 0x1e, 0x01,  485 },  //    1
  { 0x23, 0x00,  486 },  //    2
  { 0x23, 0x01,  487 },  //    3
  { 0x2f, 0x00,  488 },  //    4
  { 0x2f, 0x01,  489 },  //    5
};

static const Vct_IDeadkeys vctDeadkey_00060408_x1ffe(dtaDeadkey_00060408_x1ffe,
                                                     dtaDeadkey_00060408_x1ffe + 6);

static const wchar_t wcDK[490] = {
  { 0x02dd },  //    0; Use Count =  30
  { 0x0151 },  //    1; Use Count =  15
  { 0x0150 },  //    2; Use Count =  15
  { 0x0171 },  //    3; Use Count =  15
  { 0x0170 },  //    4; Use Count =  15
  { 0x02c7 },  //    5; Use Count =  36
  { 0x010d },  //    6; Use Count =  20
  { 0x010c },  //    7; Use Count =  20
  { 0x010f },  //    8; Use Count =  18
  { 0x010e },  //    9; Use Count =  18
  { 0x011b },  //   10; Use Count =  19
  { 0x011a },  //   11; Use Count =  19
  { 0x013e },  //   12; Use Count =  16
  { 0x013d },  //   13; Use Count =  16
  { 0x0148 },  //   14; Use Count =  18
  { 0x0147 },  //   15; Use Count =  18
  { 0x0159 },  //   16; Use Count =  19
  { 0x0158 },  //   17; Use Count =  19
  { 0x0161 },  //   18; Use Count =  20
  { 0x0160 },  //   19; Use Count =  20
  { 0x0165 },  //   20; Use Count =  18
  { 0x0164 },  //   21; Use Count =  18
  { 0x017e },  //   22; Use Count =  20
  { 0x017d },  //   23; Use Count =  20
  { 0x005e },  //   24; Use Count = 110
  { 0x00e2 },  //   25; Use Count =  52
  { 0x00c2 },  //   26; Use Count =  52
  { 0x00ea },  //   27; Use Count =  43
  { 0x00ca },  //   28; Use Count =  43
  { 0x00ee },  //   29; Use Count =  54
  { 0x00ce },  //   30; Use Count =  54
  { 0x00f4 },  //   31; Use Count =  52
  { 0x00d4 },  //   32; Use Count =  52
  { 0x00fb },  //   33; Use Count =  43
  { 0x00db },  //   34; Use Count =  43
  { 0x02d8 },  //   35; Use Count =  27
  { 0x0103 },  //   36; Use Count =  13
  { 0x0102 },  //   37; Use Count =  13
  { 0x011f },  //   38; Use Count =   2
  { 0x011e },  //   39; Use Count =   2
  { 0x00b0 },  //   40; Use Count =  34
  { 0x00e5 },  //   41; Use Count =   7
  { 0x00c5 },  //   42; Use Count =   7
  { 0x016f },  //   43; Use Count =  16
  { 0x016e },  //   44; Use Count =  16
  { 0x02db },  //   45; Use Count =  26
  { 0x0105 },  //   46; Use Count =  14
  { 0x0104 },  //   47; Use Count =  14
  { 0x0119 },  //   48; Use Count =  14
  { 0x0118 },  //   49; Use Count =  14
  { 0x012f },  //   50; Use Count =   2
  { 0x012e },  //   51; Use Count =   2
  { 0x0173 },  //   52; Use Count =   2
  { 0x0172 },  //   53; Use Count =   2
  { 0x0060 },  //   54; Use Count =  92
  { 0x00e0 },  //   55; Use Count =  47
  { 0x00c0 },  //   56; Use Count =  47
  { 0x00e8 },  //   57; Use Count =  47
  { 0x00c8 },  //   58; Use Count =  47
  { 0x00ec },  //   59; Use Count =  48
  { 0x00cc },  //   60; Use Count =  48
  { 0x00f2 },  //   61; Use Count =  47
  { 0x00d2 },  //   62; Use Count =  47
  { 0x00f9 },  //   63; Use Count =  47
  { 0x00d9 },  //   64; Use Count =  47
  { 0x00b7 },  //   65; Use Count =  14
  { 0x0117 },  //   66; Use Count =   5
  { 0x0116 },  //   67; Use Count =   5
  { 0x0131 },  //   68; Use Count =   1
  { 0x0130 },  //   69; Use Count =   2
  { 0x017c },  //   70; Use Count =  17
  { 0x017b },  //   71; Use Count =  17
  { 0x00b4 },  //   72; Use Count = 104
  { 0x00e1 },  //   73; Use Count =  54
  { 0x00c1 },  //   74; Use Count =  54
  { 0x0107 },  //   75; Use Count =  26
  { 0x0106 },  //   76; Use Count =  26
  { 0x00e9 },  //   77; Use Count =  57
  { 0x00c9 },  //   78; Use Count =  57
  { 0x00ed },  //   79; Use Count =  56
  { 0x00cd },  //   80; Use Count =  56
  { 0x013a },  //   81; Use Count =  21
  { 0x0139 },  //   82; Use Count =  21
  { 0x0144 },  //   83; Use Count =  28
  { 0x0143 },  //   84; Use Count =  28
  { 0x00f3 },  //   85; Use Count =  59
  { 0x00d3 },  //   86; Use Count =  59
  { 0x0155 },  //   87; Use Count =  22
  { 0x0154 },  //   88; Use Count =  22
  { 0x015b },  //   89; Use Count =  26
  { 0x015a },  //   90; Use Count =  26
  { 0x00fa },  //   91; Use Count =  54
  { 0x00da },  //   92; Use Count =  54
  { 0x00fd },  //   93; Use Count =  48
  { 0x00dd },  //   94; Use Count =  47
  { 0x017a },  //   95; Use Count =  26
  { 0x0179 },  //   96; Use Count =  26
  { 0x00a8 },  //   97; Use Count = 106
  { 0x00e4 },  //   98; Use Count =  51
  { 0x00c4 },  //   99; Use Count =  51
  { 0x00eb },  //  100; Use Count =  48
  { 0x00cb },  //  101; Use Count =  48
  { 0x00ef },  //  102; Use Count =  42
  { 0x00cf },  //  103; Use Count =  42
  { 0x00f6 },  //  104; Use Count =  51
  { 0x00d6 },  //  105; Use Count =  51
  { 0x00fc },  //  106; Use Count =  51
  { 0x00dc },  //  107; Use Count =  51
  { 0x00ff },  //  108; Use Count =  37
  { 0x0178 },  //  109; Use Count =  10
  { 0x00b8 },  //  110; Use Count =  30
  { 0x00e7 },  //  111; Use Count =  22
  { 0x00c7 },  //  112; Use Count =  22
  { 0x0123 },  //  113; Use Count =   2
  { 0x0122 },  //  114; Use Count =   2
  { 0x0137 },  //  115; Use Count =   2
  { 0x0136 },  //  116; Use Count =   2
  { 0x013c },  //  117; Use Count =   2
  { 0x013b },  //  118; Use Count =   2
  { 0x0146 },  //  119; Use Count =   2
  { 0x0145 },  //  120; Use Count =   2
  { 0x0157 },  //  121; Use Count =   2
  { 0x0156 },  //  122; Use Count =   2
  { 0x015f },  //  123; Use Count =  14
  { 0x015e },  //  124; Use Count =  14
  { 0x0163 },  //  125; Use Count =  10
  { 0x0162 },  //  126; Use Count =  10
  { 0x007e },  //  127; Use Count =  82
  { 0x00e3 },  //  128; Use Count =  32
  { 0x00c3 },  //  129; Use Count =  32
  { 0x00f1 },  //  130; Use Count =  32
  { 0x00d1 },  //  131; Use Count =  32
  { 0x00f5 },  //  132; Use Count =  35
  { 0x00d5 },  //  133; Use Count =  35
  { 0x0385 },  //  134; Use Count =  11
  { 0x0390 },  //  135; Use Count =   4
  { 0x03b0 },  //  136; Use Count =   4
  { 0x0384 },  //  137; Use Count =  11
  { 0x03ac },  //  138; Use Count =   4
  { 0x0386 },  //  139; Use Count =   4
  { 0x03ad },  //  140; Use Count =   4
  { 0x0388 },  //  141; Use Count =   4
  { 0x03ae },  //  142; Use Count =   4
  { 0x0389 },  //  143; Use Count =   4
  { 0x03af },  //  144; Use Count =   4
  { 0x038a },  //  145; Use Count =   4
  { 0x03cc },  //  146; Use Count =   4
  { 0x038c },  //  147; Use Count =   4
  { 0x03ce },  //  148; Use Count =   4
  { 0x038f },  //  149; Use Count =   4
  { 0x03cd },  //  150; Use Count =   4
  { 0x038e },  //  151; Use Count =   4
  { 0x03ca },  //  152; Use Count =   5
  { 0x03aa },  //  153; Use Count =   5
  { 0x03cb },  //  154; Use Count =   5
  { 0x03ab },  //  155; Use Count =   5
  { 0x02d9 },  //  156; Use Count =  12
  { 0x0142 },  //  157; Use Count =   2
  { 0x0141 },  //  158; Use Count =   2
  { 0x0219 },  //  159; Use Count =   1
  { 0x0218 },  //  160; Use Count =   1
  { 0x011d },  //  161; Use Count =   7
  { 0x011c },  //  162; Use Count =   7
  { 0x0121 },  //  163; Use Count =   3
  { 0x0307 },  //  164; Use Count =   2
  { 0x017f },  //  165; Use Count =   1
  { 0x0111 },  //  166; Use Count =   1
  { 0x0110 },  //  167; Use Count =   1
  { 0x0027 },  //  168; Use Count =  18
  { 0x0022 },  //  169; Use Count =  10
  { 0x1e85 },  //  170; Use Count =   4
  { 0x1e84 },  //  171; Use Count =   4
  { 0x0109 },  //  172; Use Count =   6
  { 0x0108 },  //  173; Use Count =   6
  { 0x0125 },  //  174; Use Count =   6
  { 0x0124 },  //  175; Use Count =   6
  { 0x0135 },  //  176; Use Count =   6
  { 0x0134 },  //  177; Use Count =   6
  { 0x015d },  //  178; Use Count =   6
  { 0x015c },  //  179; Use Count =   6
  { 0x0175 },  //  180; Use Count =   5
  { 0x0174 },  //  181; Use Count =   5
  { 0x0177 },  //  182; Use Count =   5
  { 0x0176 },  //  183; Use Count =   5
  { 0x0129 },  //  184; Use Count =   6
  { 0x0128 },  //  185; Use Count =   6
  { 0x0169 },  //  186; Use Count =   6
  { 0x0168 },  //  187; Use Count =   6
  { 0x1e81 },  //  188; Use Count =   4
  { 0x1e80 },  //  189; Use Count =   4
  { 0x1ef3 },  //  190; Use Count =   4
  { 0x1ef2 },  //  191; Use Count =   4
  { 0x1e83 },  //  192; Use Count =   4
  { 0x1e82 },  //  193; Use Count =   4
  { 0x01ff },  //  194; Use Count =   2
  { 0x01fe },  //  195; Use Count =   2
  { 0x01fb },  //  196; Use Count =   5
  { 0x01fa },  //  197; Use Count =   5
  { 0x01fd },  //  198; Use Count =   2
  { 0x01fc },  //  199; Use Count =   2
  { 0x005b },  //  200; Use Count =   4
  { 0x01f9 },  //  201; Use Count =   2
  { 0x01f8 },  //  202; Use Count =   2
  { 0x005c },  //  203; Use Count =   4
  { 0x1eb9 },  //  204; Use Count =   1
  { 0x1eb8 },  //  205; Use Count =   1
  { 0x1ecd },  //  206; Use Count =   1
  { 0x1ecc },  //  207; Use Count =   1
  { 0x1e63 },  //  208; Use Count =   1
  { 0x1e62 },  //  209; Use Count =   1
  { 0x0101 },  //  210; Use Count =   3
  { 0x0100 },  //  211; Use Count =   3
  { 0x0113 },  //  212; Use Count =   3
  { 0x0112 },  //  213; Use Count =   3
  { 0x012b },  //  214; Use Count =   3
  { 0x012a },  //  215; Use Count =   3
  { 0x014d },  //  216; Use Count =   3
  { 0x014c },  //  217; Use Count =   3
  { 0x016b },  //  218; Use Count =   3
  { 0x016a },  //  219; Use Count =   3
  { 0x1e3f },  //  220; Use Count =   1
  { 0x1e3e },  //  221; Use Count =   1
  { 0x201a },  //  222; Use Count =   2
  { 0x0453 },  //  223; Use Count =   2
  { 0x0403 },  //  224; Use Count =   2
  { 0x045c },  //  225; Use Count =   2
  { 0x040c },  //  226; Use Count =   2
  { 0x01e7 },  //  227; Use Count =   2
  { 0x01e6 },  //  228; Use Count =   2
  { 0x021f },  //  229; Use Count =   2
  { 0x021e },  //  230; Use Count =   2
  { 0x01e9 },  //  231; Use Count =   2
  { 0x01e8 },  //  232; Use Count =   2
  { 0x010b },  //  233; Use Count =   1
  { 0x010a },  //  234; Use Count =   1
  { 0x0120 },  //  235; Use Count =   1
  { 0x02da },  //  236; Use Count =   2
  { 0x016d },  //  237; Use Count =   1
  { 0x016c },  //  238; Use Count =   1
  { 0x00af },  //  239; Use Count =   3
  { 0x009f },  //  240; Use Count =   1
  { 0x003b },  //  241; Use Count =   2
  { 0x1f71 },  //  242; Use Count =   1
  { 0x1fbb },  //  243; Use Count =   1
  { 0x1f73 },  //  244; Use Count =   1
  { 0x1fc9 },  //  245; Use Count =   1
  { 0x1f75 },  //  246; Use Count =   1
  { 0x1fcb },  //  247; Use Count =   1
  { 0x1f77 },  //  248; Use Count =   1
  { 0x1fdb },  //  249; Use Count =   1
  { 0x1f79 },  //  250; Use Count =   1
  { 0x1ff9 },  //  251; Use Count =   1
  { 0x1f7d },  //  252; Use Count =   1
  { 0x1ffb },  //  253; Use Count =   1
  { 0x1f7b },  //  254; Use Count =   1
  { 0x1feb },  //  255; Use Count =   1
  { 0x1ffd },  //  256; Use Count =   1
  { 0x003a },  //  257; Use Count =   2
  { 0x1fb4 },  //  258; Use Count =   1
  { 0x1fc4 },  //  259; Use Count =   1
  { 0x1ff4 },  //  260; Use Count =   1
  { 0x003d },  //  261; Use Count =   2
  { 0x1f06 },  //  262; Use Count =   1
  { 0x1f0e },  //  263; Use Count =   1
  { 0x1f26 },  //  264; Use Count =   1
  { 0x1f2e },  //  265; Use Count =   1
  { 0x1f36 },  //  266; Use Count =   1
  { 0x1f3e },  //  267; Use Count =   1
  { 0x1f66 },  //  268; Use Count =   1
  { 0x1f6e },  //  269; Use Count =   1
  { 0x1f56 },  //  270; Use Count =   1
  { 0x1fcf },  //  271; Use Count =   1
  { 0x002b },  //  272; Use Count =   2
  { 0x1f07 },  //  273; Use Count =   1
  { 0x1f0f },  //  274; Use Count =   1
  { 0x1f27 },  //  275; Use Count =   1
  { 0x1f2f },  //  276; Use Count =   1
  { 0x1f37 },  //  277; Use Count =   1
  { 0x1f3f },  //  278; Use Count =   1
  { 0x1f67 },  //  279; Use Count =   1
  { 0x1f6f },  //  280; Use Count =   1
  { 0x1f57 },  //  281; Use Count =   1
  { 0x1f5f },  //  282; Use Count =   1
  { 0x1fdf },  //  283; Use Count =   1
  { 0x00bd },  //  284; Use Count =   2
  { 0x1f86 },  //  285; Use Count =   1
  { 0x1f8e },  //  286; Use Count =   1
  { 0x1f96 },  //  287; Use Count =   1
  { 0x1f9e },  //  288; Use Count =   1
  { 0x1fa6 },  //  289; Use Count =   1
  { 0x1fae },  //  290; Use Count =   1
  { 0x1f87 },  //  291; Use Count =   1
  { 0x1f8f },  //  292; Use Count =   1
  { 0x1f97 },  //  293; Use Count =   1
  { 0x1f9f },  //  294; Use Count =   1
  { 0x1fa7 },  //  295; Use Count =   1
  { 0x1faf },  //  296; Use Count =   1
  { 0x002d },  //  297; Use Count =   2
  { 0x1fb1 },  //  298; Use Count =   1
  { 0x1fb9 },  //  299; Use Count =   1
  { 0x1fd1 },  //  300; Use Count =   1
  { 0x1fd9 },  //  301; Use Count =   1
  { 0x1fe1 },  //  302; Use Count =   1
  { 0x1fe9 },  //  303; Use Count =   1
  { 0x005f },  //  304; Use Count =   2
  { 0x1fb0 },  //  305; Use Count =   1
  { 0x1fb8 },  //  306; Use Count =   1
  { 0x1fd0 },  //  307; Use Count =   1
  { 0x1fd8 },  //  308; Use Count =   1
  { 0x1fe0 },  //  309; Use Count =   1
  { 0x1fe8 },  //  310; Use Count =   1
  { 0x002f },  //  311; Use Count =   2
  { 0x1f04 },  //  312; Use Count =   1
  { 0x1f0c },  //  313; Use Count =   1
  { 0x1f14 },  //  314; Use Count =   1
  { 0x1f1c },  //  315; Use Count =   1
  { 0x1f24 },  //  316; Use Count =   1
  { 0x1f2c },  //  317; Use Count =   1
  { 0x1f34 },  //  318; Use Count =   1
  { 0x1f3c },  //  319; Use Count =   1
  { 0x1f44 },  //  320; Use Count =   1
  { 0x1f4c },  //  321; Use Count =   1
  { 0x1f64 },  //  322; Use Count =   1
  { 0x1f6c },  //  323; Use Count =   1
  { 0x1f54 },  //  324; Use Count =   1
  { 0x1fce },  //  325; Use Count =   1
  { 0x003f },  //  326; Use Count =   2
  { 0x1f05 },  //  327; Use Count =   1
  { 0x1f0d },  //  328; Use Count =   1
  { 0x1f15 },  //  329; Use Count =   1
  { 0x1f1d },  //  330; Use Count =   1
  { 0x1f25 },  //  331; Use Count =   1
  { 0x1f2d },  //  332; Use Count =   1
  { 0x1f35 },  //  333; Use Count =   1
  { 0x1f3d },  //  334; Use Count =   1
  { 0x1f45 },  //  335; Use Count =   1
  { 0x1f4d },  //  336; Use Count =   1
  { 0x1f65 },  //  337; Use Count =   1
  { 0x1f6d },  //  338; Use Count =   1
  { 0x1f55 },  //  339; Use Count =   1
  { 0x1f5d },  //  340; Use Count =   1
  { 0x1fde },  //  341; Use Count =   1
  { 0x1f84 },  //  342; Use Count =   1
  { 0x1f8c },  //  343; Use Count =   1
  { 0x1f94 },  //  344; Use Count =   1
  { 0x1f9c },  //  345; Use Count =   1
  { 0x1fa4 },  //  346; Use Count =   1
  { 0x1fac },  //  347; Use Count =   1
  { 0x1f85 },  //  348; Use Count =   1
  { 0x1f8d },  //  349; Use Count =   1
  { 0x1f95 },  //  350; Use Count =   1
  { 0x1f9d },  //  351; Use Count =   1
  { 0x1fa5 },  //  352; Use Count =   1
  { 0x1fad },  //  353; Use Count =   1
  { 0x1fd3 },  //  354; Use Count =   1
  { 0x1fe3 },  //  355; Use Count =   1
  { 0x1fee },  //  356; Use Count =   1
  { 0x1fd2 },  //  357; Use Count =   1
  { 0x1fe2 },  //  358; Use Count =   1
  { 0x1fed },  //  359; Use Count =   1
  { 0x1fc1 },  //  360; Use Count =   3
  { 0x1fd7 },  //  361; Use Count =   1
  { 0x1fe7 },  //  362; Use Count =   1
  { 0x1fb6 },  //  363; Use Count =   1
  { 0x1fc6 },  //  364; Use Count =   1
  { 0x1fd6 },  //  365; Use Count =   1
  { 0x1ff6 },  //  366; Use Count =   1
  { 0x1fe6 },  //  367; Use Count =   1
  { 0x1fc0 },  //  368; Use Count =   1
  { 0x007b },  //  369; Use Count =   2
  { 0x1fb3 },  //  370; Use Count =   1
  { 0x1fbc },  //  371; Use Count =   1
  { 0x1fc3 },  //  372; Use Count =   1
  { 0x1fcc },  //  373; Use Count =   1
  { 0x1ff3 },  //  374; Use Count =   1
  { 0x1ffc },  //  375; Use Count =   1
  { 0x1fbe },  //  376; Use Count =   1
  { 0x00ab },  //  377; Use Count =   2
  { 0x1fb7 },  //  378; Use Count =   1
  { 0x1fc7 },  //  379; Use Count =   1
  { 0x1ff7 },  //  380; Use Count =   1
  { 0x1f02 },  //  381; Use Count =   1
  { 0x1f0a },  //  382; Use Count =   1
  { 0x1f12 },  //  383; Use Count =   1
  { 0x1f1a },  //  384; Use Count =   1
  { 0x1f22 },  //  385; Use Count =   1
  { 0x1f2a },  //  386; Use Count =   1
  { 0x1f32 },  //  387; Use Count =   1
  { 0x1f3a },  //  388; Use Count =   1
  { 0x1f42 },  //  389; Use Count =   1
  { 0x1f4a },  //  390; Use Count =   1
  { 0x1f62 },  //  391; Use Count =   1
  { 0x1f6a },  //  392; Use Count =   1
  { 0x1f52 },  //  393; Use Count =   1
  { 0x1fcd },  //  394; Use Count =   1
  { 0x007c },  //  395; Use Count =   2
  { 0x1f03 },  //  396; Use Count =   1
  { 0x1f0b },  //  397; Use Count =   1
  { 0x1f13 },  //  398; Use Count =   1
  { 0x1f1b },  //  399; Use Count =   1
  { 0x1f23 },  //  400; Use Count =   1
  { 0x1f2b },  //  401; Use Count =   1
  { 0x1f33 },  //  402; Use Count =   1
  { 0x1f3b },  //  403; Use Count =   1
  { 0x1f43 },  //  404; Use Count =   1
  { 0x1f4b },  //  405; Use Count =   1
  { 0x1f63 },  //  406; Use Count =   1
  { 0x1f6b },  //  407; Use Count =   1
  { 0x1f53 },  //  408; Use Count =   1
  { 0x1f5b },  //  409; Use Count =   1
  { 0x1fdd },  //  410; Use Count =   1
  { 0x00ac },  //  411; Use Count =   2
  { 0x1f82 },  //  412; Use Count =   1
  { 0x1f8a },  //  413; Use Count =   1
  { 0x1f92 },  //  414; Use Count =   1
  { 0x1f9a },  //  415; Use Count =   1
  { 0x1fa2 },  //  416; Use Count =   1
  { 0x1faa },  //  417; Use Count =   1
  { 0x1f83 },  //  418; Use Count =   1
  { 0x1f8b },  //  419; Use Count =   1
  { 0x1f93 },  //  420; Use Count =   1
  { 0x1f9b },  //  421; Use Count =   1
  { 0x1fa3 },  //  422; Use Count =   1
  { 0x1fab },  //  423; Use Count =   1
  { 0x005d },  //  424; Use Count =   2
  { 0x1f70 },  //  425; Use Count =   1
  { 0x1fba },  //  426; Use Count =   1
  { 0x1f72 },  //  427; Use Count =   1
  { 0x1fc8 },  //  428; Use Count =   1
  { 0x1f74 },  //  429; Use Count =   1
  { 0x1fca },  //  430; Use Count =   1
  { 0x1f76 },  //  431; Use Count =   1
  { 0x1fda },  //  432; Use Count =   1
  { 0x1f78 },  //  433; Use Count =   1
  { 0x1ff8 },  //  434; Use Count =   1
  { 0x1f7c },  //  435; Use Count =   1
  { 0x1ffa },  //  436; Use Count =   1
  { 0x1f7a },  //  437; Use Count =   1
  { 0x1fea },  //  438; Use Count =   1
  { 0x1fef },  //  439; Use Count =   1
  { 0x007d },  //  440; Use Count =   2
  { 0x0387 },  //  441; Use Count =   1
  { 0x00bb },  //  442; Use Count =   2
  { 0x1fb2 },  //  443; Use Count =   1
  { 0x1fc2 },  //  444; Use Count =   1
  { 0x1ff2 },  //  445; Use Count =   1
  { 0x1f00 },  //  446; Use Count =   1
  { 0x1f08 },  //  447; Use Count =   1
  { 0x1f10 },  //  448; Use Count =   1
  { 0x1f18 },  //  449; Use Count =   1
  { 0x1f20 },  //  450; Use Count =   1
  { 0x1f28 },  //  451; Use Count =   1
  { 0x1f30 },  //  452; Use Count =   1
  { 0x1f38 },  //  453; Use Count =   1
  { 0x1f40 },  //  454; Use Count =   1
  { 0x1f48 },  //  455; Use Count =   1
  { 0x1fe4 },  //  456; Use Count =   1
  { 0x1f60 },  //  457; Use Count =   1
  { 0x1f68 },  //  458; Use Count =   1
  { 0x1f50 },  //  459; Use Count =   1
  { 0x1fbf },  //  460; Use Count =   1
  { 0x1f01 },  //  461; Use Count =   1
  { 0x1f09 },  //  462; Use Count =   1
  { 0x1f11 },  //  463; Use Count =   1
  { 0x1f19 },  //  464; Use Count =   1
  { 0x1f21 },  //  465; Use Count =   1
  { 0x1f29 },  //  466; Use Count =   1
  { 0x1f31 },  //  467; Use Count =   1
  { 0x1f39 },  //  468; Use Count =   1
  { 0x1f41 },  //  469; Use Count =   1
  { 0x1f49 },  //  470; Use Count =   1
  { 0x1fe5 },  //  471; Use Count =   1
  { 0x1fec },  //  472; Use Count =   1
  { 0x1f61 },  //  473; Use Count =   1
  { 0x1f69 },  //  474; Use Count =   1
  { 0x1f51 },  //  475; Use Count =   1
  { 0x1f59 },  //  476; Use Count =   1
  { 0x1ffe },  //  477; Use Count =   1
  { 0x1f80 },  //  478; Use Count =   1
  { 0x1f88 },  //  479; Use Count =   1
  { 0x1f90 },  //  480; Use Count =   1
  { 0x1f98 },  //  481; Use Count =   1
  { 0x1fa0 },  //  482; Use Count =   1
  { 0x1fa8 },  //  483; Use Count =   1
  { 0x1f81 },  //  484; Use Count =   1
  { 0x1f89 },  //  485; Use Count =   1
  { 0x1f91 },  //  486; Use Count =   1
  { 0x1f99 },  //  487; Use Count =   1
  { 0x1fa1 },  //  488; Use Count =   1
  { 0x1fa9 }   //  489; Use Count =   1
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 33

// Arrays to match 'Scancode + Shiftstate' to Multi-character value
//  (2, 3 or 4 characters)
                                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_SCSS2MC2Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_SCSS2Offset dtaSCSS2MC2_00000401[] = {
 { 0x3000,   0 },  //    0
 { 0x3010,   0 },  //    1
 { 0x3001,   1 },  //    2
 { 0x3011,   1 },  //    3
 { 0x2201,   2 },  //    4
 { 0x2211,   2 },  //    5
 { 0x1401,   3 },  //    6
 { 0x1411,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000401(dtaSCSS2MC2_00000401,
                                               dtaSCSS2MC2_00000401 + 8);

static const st_SCSS2Offset dtaSCSS2MC2_00000439[] = {
 { 0x0401,   4 },  //    0
 { 0x0411,   4 },  //    1
 { 0x0501,   5 },  //    2
 { 0x0511,   5 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000439(dtaSCSS2MC2_00000439,
                                               dtaSCSS2MC2_00000439 + 4);

static const st_SCSS2Offset dtaSCSS2MC2_00000445[] = {
 { 0x0401,   6 },  //    0
 { 0x0411,   6 },  //    1
 { 0x0501,   7 },  //    2
 { 0x0511,   7 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000445(dtaSCSS2MC2_00000445,
                                               dtaSCSS2MC2_00000445 + 4);

static const st_SCSS2Offset dtaSCSS2MC2_00000446[] = {
 { 0x0201,   8 },  //    0
 { 0x0211,   8 },  //    1
 { 0x0301,   9 },  //    2
 { 0x0311,   9 },  //    3
 { 0x0401,  10 },  //    4
 { 0x0411,  10 },  //    5
 { 0x2901,  11 },  //    6
 { 0x2911,  11 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000446(dtaSCSS2MC2_00000446,
                                               dtaSCSS2MC2_00000446 + 8);

static const st_SCSS2Offset dtaSCSS2MC2_00000447[] = {
 { 0x0401,  12 },  //    0
 { 0x0411,  12 },  //    1
 { 0x0501,  13 },  //    2
 { 0x0511,  13 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000447(dtaSCSS2MC2_00000447,
                                               dtaSCSS2MC2_00000447 + 4);

static const st_SCSS2Offset dtaSCSS2MC2_00000448[] = {
 { 0x0401,  14 },  //    0
 { 0x0411,  14 },  //    1
 { 0x0501,  15 },  //    2
 { 0x0511,  15 },  //    3
 { 0x3501,  16 },  //    4
 { 0x3511,  16 },  //    5
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000448(dtaSCSS2MC2_00000448,
                                               dtaSCSS2MC2_00000448 + 6);

static const st_SCSS2Offset dtaSCSS2MC2_0000044A[] = {
 { 0x0401,  17 },  //    0
 { 0x0411,  17 },  //    1
};

static const Vct_ISCSS2MC vctSCSS2MC2_0000044A(dtaSCSS2MC2_0000044A,
                                               dtaSCSS2MC2_0000044A + 2);

static const st_SCSS2Offset dtaSCSS2MC2_0000044B[] = {
 { 0x0401,  18 },  //    0
 { 0x0411,  18 },  //    1
 { 0x0501,  19 },  //    2
 { 0x0511,  19 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_0000044B(dtaSCSS2MC2_0000044B,
                                               dtaSCSS2MC2_0000044B + 4);

static const st_SCSS2Offset dtaSCSS2MC2_0000044E[] = {
 { 0x0401,   4 },  //    0
 { 0x0411,   4 },  //    1
 { 0x0501,   5 },  //    2
 { 0x0511,   5 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_0000044E(dtaSCSS2MC2_0000044E,
                                               dtaSCSS2MC2_0000044E + 4);

static const st_SCSS2Offset dtaSCSS2MC2_0000046A[] = {
 { 0x1e06,  20 },  //    0
 { 0x1e16,  21 },  //    1
 { 0x1e07,  21 },  //    2
 { 0x1e17,  20 },  //    3
 { 0x2506,  22 },  //    4
 { 0x2516,  22 },  //    5
 { 0x2507,  23 },  //    6
 { 0x2517,  23 },  //    7
 { 0x2606,  24 },  //    8
 { 0x2616,  24 },  //    9
 { 0x2607,  25 },  //   10
 { 0x2617,  25 },  //   11
 { 0x1f06,  26 },  //   12
 { 0x1f16,  26 },  //   13
 { 0x1f07,  27 },  //   14
 { 0x1f17,  27 },  //   15
};

static const Vct_ISCSS2MC vctSCSS2MC2_0000046A(dtaSCSS2MC2_0000046A,
                                               dtaSCSS2MC2_0000046A + 16);

static const st_SCSS2Offset dtaSCSS2MC2_00000470[] = {
 { 0x1e06,  20 },  //    0
 { 0x1e16,  21 },  //    1
 { 0x1e07,  21 },  //    2
 { 0x1e17,  20 },  //    3
 { 0x2006,  28 },  //    4
 { 0x2016,  29 },  //    5
 { 0x2007,  29 },  //    6
 { 0x2017,  28 },  //    7
 { 0x1206,  30 },  //    8
 { 0x1216,  31 },  //    9
 { 0x1207,  31 },  //   10
 { 0x1217,  30 },  //   11
 { 0x2106,  32 },  //   12
 { 0x2116,  32 },  //   13
 { 0x2107,  33 },  //   14
 { 0x2117,  33 },  //   15
 { 0x2206,  34 },  //   16
 { 0x2216,  34 },  //   17
 { 0x2207,  35 },  //   18
 { 0x2217,  35 },  //   19
 { 0x2306,  36 },  //   20
 { 0x2316,  36 },  //   21
 { 0x2307,  37 },  //   22
 { 0x2317,  37 },  //   23
 { 0x3206,  38 },  //   24
 { 0x3216,  38 },  //   25
 { 0x3207,  39 },  //   26
 { 0x3217,  39 },  //   27
 { 0x1006,  40 },  //   28
 { 0x1016,  41 },  //   29
 { 0x1007,  41 },  //   30
 { 0x1017,  40 },  //   31
 { 0x1f06,  26 },  //   32
 { 0x1f16,  26 },  //   33
 { 0x1f07,  27 },  //   34
 { 0x1f17,  27 },  //   35
 { 0x1106,  42 },  //   36
 { 0x1116,  43 },  //   37
 { 0x1107,  43 },  //   38
 { 0x1117,  42 },  //   39
 { 0x3306,  44 },  //   40
 { 0x3316,  45 },  //   41
 { 0x3307,  45 },  //   42
 { 0x3317,  44 },  //   43
 { 0x3406,  46 },  //   44
 { 0x3416,  46 },  //   45
 { 0x3407,  47 },  //   46
 { 0x3417,  47 },  //   47
};

static const Vct_ISCSS2MC vctSCSS2MC2_00000470(dtaSCSS2MC2_00000470,
                                               dtaSCSS2MC2_00000470 + 48);

static const st_SCSS2Offset dtaSCSS2MC2_00010439[] = {
 { 0x0401,   4 },  //    0
 { 0x0411,   4 },  //    1
 { 0x0501,   5 },  //    2
 { 0x0511,   5 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_00010439(dtaSCSS2MC2_00010439,
                                               dtaSCSS2MC2_00010439 + 4);

static const st_SCSS2Offset dtaSCSS2MC2_00010445[] = {
 { 0x0501,   7 },  //    0
 { 0x0511,   7 },  //    1
};

static const Vct_ISCSS2MC vctSCSS2MC2_00010445(dtaSCSS2MC2_00010445,
                                               dtaSCSS2MC2_00010445 + 2);

static const st_SCSS2Offset dtaSCSS2MC2_00010480[] = {
 { 0x2601,   0 },  //    0
 { 0x2611,   0 },  //    1
};

static const Vct_ISCSS2MC vctSCSS2MC2_00010480(dtaSCSS2MC2_00010480,
                                               dtaSCSS2MC2_00010480 + 2);

static const st_SCSS2Offset dtaSCSS2MC2_00020445[] = {
 { 0x0401,   6 },  //    0
 { 0x0411,   6 },  //    1
 { 0x0501,   7 },  //    2
 { 0x0511,   7 },  //    3
};

static const Vct_ISCSS2MC vctSCSS2MC2_00020445(dtaSCSS2MC2_00020445,
                                               dtaSCSS2MC2_00020445 + 4);

static const wchar_t wcMC2[48][2] = {
  { 0x0644, 0x0627},  //    0; Use Count =   4
  { 0x0644, 0x0622},  //    1; Use Count =   2
  { 0x0644, 0x0623},  //    2; Use Count =   2
  { 0x0644, 0x0625},  //    3; Use Count =   2
  { 0x094d, 0x0930},  //    4; Use Count =   6
  { 0x0930, 0x094d},  //    5; Use Count =   6
  { 0x09cd, 0x09b0},  //    6; Use Count =   4
  { 0x09b0, 0x09cd},  //    7; Use Count =   6
  { 0x0a4d, 0x0a35},  //    8; Use Count =   2
  { 0x0a4d, 0x0a2f},  //    9; Use Count =   2
  { 0x0a4d, 0x0a30},  //   10; Use Count =   2
  { 0x0a4d, 0x0a39},  //   11; Use Count =   2
  { 0x0acd, 0x0ab0},  //   12; Use Count =   2
  { 0x0ab0, 0x0acd},  //   13; Use Count =   2
  { 0x0b4d, 0x0b30},  //   14; Use Count =   2
  { 0x0b30, 0x0b4d},  //   15; Use Count =   2
  { 0x0b2f, 0x0b3c},  //   16; Use Count =   2
  { 0x0c4d, 0x0c30},  //   17; Use Count =   2
  { 0x0ccd, 0x0cb0},  //   18; Use Count =   2
  { 0x0cb0, 0x0ccd},  //   19; Use Count =   2
  { 0x1ecd, 0x0301},  //   20; Use Count =   4
  { 0x1ecc, 0x0301},  //   21; Use Count =   4
  { 0x1eb9, 0x0301},  //   22; Use Count =   2
  { 0x1eb8, 0x0301},  //   23; Use Count =   2
  { 0x1eb9, 0x0300},  //   24; Use Count =   2
  { 0x1eb8, 0x0300},  //   25; Use Count =   2
  { 0x1ecd, 0x0300},  //   26; Use Count =   4
  { 0x1ecc, 0x0300},  //   27; Use Count =   4
  { 0x1ecd, 0x0304},  //   28; Use Count =   2
  { 0x1ecc, 0x0304},  //   29; Use Count =   2
  { 0x1ecb, 0x0304},  //   30; Use Count =   2
  { 0x1eca, 0x0304},  //   31; Use Count =   2
  { 0x1ee5, 0x0301},  //   32; Use Count =   2
  { 0x1ee4, 0x0301},  //   33; Use Count =   2
  { 0x1ee5, 0x0300},  //   34; Use Count =   2
  { 0x1ee4, 0x0300},  //   35; Use Count =   2
  { 0x1ee5, 0x0304},  //   36; Use Count =   2
  { 0x1ee4, 0x0304},  //   37; Use Count =   2
  { 0x006d, 0x0300},  //   38; Use Count =   2
  { 0x004d, 0x0300},  //   39; Use Count =   2
  { 0x1ecb, 0x0301},  //   40; Use Count =   2
  { 0x1eca, 0x0301},  //   41; Use Count =   2
  { 0x1ecb, 0x0300},  //   42; Use Count =   2
  { 0x1eca, 0x0300},  //   43; Use Count =   2
  { 0x006d, 0x0304},  //   44; Use Count =   2
  { 0x004d, 0x0304},  //   45; Use Count =   2
  { 0x006e, 0x0304},  //   46; Use Count =   2
  { 0x004e, 0x0304}   //   47; Use Count =   2
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 37
                                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_SCSS2MC3Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_SCSS2Offset dtaSCSS2MC3_00000439[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000439(dtaSCSS2MC3_00000439,
                                               dtaSCSS2MC3_00000439 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000445[] = {
 { 0x0601,   4 },  //    0
 { 0x0611,   4 },  //    1
 { 0x0701,   5 },  //    2
 { 0x0711,   5 },  //    3
 { 0x0801,   6 },  //    4
 { 0x0811,   6 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000445(dtaSCSS2MC3_00000445,
                                               dtaSCSS2MC3_00000445 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000447[] = {
 { 0x0601,   8 },  //    0
 { 0x0611,   8 },  //    1
 { 0x0701,   9 },  //    2
 { 0x0711,   9 },  //    3
 { 0x0801,  10 },  //    4
 { 0x0811,  10 },  //    5
 { 0x0901,  11 },  //    6
 { 0x0911,  11 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000447(dtaSCSS2MC3_00000447,
                                               dtaSCSS2MC3_00000447 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000448[] = {
 { 0x0601,  12 },  //    0
 { 0x0611,  12 },  //    1
 { 0x0701,  13 },  //    2
 { 0x0711,  13 },  //    3
 { 0x0801,  14 },  //    4
 { 0x0811,  14 },  //    5
 { 0x0901,  15 },  //    6
 { 0x0911,  15 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000448(dtaSCSS2MC3_00000448,
                                               dtaSCSS2MC3_00000448 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00000449[] = {
 { 0x0701,  16 },  //    0
 { 0x0711,  16 },  //    1
 { 0x0801,  17 },  //    2
 { 0x0811,  17 },  //    3
 { 0x0901,  18 },  //    4
 { 0x0911,  18 },  //    5
};

static const Vct_ISCSS2MC vctSCSS2MC3_00000449(dtaSCSS2MC3_00000449,
                                               dtaSCSS2MC3_00000449 + 6);

static const st_SCSS2Offset dtaSCSS2MC3_0000044A[] = {
 { 0x0601,  19 },  //    0
 { 0x0611,  19 },  //    1
 { 0x0701,  20 },  //    2
 { 0x0711,  20 },  //    3
 { 0x0801,  21 },  //    4
 { 0x0811,  21 },  //    5
 { 0x0901,  22 },  //    6
 { 0x0911,  22 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044A(dtaSCSS2MC3_0000044A,
                                               dtaSCSS2MC3_0000044A + 8);

static const st_SCSS2Offset dtaSCSS2MC3_0000044B[] = {
 { 0x0601,  23 },  //    0
 { 0x0611,  23 },  //    1
 { 0x0701,  24 },  //    2
 { 0x0711,  24 },  //    3
 { 0x0801,  25 },  //    4
 { 0x0811,  25 },  //    5
 { 0x0901,  26 },  //    6
 { 0x0911,  26 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044B(dtaSCSS2MC3_0000044B,
                                               dtaSCSS2MC3_0000044B + 8);

static const st_SCSS2Offset dtaSCSS2MC3_0000044E[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_0000044E(dtaSCSS2MC3_0000044E,
                                               dtaSCSS2MC3_0000044E + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00010439[] = {
 { 0x0601,   0 },  //    0
 { 0x0611,   0 },  //    1
 { 0x0701,   1 },  //    2
 { 0x0711,   1 },  //    3
 { 0x0801,   2 },  //    4
 { 0x0811,   2 },  //    5
 { 0x0901,   3 },  //    6
 { 0x0911,   3 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00010439(dtaSCSS2MC3_00010439,
                                               dtaSCSS2MC3_00010439 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00010445[] = {
 { 0x0601,  27 },  //    0
 { 0x0611,  27 },  //    1
 { 0x0701,  28 },  //    2
 { 0x0711,  28 },  //    3
 { 0x0801,  29 },  //    4
 { 0x0811,  29 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00010445(dtaSCSS2MC3_00010445,
                                               dtaSCSS2MC3_00010445 + 8);

static const st_SCSS2Offset dtaSCSS2MC3_00020445[] = {
 { 0x0601,  27 },  //    0
 { 0x0611,  27 },  //    1
 { 0x0701,  28 },  //    2
 { 0x0711,  28 },  //    3
 { 0x0801,  29 },  //    4
 { 0x0811,  29 },  //    5
 { 0x0901,   7 },  //    6
 { 0x0911,   7 },  //    7
};

static const Vct_ISCSS2MC vctSCSS2MC3_00020445(dtaSCSS2MC3_00020445,
                                               dtaSCSS2MC3_00020445 + 8);

static const wchar_t wcMC3[30][3] = {
  { 0x091c, 0x094d, 0x091e},  //    0; Use Count =   6
  { 0x0924, 0x094d, 0x0930},  //    1; Use Count =   6
  { 0x0915, 0x094d, 0x0937},  //    2; Use Count =   6
  { 0x0936, 0x094d, 0x0930},  //    3; Use Count =   6
  { 0x099c, 0x09cd, 0x09b0},  //    4; Use Count =   2
  { 0x09a4, 0x09cd, 0x09b7},  //    5; Use Count =   2
  { 0x0995, 0x09cd, 0x09b0},  //    6; Use Count =   2
  { 0x09b6, 0x09cd, 0x09b0},  //    7; Use Count =   6
  { 0x0a9c, 0x0acd, 0x0a9e},  //    8; Use Count =   2
  { 0x0aa4, 0x0acd, 0x0ab0},  //    9; Use Count =   2
  { 0x0a95, 0x0acd, 0x0ab7},  //   10; Use Count =   2
  { 0x0ab6, 0x0acd, 0x0ab0},  //   11; Use Count =   2
  { 0x0b1c, 0x0b4d, 0x0b1e},  //   12; Use Count =   2
  { 0x0b24, 0x0b4d, 0x0b30},  //   13; Use Count =   2
  { 0x0b15, 0x0b4d, 0x0b37},  //   14; Use Count =   2
  { 0x0b36, 0x0b4d, 0x0b30},  //   15; Use Count =   2
  { 0x0ba4, 0x0bcd, 0x0bb0},  //   16; Use Count =   2
  { 0x0b95, 0x0bcd, 0x0bb7},  //   17; Use Count =   2
  { 0x0bb7, 0x0bcd, 0x0bb0},  //   18; Use Count =   2
  { 0x0c1c, 0x0c4d, 0x0c1e},  //   19; Use Count =   2
  { 0x0c24, 0x0c4d, 0x0c30},  //   20; Use Count =   2
  { 0x0c15, 0x0c4d, 0x0c37},  //   21; Use Count =   2
  { 0x0c36, 0x0c4d, 0x0c30},  //   22; Use Count =   2
  { 0x0c9c, 0x0ccd, 0x0c9e},  //   23; Use Count =   2
  { 0x0ca4, 0x0ccd, 0x0cb0},  //   24; Use Count =   2
  { 0x0c95, 0x0ccd, 0x0cb7},  //   25; Use Count =   2
  { 0x0cb6, 0x0ccd, 0x0cb0},  //   26; Use Count =   2
  { 0x099c, 0x09cd, 0x099e},  //   27; Use Count =   4
  { 0x09a4, 0x09cd, 0x09b0},  //   28; Use Count =   4
  { 0x0995, 0x09cd, 0x09b7}   //   29; Use Count =   4
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 38
                                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_SCSS2MC4Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_SCSS2Offset dtaSCSS2MC4_00000429[] = {
 { 0x1301,   0 },  //    0
 { 0x1311,   0 },  //    1
};

static const Vct_ISCSS2MC vctSCSS2MC4_00000429(dtaSCSS2MC4_00000429,
                                               dtaSCSS2MC4_00000429 + 2);

static const st_SCSS2Offset dtaSCSS2MC4_00000449[] = {
 { 0x3401,   1 },  //    0
 { 0x3411,   1 },  //    1
};

static const Vct_ISCSS2MC vctSCSS2MC4_00000449(dtaSCSS2MC4_00000449,
                                               dtaSCSS2MC4_00000449 + 2);

static const wchar_t wcMC4[2][4] = {
  { 0x0631, 0x064a, 0x0627, 0x0644},  //    0; Use Count =   2
  { 0x0bb8, 0x0bcd, 0x0bb0, 0x0bc0}   //    1; Use Count =   2
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 39

// Arrays to match 'KLID + Scancode + Shiftstate' to Multi-character value
//  (2, 3 or 4 characters)
                                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_KLID2SCSS2MC2Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_IKLID2SCSS2MC MC2[] = {
 { 0x00000401, &vctSCSS2MC2_00000401 },  //    0
 { 0x00000439, &vctSCSS2MC2_00000439 },  //    1
 { 0x00000445, &vctSCSS2MC2_00000445 },  //    2
 { 0x00000446, &vctSCSS2MC2_00000446 },  //    3
 { 0x00000447, &vctSCSS2MC2_00000447 },  //    4
 { 0x00000448, &vctSCSS2MC2_00000448 },  //    5
 { 0x0000044A, &vctSCSS2MC2_0000044A },  //    6
 { 0x0000044B, &vctSCSS2MC2_0000044B },  //    7
 { 0x0000044E, &vctSCSS2MC2_0000044E },  //    8
 { 0x0000046A, &vctSCSS2MC2_0000046A },  //    9
 { 0x00000470, &vctSCSS2MC2_00000470 },  //   10
 { 0x00010439, &vctSCSS2MC2_00010439 },  //   11
 { 0x00010445, &vctSCSS2MC2_00010445 },  //   12
 { 0x00010480, &vctSCSS2MC2_00010480 },  //   13
 { 0x00020445, &vctSCSS2MC2_00020445 },  //   14
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 43
                                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_KLID2SCSS2MC3Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_IKLID2SCSS2MC MC3[] = {
 { 0x00000439, &vctSCSS2MC3_00000439 },  //    0
 { 0x00000445, &vctSCSS2MC3_00000445 },  //    1
 { 0x00000447, &vctSCSS2MC3_00000447 },  //    2
 { 0x00000448, &vctSCSS2MC3_00000448 },  //    3
 { 0x00000449, &vctSCSS2MC3_00000449 },  //    4
 { 0x0000044A, &vctSCSS2MC3_0000044A },  //    5
 { 0x0000044B, &vctSCSS2MC3_0000044B },  //    6
 { 0x0000044E, &vctSCSS2MC3_0000044E },  //    7
 { 0x00010439, &vctSCSS2MC3_00010439 },  //    8
 { 0x00010445, &vctSCSS2MC3_00010445 },  //    9
 { 0x00020445, &vctSCSS2MC3_00020445 },  //   10
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 44
                                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_KB_KLID2SCSS2MC4Data.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


static const st_IKLID2SCSS2MC MC4[] = {
 { 0x00000429, &vctSCSS2MC4_00000429 }, //    0
 { 0x00000449, &vctSCSS2MC4_00000449 }, //    1
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 45

// This maps KLID to a map holding its deadkey
// and combined characters (if any)
static Map_IKLID2DK2SCSSCC m_mapIKLID2DK2SCSSCC;

// Maps that we keep and give the caller pointers to them
static Map_SCSS2MC  m_mapSCSS2MC2;
static Map_SCSS2MC  m_mapSCSS2MC3;
static Map_SCSS2MC  m_mapSCSS2MC4;
static MMap_DK2SCSSCC m_mmapDK2SCSSCC;

// One map per KLID that maps the deadkey and combined characters
//  for that keyboard: "static Map_IDK2SC m_map_IDK2SC_<KLID>;" e.g.
//  Map_IDK2SC m_map_IDK2SC_00011009; - Canadian Multilingual Standard
                                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_Define_DeadKey_DataMaps.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/

  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000405;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000406;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000407;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000040A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000040B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000040C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000040E;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000040F;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000413;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000414;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000415;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000416;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000418;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000041A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000041B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000041C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000041D;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000041F;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000424;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000425;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000426;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000042E;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000432;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000438;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000043B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000452;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000046A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000046C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000470;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000481;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000488;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000807;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000080A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000080C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000813;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000816;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000081A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000083B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000C0C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00000C1A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00001009;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000100C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00001809;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0000201A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010405;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010407;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001040A;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010415;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010418;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001041B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001041F;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00010426;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001043B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001080C;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0001083B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00011009;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00011809;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00020405;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00020408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00020409;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00020418;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0002042E;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_0002083B;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00030408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00040408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00050408;
  static Map_IDK2SCSSCC m_map_IDK2SCSSCC_00060408;

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 60

// Code
BOOL APIENTRY DllMain(HMODULE /* hModule */,
                      DWORD   ul_reason_for_call,
                      LPVOID  /* lpReserved */)
{
  switch (ul_reason_for_call) {
    case DLL_PROCESS_ATTACH:
      // A process is loading the DLL.
      SetupDeadKeyMaps();
      break;
    case DLL_THREAD_ATTACH:
      // A process is creating a new thread.
      break;
    case DLL_THREAD_DETACH:
      // A thread exits normally.
      break;
    case DLL_PROCESS_DETACH:
      // A process unloads the DLL.
      // Clear deadkey maps
      ClearDeadKeyMaps();

      // Clear main map
      m_mapIKLID2DK2SCSSCC.clear();

      // Clear user multi-character maps
      m_mapSCSS2MC2.clear();
      m_mapSCSS2MC3.clear();
      m_mapSCSS2MC4.clear();

      // Clear user Deadkey Maps
      m_mmapDK2SCSSCC.clear();
      break;
  }

  return TRUE;
}

__declspec(dllimport) int OSK_GetVersion()
{
  // Return current version to ensure caller and DLL are in step
  // with regard to calling functions and Implemention Structure
  return 1;
}

__declspec(dllimport) void OSK_ListKeyboards(UINT &uiKLID, UINT &uiCtrlID)
{
  // Provide list of supported keyboards in this DLL
  // Called with uiKLID = 0 to intialise and return first entry
  // Continues returning information. End of list signalled by returning
  // zero uiKLID.
  static int KLID_index = 0;

  if (uiKLID == 0)
    KLID_index = 0;
  else {
    KLID_index++;
    if (KLID_index >= 127) {
      uiKLID = 0;
      uiCtrlID = 0;
      return;
    }
  }

  uiKLID = IKLID2VKBD[KLID_index].uiKLID;
  uiCtrlID = IKLID2VKBD[KLID_index].pstIVKBD->uiCtrlID;
}

__declspec(dllimport) BOOL OSK_GetKeyboardData(UINT uiKLID, st_KBImpl &stKBImpl)
{
  // Return user's keyboard data
  m_mapSCSS2MC2.clear();
  m_mapSCSS2MC3.clear();
  m_mapSCSS2MC4.clear();
  m_mmapDK2SCSSCC.clear();

  stKBImpl.wcMC2 = (wchar_t *)&(wcMC2[0][0]);
  stKBImpl.wcMC3 = (wchar_t *)&(wcMC3[0][0]);
  stKBImpl.wcMC4 = (wchar_t *)&(wcMC4[0][0]);
  stKBImpl.wcDK  = (wchar_t *)&(wcDK[0]);

  bool bFound(false);
  int index(0), ivector(0);
  // Look for this KLID
  for (int i = 0; i < 127; i++) {
    if (IKLID2VKBD[i].uiKLID == uiKLID) {
      bFound = true;
      index = i;
      break;
    }
  }

  if (!bFound) {
    // Not found - zero calling Implementation structure
    // and return FALSE
    for (int i = 0; i < 51; i++) {
      stKBImpl.stVKBD.stSC2CHAR[i].SC = 0;
      stKBImpl.stVKBD.stSC2CHAR[i].bsDeadKey.reset();
      for (int j = 0; j < 16; j++) {
        stKBImpl.stVKBD.stSC2CHAR[i].wcChar[j] = 0;
      }
    }
    stKBImpl.pmapSCSS2MC2 = NULL;
    stKBImpl.pmapSCSS2MC3 = NULL;
    stKBImpl.pmapSCSS2MC4 = NULL;
    stKBImpl.pmmapDK2SCSSCC = NULL;
    return FALSE;
  }

  st_IVKBD * pstIVKBD = IKLID2VKBD[index].pstIVKBD;
  stKBImpl.stVKBD.uiCtrlID = pstIVKBD->uiCtrlID;
  stKBImpl.stVKBD.numScanCodes = pstIVKBD->numScanCodes;

  // Build keyboard data (expand offsets to actual key characters)
  bool bLCtrl(false), bAltGr(false), bRCtrl(false);
  for (int i = 0; i < (int)pstIVKBD->numScanCodes; i++) {
    stKBImpl.stVKBD.stSC2CHAR[i].SC = pstIVKBD->stISC2CHAR[i].SC;
    std::bitset<16> bsDeadKey(pstIVKBD->stISC2CHAR[i].uiDeadKey);
    stKBImpl.stVKBD.stSC2CHAR[i].bsDeadKey = bsDeadKey;

    for (int j = 0; j < 4; j++) {
      stKBImpl.stVKBD.stSC2CHAR[i].wcChar[j]      = wc_Chars[pstIVKBD->stISC2CHAR[i].uiOffset1][j];
      stKBImpl.stVKBD.stSC2CHAR[i].wcChar[j + 4]  = wc_Chars[pstIVKBD->stISC2CHAR[i].uiOffset2][j];
      stKBImpl.stVKBD.stSC2CHAR[i].wcChar[j + 8]  = wc_Chars[pstIVKBD->stISC2CHAR[i].uiOffset3][j];
      stKBImpl.stVKBD.stSC2CHAR[i].wcChar[j + 12] = wc_Chars[pstIVKBD->stISC2CHAR[i].uiOffset4][j];
    }
    // Check if any valid characters to display with Left Control key
    if (!bLCtrl && pstIVKBD->stISC2CHAR[i].uiOffset2 != 0)
      bLCtrl = true;

    // Check if any valid characters to display with AltGr key
    if (!bAltGr && pstIVKBD->stISC2CHAR[i].uiOffset3 != 0)
      bAltGr = true;

    // Check if any valid characters to display with Right Control key
    if (!bRCtrl && pstIVKBD->stISC2CHAR[i].uiOffset4 != 0)
      bRCtrl = true;
  }

  // Set up which special key combinations are valid
  stKBImpl.stVKBD.bsValidSpecials.reset();
  {
    // First Base character
    bool bSpecials[4] = {false, false, false, false};
    for (int i = 0; i < (int)pstIVKBD->numScanCodes; i++) {
      if (!bSpecials[0] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[0] != 0)
          bSpecials[0] = true;
      if (!bSpecials[1] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[1] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[1] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[0])
          bSpecials[1] = true;
      if (!bSpecials[2] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[2] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[2] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[0])
          bSpecials[2] = true;
      if (!bSpecials[3] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[3] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[3] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[0])
          bSpecials[3] = true;
    }
    if (bSpecials[0])
      stKBImpl.stVKBD.bsValidSpecials.set(b);
    if (bSpecials[1])
      stKBImpl.stVKBD.bsValidSpecials.set(bC);
    if (bSpecials[2])
      stKBImpl.stVKBD.bsValidSpecials.set(sb);
    if (bSpecials[3])
      stKBImpl.stVKBD.bsValidSpecials.set(sbC);
  }

  if (bLCtrl) {
    // Now Left Control
    bool bSpecials[4] = {false, false, false, false};
    for (int i = 0; i < (int)pstIVKBD->numScanCodes; i++) {
      if (!bSpecials[0] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[4] != 0)
          bSpecials[0] = true;
      if (!bSpecials[1] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[5] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[5] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[4])
          bSpecials[1] = true;
      if (!bSpecials[2] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[6] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[6] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[4])
          bSpecials[2] = true;
      if (!bSpecials[3] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[7] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[7] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[4])
          bSpecials[3] = true;
    }
    if (bSpecials[0])
      stKBImpl.stVKBD.bsValidSpecials.set(l);
    if (bSpecials[1])
      stKBImpl.stVKBD.bsValidSpecials.set(lC);
    if (bSpecials[2])
      stKBImpl.stVKBD.bsValidSpecials.set(sl);
    if (bSpecials[3])
      stKBImpl.stVKBD.bsValidSpecials.set(slC);
  }

  if (bAltGr) {
    // Now AltGr
    bool bSpecials[4] = {false, false, false, false};
    for (int i = 0; i < (int)pstIVKBD->numScanCodes; i++) {
      if (!bSpecials[0] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[8] != 0)
          bSpecials[0] = true;
      if (!bSpecials[1] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[9] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[9] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[8])
          bSpecials[1] = true;
      if (!bSpecials[2] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[10] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[10] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[8])
          bSpecials[2] = true;
      if (!bSpecials[3] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[11] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[11] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[8])
          bSpecials[3] = true;
    }
    if (bSpecials[0])
      stKBImpl.stVKBD.bsValidSpecials.set(g);
    if (bSpecials[1])
      stKBImpl.stVKBD.bsValidSpecials.set(gC);
    if (bSpecials[2])
      stKBImpl.stVKBD.bsValidSpecials.set(sg);
    if (bSpecials[3])
      stKBImpl.stVKBD.bsValidSpecials.set(sgC);
  }

  if (bRCtrl) {
    // Lastly Right Control
    bool bSpecials[4] = {false, false, false, false};
    for (int i = 0; i < (int)pstIVKBD->numScanCodes; i++) {
      if (!bSpecials[0] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[12] != 0)
          bSpecials[0] = true;
      if (!bSpecials[1] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[13] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[13] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[12])
          bSpecials[1] = true;
      if (!bSpecials[2] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[14] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[14] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[12])
          bSpecials[2] = true;
      if (!bSpecials[3] && stKBImpl.stVKBD.stSC2CHAR[i].wcChar[15] != 0 &&
          stKBImpl.stVKBD.stSC2CHAR[i].wcChar[15] != stKBImpl.stVKBD.stSC2CHAR[i].wcChar[12])
          bSpecials[3] = true;
    }
    if (bSpecials[0])
      stKBImpl.stVKBD.bsValidSpecials.set(r);
    if (bSpecials[1])
      stKBImpl.stVKBD.bsValidSpecials.set(rC);
    if (bSpecials[2])
      stKBImpl.stVKBD.bsValidSpecials.set(sr);
    if (bSpecials[3])
      stKBImpl.stVKBD.bsValidSpecials.set(srC);
  }

  bFound = false;
  // Now look to see if any 2-character 'characters'
  for (int i = 0; i < 15; i++) {
    if (MC2[i].uiKLID == uiKLID) {
      bFound = true;
      ivector = i;
      break;
    }
  }

  if (bFound) {
    // Set up map for this keyboard
    const Vct_ISCSS2MC * pvctISCSS2MC = MC2[ivector].pvctISCSS2MC;
    CIter_Vct_ISCSS2MC citer_mc2;
    for (citer_mc2 = pvctISCSS2MC->begin(); citer_mc2 != pvctISCSS2MC->end(); citer_mc2++) {
      m_mapSCSS2MC2.insert(std::make_pair(citer_mc2->uiSCSS, citer_mc2->uiOffset));
    }
    stKBImpl.pmapSCSS2MC2 = &m_mapSCSS2MC2;
  } else
    stKBImpl.pmapSCSS2MC2 = NULL;

  bFound = false;
  // Now look to see if any 3-character 'characters'
  for (int i = 0; i < 11; i++) {
    if (MC3[i].uiKLID == uiKLID) {
      bFound = true;
      ivector = i;
      break;
    }
  }

  if (bFound) {
    // Set up map for this keyboard
    const Vct_ISCSS2MC * pvctISCSS2MC = MC3[ivector].pvctISCSS2MC;
    CIter_Vct_ISCSS2MC citer_mc3;
    for (citer_mc3 = pvctISCSS2MC->begin(); citer_mc3 != pvctISCSS2MC->end(); citer_mc3++) {
      m_mapSCSS2MC3.insert(std::make_pair(citer_mc3->uiSCSS, citer_mc3->uiOffset));
    }
    stKBImpl.pmapSCSS2MC3 = &m_mapSCSS2MC3;
  } else
    stKBImpl.pmapSCSS2MC3 = NULL;

  bFound = false;
  // Now look to see if any 4-character 'characters'
  for (int i = 0; i < 2; i++) {
    if (MC4[i].uiKLID == uiKLID) {
      bFound = true;
      ivector = i;
      break;
    }
  }

  if (bFound) {
    // Set up map for this keyboard
    const Vct_ISCSS2MC * pvctISCSS2MC = MC4[ivector].pvctISCSS2MC;
    CIter_Vct_ISCSS2MC citer_mc4;
    for (citer_mc4 = pvctISCSS2MC->begin(); citer_mc4 != pvctISCSS2MC->end(); citer_mc4++) {
      m_mapSCSS2MC4.insert(std::make_pair(citer_mc4->uiSCSS, citer_mc4->uiOffset));
    }
    stKBImpl.pmapSCSS2MC4 = &m_mapSCSS2MC4;
  } else
    stKBImpl.pmapSCSS2MC4 = NULL;

  // Now look to see if this keyboard has any Dead Keys
  Iter_Map_IKLID2DK2SCSSCC iter = m_mapIKLID2DK2SCSSCC.find(uiKLID);

  if (iter != m_mapIKLID2DK2SCSSCC.end()) {
    // Build the DeadKey multi-map for the caller
    // It is a multi-map as a single Dead Key may have a number of
    // associated composite characters - e.g. an accent on multiple vowels
    Map_IDK2SCSSCC *pmapIDK2SCSSCC = iter->second;
    Iter_Map_IDK2SCSSCC iter_xdk;
    for (iter_xdk = pmapIDK2SCSSCC->begin(); iter_xdk != pmapIDK2SCSSCC->end(); iter_xdk++) {
      wchar_t dk = iter_xdk->first;
      const Vct_IDeadkeys * pvIDeadKeys = iter_xdk->second;
      CIter_Vct_IDeadkeys citer_vidks;
      for (citer_vidks = pvIDeadKeys->begin();  citer_vidks != pvIDeadKeys->end(); citer_vidks++) {
        st_SCSSCC stSCSSCC;
        stSCSSCC.SC = citer_vidks->SC;
        stSCSSCC.SS = citer_vidks->SS;
        stSCSSCC.wcCC = wcDK[citer_vidks->uiDKOffset];
        m_mmapDK2SCSSCC.insert(std::make_pair(dk, stSCSSCC));
      }
    }
    stKBImpl.pmmapDK2SCSSCC = &m_mmapDK2SCSSCC;
  } else
    stKBImpl.pmmapDK2SCSSCC = NULL;

  return TRUE;
}

// Internal routines
static void SetupDeadKeyMaps()
{
  // Include code to insert data into the maps
                                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\OSK_Insert_DeadKey_DataMaps.inc" 0
/*

This include file for Password Safe support of all keyboards supported
by Windows was created by the "Password Safe - Keyboard Data Generator" program
kblgen V1.0.0.0 on a Windows 7 64-bit RC system with all keyboard layouts installed on
2009-05-17 18:17:26Z.

The "Password Safe - Keyboard Data Generator" program is a modified version of
code published by Michael Kaplan in his series of MSDN Blogs "Sorting it all Out,
Getting all you can out of a keyboard layout" (Part 0 to Part 9b) between 
March 23 and April 13, 2006.

See http://blogs.msdn.com/michkap/archive/2006/04/13/575500.aspx

  *** PLEASE DO NOT EDIT THIS FILE DIRECTLY ***

*/


  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000405, &m_map_IDK2SCSSCC_00000405));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x02dd, &vctDeadkey_00000405_x02dd));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x02c7, &vctDeadkey_00000405_x02c7));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x005e, &vctDeadkey_00000405_x005e));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x02d8, &vctDeadkey_00000405_x02d8));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x00b0, &vctDeadkey_00000405_x00b0));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x02db, &vctDeadkey_00000405_x02db));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x0060, &vctDeadkey_00000405_x0060));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x02d9, &vctDeadkey_00000405_x02d9));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x00b4, &vctDeadkey_00000405_x00b4));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x00a8, &vctDeadkey_00000405_x00a8));
  m_map_IDK2SCSSCC_00000405.insert(std::make_pair(0x00b8, &vctDeadkey_00000405_x00b8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000406, &m_map_IDK2SCSSCC_00000406));
  m_map_IDK2SCSSCC_00000406.insert(std::make_pair(0x00a8, &vctDeadkey_00000406_x00a8));
  m_map_IDK2SCSSCC_00000406.insert(std::make_pair(0x005e, &vctDeadkey_00000406_x005e));
  m_map_IDK2SCSSCC_00000406.insert(std::make_pair(0x007e, &vctDeadkey_00000406_x007e));
  m_map_IDK2SCSSCC_00000406.insert(std::make_pair(0x00b4, &vctDeadkey_00000406_x00b4));
  m_map_IDK2SCSSCC_00000406.insert(std::make_pair(0x0060, &vctDeadkey_00000406_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000407, &m_map_IDK2SCSSCC_00000407));
  m_map_IDK2SCSSCC_00000407.insert(std::make_pair(0x005e, &vctDeadkey_00000407_x005e));
  m_map_IDK2SCSSCC_00000407.insert(std::make_pair(0x00b4, &vctDeadkey_00000407_x00b4));
  m_map_IDK2SCSSCC_00000407.insert(std::make_pair(0x0060, &vctDeadkey_00000407_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000408, &m_map_IDK2SCSSCC_00000408));
  m_map_IDK2SCSSCC_00000408.insert(std::make_pair(0x0385, &vctDeadkey_00000408_x0385));
  m_map_IDK2SCSSCC_00000408.insert(std::make_pair(0x0384, &vctDeadkey_00000408_x0384));
  m_map_IDK2SCSSCC_00000408.insert(std::make_pair(0x00a8, &vctDeadkey_00000408_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000040A, &m_map_IDK2SCSSCC_0000040A));
  m_map_IDK2SCSSCC_0000040A.insert(std::make_pair(0x007e, &vctDeadkey_0000040A_x007e));
  m_map_IDK2SCSSCC_0000040A.insert(std::make_pair(0x0060, &vctDeadkey_0000040A_x0060));
  m_map_IDK2SCSSCC_0000040A.insert(std::make_pair(0x005e, &vctDeadkey_0000040A_x005e));
  m_map_IDK2SCSSCC_0000040A.insert(std::make_pair(0x00b4, &vctDeadkey_0000040A_x00b4));
  m_map_IDK2SCSSCC_0000040A.insert(std::make_pair(0x00a8, &vctDeadkey_0000040A_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000040B, &m_map_IDK2SCSSCC_0000040B));
  m_map_IDK2SCSSCC_0000040B.insert(std::make_pair(0x00a8, &vctDeadkey_0000040B_x00a8));
  m_map_IDK2SCSSCC_0000040B.insert(std::make_pair(0x005e, &vctDeadkey_0000040B_x005e));
  m_map_IDK2SCSSCC_0000040B.insert(std::make_pair(0x007e, &vctDeadkey_0000040B_x007e));
  m_map_IDK2SCSSCC_0000040B.insert(std::make_pair(0x00b4, &vctDeadkey_0000040B_x00b4));
  m_map_IDK2SCSSCC_0000040B.insert(std::make_pair(0x0060, &vctDeadkey_0000040B_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000040C, &m_map_IDK2SCSSCC_0000040C));
  m_map_IDK2SCSSCC_0000040C.insert(std::make_pair(0x007e, &vctDeadkey_0000040C_x007e));
  m_map_IDK2SCSSCC_0000040C.insert(std::make_pair(0x0060, &vctDeadkey_0000040C_x0060));
  m_map_IDK2SCSSCC_0000040C.insert(std::make_pair(0x005e, &vctDeadkey_0000040C_x005e));
  m_map_IDK2SCSSCC_0000040C.insert(std::make_pair(0x00a8, &vctDeadkey_0000040C_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000040E, &m_map_IDK2SCSSCC_0000040E));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x02c7, &vctDeadkey_0000040E_x02c7));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x005e, &vctDeadkey_0000040E_x005e));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x02d8, &vctDeadkey_0000040E_x02d8));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x00b0, &vctDeadkey_0000040E_x00b0));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x02db, &vctDeadkey_0000040E_x02db));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x02d9, &vctDeadkey_0000040E_x02d9));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x00b4, &vctDeadkey_0000040E_x00b4));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x00b8, &vctDeadkey_0000040E_x00b8));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x00a8, &vctDeadkey_0000040E_x00a8));
  m_map_IDK2SCSSCC_0000040E.insert(std::make_pair(0x02dd, &vctDeadkey_0000040E_x02dd));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000040F, &m_map_IDK2SCSSCC_0000040F));
  m_map_IDK2SCSSCC_0000040F.insert(std::make_pair(0x0060, &vctDeadkey_0000040F_x0060));
  m_map_IDK2SCSSCC_0000040F.insert(std::make_pair(0x00b0, &vctDeadkey_0000040F_x00b0));
  m_map_IDK2SCSSCC_0000040F.insert(std::make_pair(0x00a8, &vctDeadkey_0000040F_x00a8));
  m_map_IDK2SCSSCC_0000040F.insert(std::make_pair(0x00b4, &vctDeadkey_0000040F_x00b4));
  m_map_IDK2SCSSCC_0000040F.insert(std::make_pair(0x005e, &vctDeadkey_0000040F_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000413, &m_map_IDK2SCSSCC_00000413));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x007e, &vctDeadkey_00000413_x007e));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x00b8, &vctDeadkey_00000413_x00b8));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x00b4, &vctDeadkey_00000413_x00b4));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x0060, &vctDeadkey_00000413_x0060));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x00a8, &vctDeadkey_00000413_x00a8));
  m_map_IDK2SCSSCC_00000413.insert(std::make_pair(0x005e, &vctDeadkey_00000413_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000414, &m_map_IDK2SCSSCC_00000414));
  m_map_IDK2SCSSCC_00000414.insert(std::make_pair(0x00a8, &vctDeadkey_00000414_x00a8));
  m_map_IDK2SCSSCC_00000414.insert(std::make_pair(0x005e, &vctDeadkey_00000414_x005e));
  m_map_IDK2SCSSCC_00000414.insert(std::make_pair(0x007e, &vctDeadkey_00000414_x007e));
  m_map_IDK2SCSSCC_00000414.insert(std::make_pair(0x0060, &vctDeadkey_00000414_x0060));
  m_map_IDK2SCSSCC_00000414.insert(std::make_pair(0x00b4, &vctDeadkey_00000414_x00b4));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000415, &m_map_IDK2SCSSCC_00000415));
  m_map_IDK2SCSSCC_00000415.insert(std::make_pair(0x007e, &vctDeadkey_00000415_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000416, &m_map_IDK2SCSSCC_00000416));
  m_map_IDK2SCSSCC_00000416.insert(std::make_pair(0x00a8, &vctDeadkey_00000416_x00a8));
  m_map_IDK2SCSSCC_00000416.insert(std::make_pair(0x00b4, &vctDeadkey_00000416_x00b4));
  m_map_IDK2SCSSCC_00000416.insert(std::make_pair(0x0060, &vctDeadkey_00000416_x0060));
  m_map_IDK2SCSSCC_00000416.insert(std::make_pair(0x007e, &vctDeadkey_00000416_x007e));
  m_map_IDK2SCSSCC_00000416.insert(std::make_pair(0x005e, &vctDeadkey_00000416_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000418, &m_map_IDK2SCSSCC_00000418));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x02dd, &vctDeadkey_00000418_x02dd));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x02c7, &vctDeadkey_00000418_x02c7));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x005e, &vctDeadkey_00000418_x005e));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x02d8, &vctDeadkey_00000418_x02d8));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x00b0, &vctDeadkey_00000418_x00b0));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x02db, &vctDeadkey_00000418_x02db));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x00b7, &vctDeadkey_00000418_x00b7));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x00b4, &vctDeadkey_00000418_x00b4));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x00b8, &vctDeadkey_00000418_x00b8));
  m_map_IDK2SCSSCC_00000418.insert(std::make_pair(0x00a8, &vctDeadkey_00000418_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000041A, &m_map_IDK2SCSSCC_0000041A));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x02dd, &vctDeadkey_0000041A_x02dd));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x02c7, &vctDeadkey_0000041A_x02c7));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x005e, &vctDeadkey_0000041A_x005e));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x02d8, &vctDeadkey_0000041A_x02d8));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x00b0, &vctDeadkey_0000041A_x00b0));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x02db, &vctDeadkey_0000041A_x02db));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x02d9, &vctDeadkey_0000041A_x02d9));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x00b4, &vctDeadkey_0000041A_x00b4));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x00b8, &vctDeadkey_0000041A_x00b8));
  m_map_IDK2SCSSCC_0000041A.insert(std::make_pair(0x00a8, &vctDeadkey_0000041A_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000041B, &m_map_IDK2SCSSCC_0000041B));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x02dd, &vctDeadkey_0000041B_x02dd));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x02c7, &vctDeadkey_0000041B_x02c7));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x005e, &vctDeadkey_0000041B_x005e));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x02d8, &vctDeadkey_0000041B_x02d8));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x00b0, &vctDeadkey_0000041B_x00b0));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x02db, &vctDeadkey_0000041B_x02db));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x02d9, &vctDeadkey_0000041B_x02d9));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x00b4, &vctDeadkey_0000041B_x00b4));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x00a8, &vctDeadkey_0000041B_x00a8));
  m_map_IDK2SCSSCC_0000041B.insert(std::make_pair(0x00b8, &vctDeadkey_0000041B_x00b8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000041C, &m_map_IDK2SCSSCC_0000041C));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x02dd, &vctDeadkey_0000041C_x02dd));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x02c7, &vctDeadkey_0000041C_x02c7));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x005e, &vctDeadkey_0000041C_x005e));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x02d8, &vctDeadkey_0000041C_x02d8));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x00b0, &vctDeadkey_0000041C_x00b0));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x02db, &vctDeadkey_0000041C_x02db));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x02d9, &vctDeadkey_0000041C_x02d9));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x00b4, &vctDeadkey_0000041C_x00b4));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x00b8, &vctDeadkey_0000041C_x00b8));
  m_map_IDK2SCSSCC_0000041C.insert(std::make_pair(0x00a8, &vctDeadkey_0000041C_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000041D, &m_map_IDK2SCSSCC_0000041D));
  m_map_IDK2SCSSCC_0000041D.insert(std::make_pair(0x00a8, &vctDeadkey_0000041D_x00a8));
  m_map_IDK2SCSSCC_0000041D.insert(std::make_pair(0x005e, &vctDeadkey_0000041D_x005e));
  m_map_IDK2SCSSCC_0000041D.insert(std::make_pair(0x007e, &vctDeadkey_0000041D_x007e));
  m_map_IDK2SCSSCC_0000041D.insert(std::make_pair(0x00b4, &vctDeadkey_0000041D_x00b4));
  m_map_IDK2SCSSCC_0000041D.insert(std::make_pair(0x0060, &vctDeadkey_0000041D_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000041F, &m_map_IDK2SCSSCC_0000041F));
  m_map_IDK2SCSSCC_0000041F.insert(std::make_pair(0x005e, &vctDeadkey_0000041F_x005e));
  m_map_IDK2SCSSCC_0000041F.insert(std::make_pair(0x00b4, &vctDeadkey_0000041F_x00b4));
  m_map_IDK2SCSSCC_0000041F.insert(std::make_pair(0x0060, &vctDeadkey_0000041F_x0060));
  m_map_IDK2SCSSCC_0000041F.insert(std::make_pair(0x00a8, &vctDeadkey_0000041F_x00a8));
  m_map_IDK2SCSSCC_0000041F.insert(std::make_pair(0x007e, &vctDeadkey_0000041F_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000424, &m_map_IDK2SCSSCC_00000424));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x02dd, &vctDeadkey_00000424_x02dd));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x02c7, &vctDeadkey_00000424_x02c7));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x005e, &vctDeadkey_00000424_x005e));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x02d8, &vctDeadkey_00000424_x02d8));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x00b0, &vctDeadkey_00000424_x00b0));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x02db, &vctDeadkey_00000424_x02db));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x02d9, &vctDeadkey_00000424_x02d9));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x00b4, &vctDeadkey_00000424_x00b4));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x00b8, &vctDeadkey_00000424_x00b8));
  m_map_IDK2SCSSCC_00000424.insert(std::make_pair(0x00a8, &vctDeadkey_00000424_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000425, &m_map_IDK2SCSSCC_00000425));
  m_map_IDK2SCSSCC_00000425.insert(std::make_pair(0x00b4, &vctDeadkey_00000425_x00b4));
  m_map_IDK2SCSSCC_00000425.insert(std::make_pair(0x0060, &vctDeadkey_00000425_x0060));
  m_map_IDK2SCSSCC_00000425.insert(std::make_pair(0x005e, &vctDeadkey_00000425_x005e));
  m_map_IDK2SCSSCC_00000425.insert(std::make_pair(0x02c7, &vctDeadkey_00000425_x02c7));
  m_map_IDK2SCSSCC_00000425.insert(std::make_pair(0x007e, &vctDeadkey_00000425_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000426, &m_map_IDK2SCSSCC_00000426));
  m_map_IDK2SCSSCC_00000426.insert(std::make_pair(0x007e, &vctDeadkey_00000426_x007e));
  m_map_IDK2SCSSCC_00000426.insert(std::make_pair(0x00b4, &vctDeadkey_00000426_x00b4));
  m_map_IDK2SCSSCC_00000426.insert(std::make_pair(0x00b0, &vctDeadkey_00000426_x00b0));
  m_map_IDK2SCSSCC_00000426.insert(std::make_pair(0x00a8, &vctDeadkey_00000426_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000042E, &m_map_IDK2SCSSCC_0000042E));
  m_map_IDK2SCSSCC_0000042E.insert(std::make_pair(0x005e, &vctDeadkey_0000042E_x005e));
  m_map_IDK2SCSSCC_0000042E.insert(std::make_pair(0x00b0, &vctDeadkey_0000042E_x00b0));
  m_map_IDK2SCSSCC_0000042E.insert(std::make_pair(0x00b4, &vctDeadkey_0000042E_x00b4));
  m_map_IDK2SCSSCC_0000042E.insert(std::make_pair(0x0060, &vctDeadkey_0000042E_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000432, &m_map_IDK2SCSSCC_00000432));
  m_map_IDK2SCSSCC_00000432.insert(std::make_pair(0x005e, &vctDeadkey_00000432_x005e));
  m_map_IDK2SCSSCC_00000432.insert(std::make_pair(0x0060, &vctDeadkey_00000432_x0060));
  m_map_IDK2SCSSCC_00000432.insert(std::make_pair(0x007e, &vctDeadkey_00000432_x007e));
  m_map_IDK2SCSSCC_00000432.insert(std::make_pair(0x0027, &vctDeadkey_00000432_x0027));
  m_map_IDK2SCSSCC_00000432.insert(std::make_pair(0x0022, &vctDeadkey_00000432_x0022));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000438, &m_map_IDK2SCSSCC_00000438));
  m_map_IDK2SCSSCC_00000438.insert(std::make_pair(0x007e, &vctDeadkey_00000438_x007e));
  m_map_IDK2SCSSCC_00000438.insert(std::make_pair(0x00b4, &vctDeadkey_00000438_x00b4));
  m_map_IDK2SCSSCC_00000438.insert(std::make_pair(0x0060, &vctDeadkey_00000438_x0060));
  m_map_IDK2SCSSCC_00000438.insert(std::make_pair(0x00a8, &vctDeadkey_00000438_x00a8));
  m_map_IDK2SCSSCC_00000438.insert(std::make_pair(0x005e, &vctDeadkey_00000438_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000043B, &m_map_IDK2SCSSCC_0000043B));
  m_map_IDK2SCSSCC_0000043B.insert(std::make_pair(0x00a8, &vctDeadkey_0000043B_x00a8));
  m_map_IDK2SCSSCC_0000043B.insert(std::make_pair(0x005e, &vctDeadkey_0000043B_x005e));
  m_map_IDK2SCSSCC_0000043B.insert(std::make_pair(0x007e, &vctDeadkey_0000043B_x007e));
  m_map_IDK2SCSSCC_0000043B.insert(std::make_pair(0x0060, &vctDeadkey_0000043B_x0060));
  m_map_IDK2SCSSCC_0000043B.insert(std::make_pair(0x00b4, &vctDeadkey_0000043B_x00b4));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000452, &m_map_IDK2SCSSCC_00000452));
  m_map_IDK2SCSSCC_00000452.insert(std::make_pair(0x00a8, &vctDeadkey_00000452_x00a8));
  m_map_IDK2SCSSCC_00000452.insert(std::make_pair(0x005e, &vctDeadkey_00000452_x005e));
  m_map_IDK2SCSSCC_00000452.insert(std::make_pair(0x00b4, &vctDeadkey_00000452_x00b4));
  m_map_IDK2SCSSCC_00000452.insert(std::make_pair(0x007e, &vctDeadkey_00000452_x007e));
  m_map_IDK2SCSSCC_00000452.insert(std::make_pair(0x0060, &vctDeadkey_00000452_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000046A, &m_map_IDK2SCSSCC_0000046A));
  m_map_IDK2SCSSCC_0000046A.insert(std::make_pair(0x005b, &vctDeadkey_0000046A_x005b));
  m_map_IDK2SCSSCC_0000046A.insert(std::make_pair(0x005c, &vctDeadkey_0000046A_x005c));
  m_map_IDK2SCSSCC_0000046A.insert(std::make_pair(0x0027, &vctDeadkey_0000046A_x0027));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000046C, &m_map_IDK2SCSSCC_0000046C));
  m_map_IDK2SCSSCC_0000046C.insert(std::make_pair(0x005e, &vctDeadkey_0000046C_x005e));
  m_map_IDK2SCSSCC_0000046C.insert(std::make_pair(0x0060, &vctDeadkey_0000046C_x0060));
  m_map_IDK2SCSSCC_0000046C.insert(std::make_pair(0x007e, &vctDeadkey_0000046C_x007e));
  m_map_IDK2SCSSCC_0000046C.insert(std::make_pair(0x0027, &vctDeadkey_0000046C_x0027));
  m_map_IDK2SCSSCC_0000046C.insert(std::make_pair(0x0022, &vctDeadkey_0000046C_x0022));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000470, &m_map_IDK2SCSSCC_00000470));
  m_map_IDK2SCSSCC_00000470.insert(std::make_pair(0x005e, &vctDeadkey_00000470_x005e));
  m_map_IDK2SCSSCC_00000470.insert(std::make_pair(0x0060, &vctDeadkey_00000470_x0060));
  m_map_IDK2SCSSCC_00000470.insert(std::make_pair(0x007e, &vctDeadkey_00000470_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000481, &m_map_IDK2SCSSCC_00000481));
  m_map_IDK2SCSSCC_00000481.insert(std::make_pair(0x0060, &vctDeadkey_00000481_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000488, &m_map_IDK2SCSSCC_00000488));
  m_map_IDK2SCSSCC_00000488.insert(std::make_pair(0x007e, &vctDeadkey_00000488_x007e));
  m_map_IDK2SCSSCC_00000488.insert(std::make_pair(0x0060, &vctDeadkey_00000488_x0060));
  m_map_IDK2SCSSCC_00000488.insert(std::make_pair(0x005e, &vctDeadkey_00000488_x005e));
  m_map_IDK2SCSSCC_00000488.insert(std::make_pair(0x00a8, &vctDeadkey_00000488_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000807, &m_map_IDK2SCSSCC_00000807));
  m_map_IDK2SCSSCC_00000807.insert(std::make_pair(0x00a8, &vctDeadkey_00000807_x00a8));
  m_map_IDK2SCSSCC_00000807.insert(std::make_pair(0x00b4, &vctDeadkey_00000807_x00b4));
  m_map_IDK2SCSSCC_00000807.insert(std::make_pair(0x005e, &vctDeadkey_00000807_x005e));
  m_map_IDK2SCSSCC_00000807.insert(std::make_pair(0x0060, &vctDeadkey_00000807_x0060));
  m_map_IDK2SCSSCC_00000807.insert(std::make_pair(0x007e, &vctDeadkey_00000807_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000080A, &m_map_IDK2SCSSCC_0000080A));
  m_map_IDK2SCSSCC_0000080A.insert(std::make_pair(0x00b4, &vctDeadkey_0000080A_x00b4));
  m_map_IDK2SCSSCC_0000080A.insert(std::make_pair(0x00a8, &vctDeadkey_0000080A_x00a8));
  m_map_IDK2SCSSCC_0000080A.insert(std::make_pair(0x0060, &vctDeadkey_0000080A_x0060));
  m_map_IDK2SCSSCC_0000080A.insert(std::make_pair(0x005e, &vctDeadkey_0000080A_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000080C, &m_map_IDK2SCSSCC_0000080C));
  m_map_IDK2SCSSCC_0000080C.insert(std::make_pair(0x007e, &vctDeadkey_0000080C_x007e));
  m_map_IDK2SCSSCC_0000080C.insert(std::make_pair(0x00b4, &vctDeadkey_0000080C_x00b4));
  m_map_IDK2SCSSCC_0000080C.insert(std::make_pair(0x0060, &vctDeadkey_0000080C_x0060));
  m_map_IDK2SCSSCC_0000080C.insert(std::make_pair(0x005e, &vctDeadkey_0000080C_x005e));
  m_map_IDK2SCSSCC_0000080C.insert(std::make_pair(0x00a8, &vctDeadkey_0000080C_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000813, &m_map_IDK2SCSSCC_00000813));
  m_map_IDK2SCSSCC_00000813.insert(std::make_pair(0x007e, &vctDeadkey_00000813_x007e));
  m_map_IDK2SCSSCC_00000813.insert(std::make_pair(0x00b4, &vctDeadkey_00000813_x00b4));
  m_map_IDK2SCSSCC_00000813.insert(std::make_pair(0x0060, &vctDeadkey_00000813_x0060));
  m_map_IDK2SCSSCC_00000813.insert(std::make_pair(0x005e, &vctDeadkey_00000813_x005e));
  m_map_IDK2SCSSCC_00000813.insert(std::make_pair(0x00a8, &vctDeadkey_00000813_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000816, &m_map_IDK2SCSSCC_00000816));
  m_map_IDK2SCSSCC_00000816.insert(std::make_pair(0x00b4, &vctDeadkey_00000816_x00b4));
  m_map_IDK2SCSSCC_00000816.insert(std::make_pair(0x0060, &vctDeadkey_00000816_x0060));
  m_map_IDK2SCSSCC_00000816.insert(std::make_pair(0x00a8, &vctDeadkey_00000816_x00a8));
  m_map_IDK2SCSSCC_00000816.insert(std::make_pair(0x007e, &vctDeadkey_00000816_x007e));
  m_map_IDK2SCSSCC_00000816.insert(std::make_pair(0x005e, &vctDeadkey_00000816_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000081A, &m_map_IDK2SCSSCC_0000081A));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x02dd, &vctDeadkey_0000081A_x02dd));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x02c7, &vctDeadkey_0000081A_x02c7));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x005e, &vctDeadkey_0000081A_x005e));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x02d8, &vctDeadkey_0000081A_x02d8));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x00b0, &vctDeadkey_0000081A_x00b0));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x02db, &vctDeadkey_0000081A_x02db));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x02d9, &vctDeadkey_0000081A_x02d9));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x00b4, &vctDeadkey_0000081A_x00b4));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x00b8, &vctDeadkey_0000081A_x00b8));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x00a8, &vctDeadkey_0000081A_x00a8));
  m_map_IDK2SCSSCC_0000081A.insert(std::make_pair(0x201a, &vctDeadkey_0000081A_x201a));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000083B, &m_map_IDK2SCSSCC_0000083B));
  m_map_IDK2SCSSCC_0000083B.insert(std::make_pair(0x00a8, &vctDeadkey_0000083B_x00a8));
  m_map_IDK2SCSSCC_0000083B.insert(std::make_pair(0x005e, &vctDeadkey_0000083B_x005e));
  m_map_IDK2SCSSCC_0000083B.insert(std::make_pair(0x007e, &vctDeadkey_0000083B_x007e));
  m_map_IDK2SCSSCC_0000083B.insert(std::make_pair(0x00b4, &vctDeadkey_0000083B_x00b4));
  m_map_IDK2SCSSCC_0000083B.insert(std::make_pair(0x0060, &vctDeadkey_0000083B_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000C0C, &m_map_IDK2SCSSCC_00000C0C));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x00b4, &vctDeadkey_00000C0C_x00b4));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x00b8, &vctDeadkey_00000C0C_x00b8));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x005e, &vctDeadkey_00000C0C_x005e));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x0060, &vctDeadkey_00000C0C_x0060));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x007e, &vctDeadkey_00000C0C_x007e));
  m_map_IDK2SCSSCC_00000C0C.insert(std::make_pair(0x00a8, &vctDeadkey_00000C0C_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00000C1A, &m_map_IDK2SCSSCC_00000C1A));
  m_map_IDK2SCSSCC_00000C1A.insert(std::make_pair(0x0027, &vctDeadkey_00000C1A_x0027));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00001009, &m_map_IDK2SCSSCC_00001009));
  m_map_IDK2SCSSCC_00001009.insert(std::make_pair(0x00b4, &vctDeadkey_00001009_x00b4));
  m_map_IDK2SCSSCC_00001009.insert(std::make_pair(0x0060, &vctDeadkey_00001009_x0060));
  m_map_IDK2SCSSCC_00001009.insert(std::make_pair(0x005e, &vctDeadkey_00001009_x005e));
  m_map_IDK2SCSSCC_00001009.insert(std::make_pair(0x00b8, &vctDeadkey_00001009_x00b8));
  m_map_IDK2SCSSCC_00001009.insert(std::make_pair(0x00a8, &vctDeadkey_00001009_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000100C, &m_map_IDK2SCSSCC_0000100C));
  m_map_IDK2SCSSCC_0000100C.insert(std::make_pair(0x00a8, &vctDeadkey_0000100C_x00a8));
  m_map_IDK2SCSSCC_0000100C.insert(std::make_pair(0x00b4, &vctDeadkey_0000100C_x00b4));
  m_map_IDK2SCSSCC_0000100C.insert(std::make_pair(0x005e, &vctDeadkey_0000100C_x005e));
  m_map_IDK2SCSSCC_0000100C.insert(std::make_pair(0x0060, &vctDeadkey_0000100C_x0060));
  m_map_IDK2SCSSCC_0000100C.insert(std::make_pair(0x007e, &vctDeadkey_0000100C_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00001809, &m_map_IDK2SCSSCC_00001809));
  m_map_IDK2SCSSCC_00001809.insert(std::make_pair(0x00b4, &vctDeadkey_00001809_x00b4));
  m_map_IDK2SCSSCC_00001809.insert(std::make_pair(0x0060, &vctDeadkey_00001809_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0000201A, &m_map_IDK2SCSSCC_0000201A));
  m_map_IDK2SCSSCC_0000201A.insert(std::make_pair(0x0027, &vctDeadkey_0000201A_x0027));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010405, &m_map_IDK2SCSSCC_00010405));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x00b4, &vctDeadkey_00010405_x00b4));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x02c7, &vctDeadkey_00010405_x02c7));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x00b0, &vctDeadkey_00010405_x00b0));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x00a8, &vctDeadkey_00010405_x00a8));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x005e, &vctDeadkey_00010405_x005e));
  m_map_IDK2SCSSCC_00010405.insert(std::make_pair(0x02dd, &vctDeadkey_00010405_x02dd));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010407, &m_map_IDK2SCSSCC_00010407));
  m_map_IDK2SCSSCC_00010407.insert(std::make_pair(0x005e, &vctDeadkey_00010407_x005e));
  m_map_IDK2SCSSCC_00010407.insert(std::make_pair(0x00b4, &vctDeadkey_00010407_x00b4));
  m_map_IDK2SCSSCC_00010407.insert(std::make_pair(0x0060, &vctDeadkey_00010407_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010408, &m_map_IDK2SCSSCC_00010408));
  m_map_IDK2SCSSCC_00010408.insert(std::make_pair(0x0384, &vctDeadkey_00010408_x0384));
  m_map_IDK2SCSSCC_00010408.insert(std::make_pair(0x00a8, &vctDeadkey_00010408_x00a8));
  m_map_IDK2SCSSCC_00010408.insert(std::make_pair(0x0385, &vctDeadkey_00010408_x0385));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001040A, &m_map_IDK2SCSSCC_0001040A));
  m_map_IDK2SCSSCC_0001040A.insert(std::make_pair(0x0060, &vctDeadkey_0001040A_x0060));
  m_map_IDK2SCSSCC_0001040A.insert(std::make_pair(0x005e, &vctDeadkey_0001040A_x005e));
  m_map_IDK2SCSSCC_0001040A.insert(std::make_pair(0x00b4, &vctDeadkey_0001040A_x00b4));
  m_map_IDK2SCSSCC_0001040A.insert(std::make_pair(0x00a8, &vctDeadkey_0001040A_x00a8));
  m_map_IDK2SCSSCC_0001040A.insert(std::make_pair(0x007e, &vctDeadkey_0001040A_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010415, &m_map_IDK2SCSSCC_00010415));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x02dd, &vctDeadkey_00010415_x02dd));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x02c7, &vctDeadkey_00010415_x02c7));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x005e, &vctDeadkey_00010415_x005e));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x02d8, &vctDeadkey_00010415_x02d8));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x00b0, &vctDeadkey_00010415_x00b0));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x02db, &vctDeadkey_00010415_x02db));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x00b7, &vctDeadkey_00010415_x00b7));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x00b4, &vctDeadkey_00010415_x00b4));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x00a8, &vctDeadkey_00010415_x00a8));
  m_map_IDK2SCSSCC_00010415.insert(std::make_pair(0x00b8, &vctDeadkey_00010415_x00b8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010418, &m_map_IDK2SCSSCC_00010418));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x02dd, &vctDeadkey_00010418_x02dd));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x007e, &vctDeadkey_00010418_x007e));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x02c7, &vctDeadkey_00010418_x02c7));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x005e, &vctDeadkey_00010418_x005e));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x02d8, &vctDeadkey_00010418_x02d8));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x00b0, &vctDeadkey_00010418_x00b0));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x02db, &vctDeadkey_00010418_x02db));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x0060, &vctDeadkey_00010418_x0060));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x02d9, &vctDeadkey_00010418_x02d9));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x00b4, &vctDeadkey_00010418_x00b4));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x00b8, &vctDeadkey_00010418_x00b8));
  m_map_IDK2SCSSCC_00010418.insert(std::make_pair(0x00a8, &vctDeadkey_00010418_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001041B, &m_map_IDK2SCSSCC_0001041B));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x02dd, &vctDeadkey_0001041B_x02dd));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x02c7, &vctDeadkey_0001041B_x02c7));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x005e, &vctDeadkey_0001041B_x005e));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x02d8, &vctDeadkey_0001041B_x02d8));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x00b0, &vctDeadkey_0001041B_x00b0));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x02db, &vctDeadkey_0001041B_x02db));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x02d9, &vctDeadkey_0001041B_x02d9));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x00b4, &vctDeadkey_0001041B_x00b4));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x00b8, &vctDeadkey_0001041B_x00b8));
  m_map_IDK2SCSSCC_0001041B.insert(std::make_pair(0x00a8, &vctDeadkey_0001041B_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001041F, &m_map_IDK2SCSSCC_0001041F));
  m_map_IDK2SCSSCC_0001041F.insert(std::make_pair(0x005e, &vctDeadkey_0001041F_x005e));
  m_map_IDK2SCSSCC_0001041F.insert(std::make_pair(0x00a8, &vctDeadkey_0001041F_x00a8));
  m_map_IDK2SCSSCC_0001041F.insert(std::make_pair(0x007e, &vctDeadkey_0001041F_x007e));
  m_map_IDK2SCSSCC_0001041F.insert(std::make_pair(0x0060, &vctDeadkey_0001041F_x0060));
  m_map_IDK2SCSSCC_0001041F.insert(std::make_pair(0x00b4, &vctDeadkey_0001041F_x00b4));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00010426, &m_map_IDK2SCSSCC_00010426));
  m_map_IDK2SCSSCC_00010426.insert(std::make_pair(0x007e, &vctDeadkey_00010426_x007e));
  m_map_IDK2SCSSCC_00010426.insert(std::make_pair(0x00b0, &vctDeadkey_00010426_x00b0));
  m_map_IDK2SCSSCC_00010426.insert(std::make_pair(0x00b4, &vctDeadkey_00010426_x00b4));
  m_map_IDK2SCSSCC_00010426.insert(std::make_pair(0x00a8, &vctDeadkey_00010426_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001043B, &m_map_IDK2SCSSCC_0001043B));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x007e, &vctDeadkey_0001043B_x007e));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x02c7, &vctDeadkey_0001043B_x02c7));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x0060, &vctDeadkey_0001043B_x0060));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x00b4, &vctDeadkey_0001043B_x00b4));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x00a8, &vctDeadkey_0001043B_x00a8));
  m_map_IDK2SCSSCC_0001043B.insert(std::make_pair(0x005e, &vctDeadkey_0001043B_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001080C, &m_map_IDK2SCSSCC_0001080C));
  m_map_IDK2SCSSCC_0001080C.insert(std::make_pair(0x007e, &vctDeadkey_0001080C_x007e));
  m_map_IDK2SCSSCC_0001080C.insert(std::make_pair(0x00b4, &vctDeadkey_0001080C_x00b4));
  m_map_IDK2SCSSCC_0001080C.insert(std::make_pair(0x0060, &vctDeadkey_0001080C_x0060));
  m_map_IDK2SCSSCC_0001080C.insert(std::make_pair(0x005e, &vctDeadkey_0001080C_x005e));
  m_map_IDK2SCSSCC_0001080C.insert(std::make_pair(0x00a8, &vctDeadkey_0001080C_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0001083B, &m_map_IDK2SCSSCC_0001083B));
  m_map_IDK2SCSSCC_0001083B.insert(std::make_pair(0x00a8, &vctDeadkey_0001083B_x00a8));
  m_map_IDK2SCSSCC_0001083B.insert(std::make_pair(0x005e, &vctDeadkey_0001083B_x005e));
  m_map_IDK2SCSSCC_0001083B.insert(std::make_pair(0x007e, &vctDeadkey_0001083B_x007e));
  m_map_IDK2SCSSCC_0001083B.insert(std::make_pair(0x00b4, &vctDeadkey_0001083B_x00b4));
  m_map_IDK2SCSSCC_0001083B.insert(std::make_pair(0x0060, &vctDeadkey_0001083B_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00011009, &m_map_IDK2SCSSCC_00011009));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x00b4, &vctDeadkey_00011009_x00b4));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x02dd, &vctDeadkey_00011009_x02dd));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x00b8, &vctDeadkey_00011009_x00b8));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x02db, &vctDeadkey_00011009_x02db));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x00b7, &vctDeadkey_00011009_x00b7));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x02c7, &vctDeadkey_00011009_x02c7));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x005e, &vctDeadkey_00011009_x005e));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x00a8, &vctDeadkey_00011009_x00a8));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x0060, &vctDeadkey_00011009_x0060));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x02da, &vctDeadkey_00011009_x02da));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x02d8, &vctDeadkey_00011009_x02d8));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x007e, &vctDeadkey_00011009_x007e));
  m_map_IDK2SCSSCC_00011009.insert(std::make_pair(0x00af, &vctDeadkey_00011009_x00af));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00011809, &m_map_IDK2SCSSCC_00011809));
  m_map_IDK2SCSSCC_00011809.insert(std::make_pair(0x0027, &vctDeadkey_00011809_x0027));
  m_map_IDK2SCSSCC_00011809.insert(std::make_pair(0x0060, &vctDeadkey_00011809_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00020405, &m_map_IDK2SCSSCC_00020405));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x00b4, &vctDeadkey_00020405_x00b4));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x02c7, &vctDeadkey_00020405_x02c7));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x00b0, &vctDeadkey_00020405_x00b0));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x00a8, &vctDeadkey_00020405_x00a8));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x005e, &vctDeadkey_00020405_x005e));
  m_map_IDK2SCSSCC_00020405.insert(std::make_pair(0x02dd, &vctDeadkey_00020405_x02dd));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00020408, &m_map_IDK2SCSSCC_00020408));
  m_map_IDK2SCSSCC_00020408.insert(std::make_pair(0x0384, &vctDeadkey_00020408_x0384));
  m_map_IDK2SCSSCC_00020408.insert(std::make_pair(0x00a8, &vctDeadkey_00020408_x00a8));
  m_map_IDK2SCSSCC_00020408.insert(std::make_pair(0x0385, &vctDeadkey_00020408_x0385));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00020409, &m_map_IDK2SCSSCC_00020409));
  m_map_IDK2SCSSCC_00020409.insert(std::make_pair(0x005e, &vctDeadkey_00020409_x005e));
  m_map_IDK2SCSSCC_00020409.insert(std::make_pair(0x0060, &vctDeadkey_00020409_x0060));
  m_map_IDK2SCSSCC_00020409.insert(std::make_pair(0x007e, &vctDeadkey_00020409_x007e));
  m_map_IDK2SCSSCC_00020409.insert(std::make_pair(0x0027, &vctDeadkey_00020409_x0027));
  m_map_IDK2SCSSCC_00020409.insert(std::make_pair(0x0022, &vctDeadkey_00020409_x0022));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00020418, &m_map_IDK2SCSSCC_00020418));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x02dd, &vctDeadkey_00020418_x02dd));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x007e, &vctDeadkey_00020418_x007e));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x02c7, &vctDeadkey_00020418_x02c7));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x005e, &vctDeadkey_00020418_x005e));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x02d8, &vctDeadkey_00020418_x02d8));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x00b0, &vctDeadkey_00020418_x00b0));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x02db, &vctDeadkey_00020418_x02db));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x0060, &vctDeadkey_00020418_x0060));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x02d9, &vctDeadkey_00020418_x02d9));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x00b4, &vctDeadkey_00020418_x00b4));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x00b8, &vctDeadkey_00020418_x00b8));
  m_map_IDK2SCSSCC_00020418.insert(std::make_pair(0x00a8, &vctDeadkey_00020418_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0002042E, &m_map_IDK2SCSSCC_0002042E));
  m_map_IDK2SCSSCC_0002042E.insert(std::make_pair(0x005e, &vctDeadkey_0002042E_x005e));
  m_map_IDK2SCSSCC_0002042E.insert(std::make_pair(0x00b4, &vctDeadkey_0002042E_x00b4));
  m_map_IDK2SCSSCC_0002042E.insert(std::make_pair(0x0060, &vctDeadkey_0002042E_x0060));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x0002083B, &m_map_IDK2SCSSCC_0002083B));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x007e, &vctDeadkey_0002083B_x007e));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x02c7, &vctDeadkey_0002083B_x02c7));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x00b4, &vctDeadkey_0002083B_x00b4));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x0060, &vctDeadkey_0002083B_x0060));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x00a8, &vctDeadkey_0002083B_x00a8));
  m_map_IDK2SCSSCC_0002083B.insert(std::make_pair(0x005e, &vctDeadkey_0002083B_x005e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00030408, &m_map_IDK2SCSSCC_00030408));
  m_map_IDK2SCSSCC_00030408.insert(std::make_pair(0x0384, &vctDeadkey_00030408_x0384));
  m_map_IDK2SCSSCC_00030408.insert(std::make_pair(0x00a8, &vctDeadkey_00030408_x00a8));
  m_map_IDK2SCSSCC_00030408.insert(std::make_pair(0x0385, &vctDeadkey_00030408_x0385));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00040408, &m_map_IDK2SCSSCC_00040408));
  m_map_IDK2SCSSCC_00040408.insert(std::make_pair(0x00b4, &vctDeadkey_00040408_x00b4));
  m_map_IDK2SCSSCC_00040408.insert(std::make_pair(0x00a8, &vctDeadkey_00040408_x00a8));
  m_map_IDK2SCSSCC_00040408.insert(std::make_pair(0x0060, &vctDeadkey_00040408_x0060));
  m_map_IDK2SCSSCC_00040408.insert(std::make_pair(0x005e, &vctDeadkey_00040408_x005e));
  m_map_IDK2SCSSCC_00040408.insert(std::make_pair(0x007e, &vctDeadkey_00040408_x007e));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00050408, &m_map_IDK2SCSSCC_00050408));
  m_map_IDK2SCSSCC_00050408.insert(std::make_pair(0x005e, &vctDeadkey_00050408_x005e));
  m_map_IDK2SCSSCC_00050408.insert(std::make_pair(0x0060, &vctDeadkey_00050408_x0060));
  m_map_IDK2SCSSCC_00050408.insert(std::make_pair(0x007e, &vctDeadkey_00050408_x007e));
  m_map_IDK2SCSSCC_00050408.insert(std::make_pair(0x00b4, &vctDeadkey_00050408_x00b4));
  m_map_IDK2SCSSCC_00050408.insert(std::make_pair(0x00a8, &vctDeadkey_00050408_x00a8));

  m_mapIKLID2DK2SCSSCC.insert(std::make_pair(0x00060408, &m_map_IDK2SCSSCC_00060408));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x003b, &vctDeadkey_00060408_x003b));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x003a, &vctDeadkey_00060408_x003a));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1ffd, &vctDeadkey_00060408_x1ffd));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x0385, &vctDeadkey_00060408_x0385));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x0384, &vctDeadkey_00060408_x0384));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x00a8, &vctDeadkey_00060408_x00a8));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x003d, &vctDeadkey_00060408_x003d));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x002b, &vctDeadkey_00060408_x002b));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x00bd, &vctDeadkey_00060408_x00bd));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fdf, &vctDeadkey_00060408_x1fdf));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x002d, &vctDeadkey_00060408_x002d));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x005f, &vctDeadkey_00060408_x005f));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x002f, &vctDeadkey_00060408_x002f));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x003f, &vctDeadkey_00060408_x003f));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fbe, &vctDeadkey_00060408_x1fbe));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fde, &vctDeadkey_00060408_x1fde));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x007e, &vctDeadkey_00060408_x007e));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x0060, &vctDeadkey_00060408_x0060));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fc1, &vctDeadkey_00060408_x1fc1));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x005b, &vctDeadkey_00060408_x005b));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x007b, &vctDeadkey_00060408_x007b));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x00ab, &vctDeadkey_00060408_x00ab));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x005c, &vctDeadkey_00060408_x005c));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x007c, &vctDeadkey_00060408_x007c));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x00ac, &vctDeadkey_00060408_x00ac));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fdd, &vctDeadkey_00060408_x1fdd));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x005d, &vctDeadkey_00060408_x005d));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x007d, &vctDeadkey_00060408_x007d));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x00bb, &vctDeadkey_00060408_x00bb));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x0027, &vctDeadkey_00060408_x0027));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x0022, &vctDeadkey_00060408_x0022));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1fbf, &vctDeadkey_00060408_x1fbf));
  m_map_IDK2SCSSCC_00060408.insert(std::make_pair(0x1ffe, &vctDeadkey_00060408_x1ffe));

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\windows\pws_osk\pws_osk.cpp" 401
}

// Functor for for_each
struct Clear_Map {
  void operator()(std::pair<unsigned int, Map_IDK2SCSSCC *> p)
  {
    p.second->clear();
  }
};

static void ClearDeadKeyMaps()
{
  // Clear the deadkey_combined character maps
  for_each(m_mapIKLID2DK2SCSSCC.begin(), m_mapIKLID2DK2SCSSCC.end(), Clear_Map());
}
