
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\ColumnChooserLC.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

       

// CColumnChooserLC (Coloumn Chooser "Drag" ListCtrl)

                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\DropTarget.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

       

                  

/////////////////////////////////////////////////////////////////////////////
// COleDropWndTarget window

class CDropTarget : public COleDropTarget
{
  // Construction
public:
  CDropTarget();

  // Implementation
public:
  BOOL Initialize(CWnd* wnd);
  void Terminate();
  virtual ~CDropTarget();

  virtual DROPEFFECT OnDragEnter(CWnd* pWnd, COleDataObject* pDataObject,
    DWORD dwKeyState, CPoint point);
  virtual DROPEFFECT OnDragOver(CWnd* pWnd, COleDataObject* pDataObject, 
    DWORD dwKeyState, CPoint point);
  virtual void OnDragLeave(CWnd* pWnd);
  virtual BOOL OnDrop(CWnd* pWnd, COleDataObject* pDataObject, 
    DROPEFFECT dropEffect, CPoint point);

private:
  BOOL m_bRegistered;
};

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\ColumnChooserLC.h" 13
                      
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\DropSource.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

       

                  
// Drag and Drop source
// Note values to stop D&D between instances where data is of different lengths
enum {
  FROMCC = 0,       // From Column Chooser Dialog
  FROMHDR = 1,      // From ListCtrl Header
  FROMTREE_L = 2,   // From TreeCtrl - left  mouse D&D
  FROMTREE_R = 4,   // From TreeCtrl - right mouse D&D
  FROMTREE_RSC = 8  // From TreeCtrl - right mouse D&D - create Shortcut allowed
};

class CDataSource : protected COleDataSource
{
public:
  CDataSource();
  virtual ~CDataSource();
  virtual DROPEFFECT StartDragging(BYTE *szData, DWORD dwLength,
    CLIPFORMAT cpfmt, RECT* rClient, CPoint* ptMousePos);

protected:
  virtual void CompleteMove() {};

private:
};


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\ColumnChooserLC.h" 14

class CColumnChooserLC : public CListCtrl, public CDropTarget, public CDataSource
{
public:
  CColumnChooserLC();
  ~CColumnChooserLC();

  BOOL OnDrop(CWnd* pWnd, COleDataObject* pDataObject,
    DROPEFFECT dropEffect, CPoint point);
  DROPEFFECT OnDragEnter(CWnd* pWnd, COleDataObject* pDataObject,
    DWORD dwKeyState, CPoint point);
  DROPEFFECT OnDragOver(CWnd* pWnd, COleDataObject* pDataObject, 
    DWORD dwKeyState, CPoint point);

  static int  CCLCCompareProc(LPARAM , LPARAM , LPARAM );

public:
  void operator delete(void* p)
  { CDropTarget::operator delete(p); }

protected:
  virtual void CompleteMove();
  //{{AFX_MSG(CColumnChooserLC)
   void OnLButtonDown(UINT nFlags, CPoint point);
   void OnDestroy();
   BOOL OnEraseBkgnd(CDC* pDC);
  //}}AFX_MSG

  

private:
  CDataSource m_CCDataSource;
  CDropTarget m_CCDropTarget;
  CImageList* m_pDragImage;
  int m_iItem;
  // Clipboard format for Column Chooser Drag & Drop
  CLIPFORMAT m_ccddCPFID;
};
