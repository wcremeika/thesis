
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\Fonts.cpp" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
/// \file Fonts.cpp
//-----------------------------------------------------------------------------

                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\stdafx.h" 0
       

// stdafx.h : include file for standard system include files,
//  or project specific include files that are used frequently, but
//      are changed infrequently
//

                                                                          

                           // MFC core and standard components
                           // MFC extensions
                              
                           // MFC support for Windows Common Controls
      
                    
                   

                    
                   

//Don't show warning for automatic inline conversion
       
//Don't show warning for "identifier was truncated to '255' characters" in STL.
       

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\Fonts.cpp" 11

             
                     
                
                                   
      

                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\Fonts.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
       

// Fonts.h
//-----------------------------------------------------------------------------

class Fonts
{
public:
  static Fonts *GetInstance(); // singleton
  void DeleteInstance();

  void SetUpFont(CWnd *pWnd, CFont *pfont);

  CFont *GetCurrentFont() const {return m_pCurrentFont;}
  CFont *GetDragFixFont() const {return m_pDragFixFont;}
  CFont *GetPasswordFont() const {return m_pPasswordFont;}
  CFont *GetModifiedFont() const {return m_pModifiedFont;}

  COLORREF GetModified_Color() {return MODIFIED_COLOR;}

  void GetCurrentFont(LOGFONT *pLF);
  void SetCurrentFont(LOGFONT *pLF);
  void GetPasswordFont(LOGFONT *pLF);
  void SetPasswordFont(LOGFONT *pLF);
  void ApplyPasswordFont(CWnd* pLF);
  void GetDefaultPasswordFont(LOGFONT &lf);

  void ExtractFont(const CString& str, LOGFONT &lf);

  LONG Fonts::CalcHeight() const;
private:
  Fonts();
  ~Fonts() {}
  static Fonts *self; // singleton

  CFont *m_pCurrentFont;
  CFont *m_pModifiedFont;
  CFont *m_pDragFixFont;  // Fix for lack of text during drag!
  CFont *m_pPasswordFont;
  const COLORREF MODIFIED_COLOR;
};

//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\Fonts.cpp" 19
                            
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\core/PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
// some globally useful includes for non-Windows
                 
      

                
                  
      

// Following seems needed on Linux/cygwin
                                             
                   
      

// stop MS VC++ 6 and earlier being quite so pedantic
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

// PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN can be specified on the 
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

// 
                          
      
      

                                                           
      
      

                                                         
      
      

// Following from libtomcrypt, for twofish & SHA256
/* Controls endianess and size of registers.  Leave uncommented to get platform neutral [slower] code 
* 
* Note: in order to use the optimized macros your platform must support unaligned 32 and 64 bit read/writes.
* The x86 platforms allow this but some others [ARM for instance] do not.  On those platforms you **MUST**
* use the portable [slower] macros.
*/

/* detect x86-32 machines somewhat */
                                                                                                                                                                                 
                     
                        
      

/* detects MIPS R5900 processors (PS2) */
                                                                                                                        
                     
                        
      

/* detect amd64 */
                                                                
                     
                        
      

/* #define ENDIAN_LITTLE */
/* #define ENDIAN_BIG */

/* #define ENDIAN_32BITWORD */
/* #define ENDIAN_64BITWORD */

                                                                                                                
      
      

                                                    
                      
      

/* fix for MSVC ...evil! */
               
                            
                                 
     
                           
typedef uint64_t ulong64;
      

/* this is the "32-bit at least" data type 
* Re-define it to suit your platform but it must be at least 32-bits 
*/
                       
                         
     
typedef unsigned long ulong32;
      

/* ---- HELPER MACROS ---- */
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





       /* ENDIAN_NEUTRAL */

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

       /* ENDIAN_LITTLE */

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    





                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
       /* ENDIAN_BIG */

                                                                                                                         



/* 32-bit Rotates */
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

/* rotates the hard way */
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


/* 64-bit Rotates */
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

      /* Not x86_64  */

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

/* extract a byte portably */
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\Windows\Fonts.cpp" 20

Fonts *Fonts::self = NULL;

/*
  Only the following set:
    lf.lfHeight = -16;
    lf.lfWeight = FW_NORMAL;
    lf.lfPitchAndFamily = FF_MODERN | FIXED_PITCH;
    lf.lfFaceName = L"Courier"; // max size = LF_FACESIZE (32)
*/
static LOGFONT dfltPasswordLogfont = {
  -16, 0, 0, 0, FW_NORMAL, 0, 0, 0, 0, 0, 0, 0, FF_MODERN | FIXED_PITCH,
  L'C', L'o', L'u', L'r', L'i', L'e', L'r', L'\0'};

// Bug in MS TreeCtrl and CreateDragImage.  During Drag, it doesn't show
// the entry's text as well as the drag image if the font is not MS Sans Serif !!!!
static LOGFONT DragFixLogfont = {
  -16, 0, 0, 0, FW_NORMAL, 0, 0, 0, 0, 0, 0, 0, DEFAULT_PITCH | FF_SWISS,
  L'M', L'S', L' ', L'S', L'a', L'n', L's', L' ', L'S', L'e', L'r', L'i', L'f', L'\0'};

Fonts *Fonts::GetInstance()
{
  if (self == NULL) {
    self = new Fonts();
  }
  return self;
}

void Fonts::DeleteInstance()
{
  if (m_pCurrentFont != NULL) {
    m_pCurrentFont->DeleteObject();
    delete m_pCurrentFont;
    m_pCurrentFont = NULL;
  }
  if (m_pModifiedFont != NULL) {
    m_pModifiedFont->DeleteObject();
    delete m_pModifiedFont;
    m_pModifiedFont = NULL;
  }
  if (m_pDragFixFont != NULL) {
    m_pDragFixFont->DeleteObject();
    delete m_pDragFixFont;
    m_pDragFixFont = NULL;
  }
  if (m_pPasswordFont != NULL) {
    m_pPasswordFont->DeleteObject();
    delete m_pPasswordFont;
    m_pPasswordFont = NULL;
  }
  delete self;
  self = NULL;
}

Fonts::Fonts() : MODIFIED_COLOR(RGB(0, 0, 128))
{
  m_pCurrentFont = new CFont;
  m_pModifiedFont = new CFont;
  m_pDragFixFont = new CFont;
  m_pPasswordFont = new CFont;
}

void Fonts::GetCurrentFont(LOGFONT *pLF)
{
  ;
  if (pLF == NULL || m_pCurrentFont == NULL)
    return;

  m_pCurrentFont->GetLogFont(pLF);
}

void Fonts::SetCurrentFont(LOGFONT *pLF)
{
  ;
  if (pLF == NULL)
    return;

  if (m_pCurrentFont == NULL) {
    m_pCurrentFont = new CFont;
  } else {
    m_pCurrentFont->DeleteObject();
  }
  m_pCurrentFont->CreateFontIndirect(pLF);
}

void Fonts::GetPasswordFont(LOGFONT *pLF)
{
  ;
  if (pLF == NULL || m_pPasswordFont == NULL)
    return;

  m_pPasswordFont->GetLogFont(pLF);
}

void Fonts::GetDefaultPasswordFont(LOGFONT &lf)
{
  memcpy(&lf, &dfltPasswordLogfont, sizeof(LOGFONT));
}

void Fonts::SetPasswordFont(LOGFONT *pLF)
{
  if (m_pPasswordFont == NULL) {
    m_pPasswordFont = new CFont;
  } else {
    m_pPasswordFont->DeleteObject();
  }
  m_pPasswordFont->CreateFontIndirect(pLF == NULL ? &dfltPasswordLogfont : pLF);
}

void Fonts::ApplyPasswordFont(CWnd* pDlgItem)
{
  ;
  if (pDlgItem == NULL)
    return;

  if (m_pPasswordFont == NULL) {
    m_pPasswordFont = new CFont;
    // Initialize a CFont object with the characteristics given
    // in a LOGFONT structure.
    m_pPasswordFont->CreateFontIndirect(&dfltPasswordLogfont);
  }

  pDlgItem->SetFont(m_pPasswordFont);
}

static CString GetToken(CString& str, LPCWSTR c)
{
  // helper function for ExtractFont()
  int pos = str.Find(c);
  CString token = str.Left(pos);
  str = str.Mid(pos + 1);
  return token;
}

void Fonts::ExtractFont(const CString &str, LOGFONT &lf)
{
  CString s(str);
  SecureZeroMemory(&lf, sizeof(lf));
  lf.lfHeight      = _wtol((LPCWSTR)GetToken(s, L","));
  lf.lfWidth       = _wtol((LPCWSTR)GetToken(s, L","));
  lf.lfEscapement  = _wtol((LPCWSTR)GetToken(s, L","));
  lf.lfOrientation = _wtol((LPCWSTR)GetToken(s, L","));
  lf.lfWeight      = _wtol((LPCWSTR)GetToken(s, L","));

       
       
  lf.lfItalic         = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfUnderline      = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfStrikeOut      = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfCharSet        = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfOutPrecision   = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfClipPrecision  = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfQuality        = _wtoi((LPCWSTR)GetToken(s, L","));
  lf.lfPitchAndFamily = _wtoi((LPCWSTR)GetToken(s, L","));
       

                      
                                          
     
  wcscpy(lf.lfFaceName, s);
        
}


void Fonts::SetUpFont(CWnd *pWnd, CFont *pfont)
{
  // Set main font
  m_pCurrentFont = pfont;
  pWnd->SetFont(pfont);

  // Set up special fonts
  // Remove old fonts
  m_pModifiedFont->DeleteObject();
  m_pDragFixFont->DeleteObject();
  
  // Get current font
  LOGFONT lf;
  pfont->GetLogFont(&lf);

  // Make it italic and create "modified" font
  lf.lfItalic = TRUE;
  m_pModifiedFont->CreateFontIndirect(&lf);
  
  // Make DragFix font same height as user selected font
  DragFixLogfont.lfHeight = lf.lfHeight;
  // Create DragFix font
  m_pDragFixFont->CreateFontIndirect(&DragFixLogfont);
}

LONG Fonts::CalcHeight() const
{
  //Get max height from current/modified/password font
  TEXTMETRIC tm;
  HDC hDC = ::GetDC(NULL);
  
  HFONT hFontOld = (HFONT)SelectObject(hDC, m_pCurrentFont->GetSafeHandle());
  //Current
  GetTextMetrics(hDC, &tm);
  LONG height = tm.tmHeight + tm.tmExternalLeading;
  //Modified
  SelectObject(hDC, m_pModifiedFont->GetSafeHandle());
  GetTextMetrics(hDC, &tm);
  if (height < tm.tmHeight + tm.tmExternalLeading)
      height = tm.tmHeight + tm.tmExternalLeading;
  //Password
  SelectObject(hDC, m_pPasswordFont->GetSafeHandle());
  GetTextMetrics(hDC, &tm);
  if (height < tm.tmHeight + tm.tmExternalLeading)
      height = tm.tmHeight + tm.tmExternalLeading;
  SelectObject(hDC, hFontOld);
  ::ReleaseDC(NULL, hDC);
  return height;
}
