
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.cpp" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

/** \file about.cpp
*
*/
// For compilers that support precompilation, includes "wx/wx.h".
                     

                   
       
      

                  
                 
      

                     
                       

                                
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.h" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

                                   
                                   


                               
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// ItemData.h
//-----------------------------------------------------------------------------

                    
                    

                
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                
                

// Util.h
//-----------------------------------------------------------------------------

                  
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\sha256.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// sha256.h
// SHA256 for PasswordSafe, based on LibTomCrypt by
// Tom St Denis, tomstdenis@iahu.ca, http://libtomcrypt.org
//-----------------------------------------------------------------------------
                  
                  

                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

/**
* Silly wrapper to abstract away the difference between a Unicode
* (wchar_t) and non-Unicode (char) std::string, as well as
* Linux/Windows portability.
*
*/

                
/*
 * _S is defined same as m'soft's _T, just to avoid collisions or
 * lousy include order dependencies.
 */

// Sometimes we need specific ones irrespective of in Unicode mode or not.
// In particular, the underlying format of most XML is Unicode.
typedef std::wstring wstringT;
typedef std::string  cstringT;

              
                             
                      
                    
     
typedef std::string stringT;
typedef char charT;
               
      

                               
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\../core/PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
// some globally useful includes for non-Windows
                 
      

                
                  
      

// Following seems needed on Linux/cygwin
                                             
                   
      

// stop MS VC++ 6 and earlier being quite so pedantic
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

// PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN can be specified on the 
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

// 
                          
      
      

                                                           
      
      

                                                         
      
      

// Following from libtomcrypt, for twofish & SHA256
/* Controls endianess and size of registers.  Leave uncommented to get platform neutral [slower] code 
* 
* Note: in order to use the optimized macros your platform must support unaligned 32 and 64 bit read/writes.
* The x86 platforms allow this but some others [ARM for instance] do not.  On those platforms you **MUST**
* use the portable [slower] macros.
*/

/* detect x86-32 machines somewhat */
                                                                                                                                                                                 
                     
                        
      

/* detects MIPS R5900 processors (PS2) */
                                                                                                                        
                     
                        
      

/* detect amd64 */
                                                                
                     
                        
      

/* #define ENDIAN_LITTLE */
/* #define ENDIAN_BIG */

/* #define ENDIAN_32BITWORD */
/* #define ENDIAN_64BITWORD */

                                                                                                                
      
      

                                                    
                      
      

/* fix for MSVC ...evil! */
               
                            
                                 
     
                           
typedef uint64_t ulong64;
      

/* this is the "32-bit at least" data type 
* Re-define it to suit your platform but it must be at least 32-bits 
*/
                       
                         
     
typedef unsigned long ulong32;
      

/* ---- HELPER MACROS ---- */
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





       /* ENDIAN_NEUTRAL */

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

       /* ENDIAN_LITTLE */

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
       /* ENDIAN_BIG */

                                                                                                                         



/* 32-bit Rotates */
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

/* rotates the hard way */
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


/* 64-bit Rotates */
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

      /* Not x86_64  */

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

/* extract a byte portably */
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 46 // for afxwin.h, and endian macros

// Hotkey values. Internal PWS values - need to convert to either MFC or wxWidgets
// values in the GUI when retrieving these from the preferences and aso back to PWS
// internal values before giving them to PWSPrefs for saving in the XML config file.
                                
                                
                                
                                
 
// wxWidgets Only - Not used in Windows MFC
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

      /* !defined(_WIN32) */
                  
                     
typedef int8_t  int8;
typedef int16_t int16;
typedef int32_t int32;
typedef int64_t int64;

typedef uint8_t  uint8;
typedef uint16_t uint16;
typedef uint32_t uint32;
typedef uint64_t uint64;

typedef int errno_t;

              
          
                    
      
                      
     
               
typedef char TCHAR;
typedef wchar_t WCHAR;
       /* UNICODE */

// mimic Microsoft conventional typdefs:
typedef TCHAR *LPTSTR;
typedef const TCHAR *LPCTSTR;
typedef bool BOOL;
typedef unsigned char BYTE;
typedef uint16_t WORD;
typedef uint32_t DWORD;
typedef int32_t LONG;
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
typedef int32_t LPARAM;
typedef unsigned int UINT;
typedef int HANDLE;
                                       

// assorted conveniences:
                           
                                                      
                           
            
                 
      
             
                   
      

/* These two files require the above definitions */
                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\debug.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                  
                  

                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\debug.h" 14
             
                   
      

namespace pws_os {
  // MFC TRACE equivalent in MFC, non-MFC Windows and non-Windows
  void Trace(LPCTSTR lpszFormat, ...);
  void Trace0(LPCTSTR lpszFormat);

  // Opens a messagebox or write to debugger window 
  // with text of last system error, titlebar
  // is csFunction
  void IssueError(const stringT &csFunction, bool bMsgBox = true);

  /*
    Outputs a printable version of memory dump (hex + ascii)

    parameters:
      pmemory   - pointer to memory to format
      length    - length memory to format in bytes
      cs_prefix - prefix each line with this
      maxnum    - maximum hex characters dumped per line
  */
  void HexDump(unsigned char *pmemory, const int &length,
               const stringT &cs_prefix = "", const int &maxnum = 16);
}

       /* _OSDEBUG_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 224
                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\linux/pws_time.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                    
                    

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\linux\../typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\linux/pws_time.h" 13
                  
typedef time_t __time32_t;
typedef uint64_t __time64_t;

extern struct tm *gmtime64_r(const __time64_t *timep, struct tm *result);

namespace pws_os {
  /**
   * Workaround the lack of a wchar_t version of asctime()
   */
  extern int asctime(TCHAR *buf, size_t N, const struct tm *tm);
}

       /* __PWS_TIME_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 225
       /* _WIN32 */

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\sha256.h" 21
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
                                                
                  
      

                
                   
      

                                         
                                             
                   
      

                                                     
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

                                                                
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

   
                          
      
      

                                                           
      
      

                                                         
      
      

                                                   
                                                                                                      
  
                                                                                                            
                                                                                                          
                                   
  

                                     
                                                                                                                                                                                 
                     
                        
      

                                         
                                                                                                                        
                     
                        
      

                  
                                                                
                     
                        
      

                           
                        

                              
                              

                                                                                                                
      
      

                                                    
                      
      

                           
               
                            
                                 
     
                           
                         
      

                                           
                                                                     
  
                       
                         
     
                              
      

                             
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                           

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             





                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         





                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

                          

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
                       

                                                                                                                         



                    
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

                          
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


                    
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

                       

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

                             
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\sha256.h" 22

class SHA256
{
public:
  enum {HASHLEN = 32, BLOCKSIZE = 64};
  SHA256();
  ~SHA256();
  void Update(const unsigned char *in, size_t inlen);
  void Final(unsigned char digest[HASHLEN]);

private:
  ulong64 length;
  size_t curlen;
  ulong32 state[8];
  unsigned char buf[BLOCKSIZE];
};

       /* __SHA256_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 18
                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

/**
 * \file StringX.h
 *
 * STL-based implementation of secure strings.
 * Like std::string in all respects, except that
 * memory is scrubbed before being returned to system.
 *
 */

                
                
                
                  // for ptrdiff_t
                  // for malloc
                  // for memset

                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 33
                         
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\./PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
                                                
                  
      

                
                   
      

                                         
                                             
                   
      

                                                     
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

                                                                
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

   
                          
      
      

                                                           
      
      

                                                         
      
      

                                                   
                                                                                                      
  
                                                                                                            
                                                                                                          
                                   
  

                                     
                                                                                                                                                                                 
                     
                        
      

                                         
                                                                                                                        
                     
                        
      

                  
                                                                
                     
                        
      

                           
                        

                              
                              

                                                                                                                
      
      

                                                    
                      
      

                           
               
                            
                                 
     
                           
                         
      

                                           
                                                                     
  
                       
                         
     
                              
      

                             
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                           

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

                          

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
                       

                                                                                                                         



                    
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

                          
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


                    
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

                       

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

                             
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 34

namespace S_Alloc
{
  template <typename T>
    class SecureAlloc
    {
    public:
      // Typedefs
      typedef size_t    size_type;
      typedef ptrdiff_t difference_type;
      typedef T*        pointer;
      typedef const T*  const_pointer;
      typedef T&        reference;
      typedef const T&  const_reference;
      typedef T         value_type;

    public:
      // Constructors
      SecureAlloc() throw() {}
      SecureAlloc(const SecureAlloc&) throw() {}

      template <typename U>
        SecureAlloc(const SecureAlloc<U>&) throw() {}

      SecureAlloc& operator=(const SecureAlloc&) {
        return *this;
      }

      // Destructor
      ~SecureAlloc() throw() {}

      // Utility functions
      pointer address(reference r) const {
        return (&r);
      }

      const_pointer address(const_reference c) const {
        return (&c);
      }

      size_type max_size() const {
        return (std::numeric_limits<size_t>::max)() / sizeof(T);
      }

      // In-place construction
      void construct(pointer p, const_reference c) {
        // placement new operator
        new(reinterpret_cast<void *>(p)) T(c);
      }

      // In-place destruction
      void destroy(pointer p) const {
        // call destructor directly
        (p)->T::~T();
      }

      // Rebind to allocators of other types
      template <typename U>
        struct rebind {
          typedef SecureAlloc<U> other;
        };

      // Allocate raw memory
      pointer allocate(size_type n, const_pointer hint = 0) {
        (void)(hint);
        pointer p = static_cast<pointer>(std::malloc(n * sizeof(T)));
        // pws_os::Trace(_T("Securely Allocated %d bytes at %p\n"), n * sizeof(T), p);
        if (p == NULL)
          throw std::bad_alloc();
        return p;
      }

      // Free raw memory.
      // Note that C++ standard defines this function as:
      //   deallocate(pointer p, size_type n).
      void deallocate(pointer p, size_type n) {
        // assert(p != NULL);
        // The standard states that p must not be NULL. However, some
        // STL implementations fail this requirement, so the check must
        // be made here.
        if (p == NULL)
          return;

        if (n > 0) {
          const size_type N = n * sizeof(T);
          std::memset(p, 0x55, N);
          std::memset(p, 0xAA, N);
          std::memset(p,    0, N);
        }
        std::free(p);
      }

    private:
      // No data

    }; // end of SecureAlloc

  // Comparison
  template <typename T1, typename T2>
    bool operator==(const SecureAlloc<T1>&,
                    const SecureAlloc<T2>&) throw() {
    return true;
  }

  template <typename T1, typename T2>
    bool operator!=(const SecureAlloc<T1>&,
                    const SecureAlloc<T2>&) throw() {
    return false;
  }

} // end namespace S_Alloc

              
                                  
                                                    
                                                                  
     
typedef std::basic_string<char,
                          std::char_traits<char>,
                          S_Alloc::SecureAlloc<char> > StringX;
      

// Following should really be StringX member functions, but there's no 
// elegant way of extending a template class without public inheritance, 
// including duplicating large parts of the interface
//
// Since we need the for stringT as well, we might as well templatize them
// (In for a dime, in for a $).

template<class T> int CompareNoCase(const T &s1, const T &s2);
template<class T> int CompareCase(const T &s1, const T &s2);
template<class T> void ToLower(T &s);
template<class T> void ToUpper(T &s);
template<class T> T &TrimRight(T &s, const TCHAR *set = NULL);
template<class T> T &TrimLeft(T &s, const TCHAR *set = NULL);
template<class T> T &Trim(T &s, const TCHAR *set = NULL);
template<class T> void EmptyIfOnlyWhiteSpace(T &s);
template<class T> int Replace(T &s, TCHAR from, TCHAR to);
template<class T> int Replace(T &s, const T &from, const T &to);
template<class T> int Remove(T &s, TCHAR c);
template<class T> void Format(T &s, const TCHAR *fmt, ...);
template<class T> void Format(T &s, int fmt, ...);
template<class T> void LoadAString(T &s, int id);

inline stringT stringx2std(const StringX &str) { return stringT(str.data(), str.size()); }
inline StringX std2stringx(const stringT& str)   { return StringX(str.data(), str.size()); }

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 19
                
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Fish.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// Fish.h
                
                

/**
* Fish is an abstract base class for BlowFish and TwoFish
* (and for any block cipher, but it's cooler to call it "Fish"
* rather than "Cipher"...)
*/

class Fish
{
public:
  Fish() {}
  virtual ~Fish() {}
  virtual unsigned int GetBlockSize() const = 0;
  // Following encrypt/decrypt a single block
  // (blocksize dependent on cipher)
  virtual void Encrypt(const unsigned char *pt, unsigned char *ct) = 0;
  virtual void Decrypt(const unsigned char *ct, unsigned char *pt) = 0;
};

       /* __FISH_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 20
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PwsPlatform.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// pws_platform.h
//------------------------------------------------------------------------------
//
// This header file exists to determine, at compile time, which target we're
// compiling to and to make the appropriate #defines and #includes.
//
// The following macros are defined:
//
//    PWS_BIG_ENDIAN    - Defined only if the target CPU is big-endian.
//    PWS_LITTLE_ENDIAN - Defined only if the target CPU is little-endian.
//    PWS_PLATFORM      - A string, the target platform, e.g. "Pocket PC".
//    PWS_PLATFORM_EX   - A string, the target platform, e.g. "Pocket PC 2000".
//    POCKET_PC         - Defined only if target is Pocket PC 2000 or later.
//    POCKET_PC_VER     - Defined only if target is Pocket PC 2000 or later.
//
// Notes:
//
// 1. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN are mutually exclusive.
// 2. PWS_BIG_ENDIAN and PWS_LITTLE_ENDIAN may be defined on the complier
//    command line but checks are made to ensure that one and only one is
//    defined.
//
// Supported Configurations:
// -------------------------
//
// Pocket PC:
//
//    2000 ARM
//    2000 MIPS
//    2000 SH3
//    2000 x86 Emulator
//    2002 ARM
//    2002 x86 Emulator
//    2003 ARM (untested)
//    2003 x86 Emulator (untested)
//
// Windows
//
//    Win32 X86
//    Win32 and Win64 x64
//
// Linux - work in progress
// Cygwin - work in progress

                       
                       

                                                             
                                                  
                                 
     
                                                
                  
      

                
                   
      

                                         
                                             
                   
      

                                                     
                                                                             
       
      

                   
                

                   
                 
                      
      
                    
                         
      
      

                                                                
                           
                     
                      
      

                              
                        
                         
      

                            
                                                 
                                                 
                                                 
                              
                                
                                        
                          
                 
                                                           
                                 
                         
                                     
                         
                                   
                         
                                                                      
                         
      
      
                                                 
                                                 
                                                 
                                  
                                
                                        
                          
                 
                                                           
                                 
                         
                                                                      
                         
      
      
     
      
      
                                                 
                                                 
                                                 
                     
                                                                                                           
                              
                         
      
                                                 
                                                 
                                                 
                      
                            
                                                                 
                         
      
                                                 
                                                  
                                                 
                         
                             
                                          
                         
       
                                             
                                                                                          
                          
                         
                                                                                       
                                                                                    
                   
                                           
                              
     
                              
      
                                                                       
                                                           
                         
     
                      
      
                                                 
                                                 
                                                 
      

   
                          
      
      

                                                           
      
      

                                                         
      
      

                                                   
                                                                                                      
  
                                                                                                            
                                                                                                          
                                   
  

                                     
                                                                                                                                                                                 
                     
                        
      

                                         
                                                                                                                        
                     
                        
      

                  
                                                                
                     
                        
      

                           
                        

                              
                              

                                                                                                                
      
      

                                                    
                      
      

                           
               
                            
                                 
     
                           
                         
      

                                           
                                                                     
  
                       
                         
     
                              
      

                             
                     

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             





                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   





                                                                                                                                                                                                                                                                                                                                                                                                                                                





                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                           

                    

                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                





                              

                                                                              


                                                                      


                                                                        


                                                     


                             

                          

                 
                                                                                                                                                                                                                                                                                                           



                                                                                                                                                                                                                                                             











                                                                                                                                                                                                                                                                                                                                                                                                                                                  





                       

                                                                              


                                                   








                                                                                                                                                                                                                                                                                                                                                                                                                                                 





                              

                                                                              


                                                                      


                                                                        


                                                     


                             
                       

                                                                                                                         



                    
                     

                       
                   
       
                            
                            
                             
                             

                                                                                                                   

                                                
 
                     
                
                         
              
 

                                                
 
                     
                
                         
              
 

                   

                                                       
 
                   
                
                         
              
 

                                                       
 
                   
                
                         
              
 

     

                
                

      

     

                          
                                                                                                                                                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                    
                                                                                                                                                                                                    

      


                    
                                                                    

                                                            
 
                    
                
                         
              
 

                                                            
 
                    
                
                         
              
 

                   

                                                                   
 
                  
                
                         
              
 

                                                                   
 
                  
                
                         
              
 

                       

                  
                  

      

                       

                                                                                                                                                                       



                                                                                                                                                                                           



                                                                                                                                                                        



                                                                                                                                                                                            



      

          
          
                                       
                                       

                             
               
                                                                 
     
                                             
         

                                                           

                                          
                                           
      

       /* __PWSPLATFORM_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 21
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\UTF8Conv.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// UTF8Conv.h
//-----------------------------------------------------------------------------
                    
                    

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\UTF8Conv.h" 17

/** \file
* A utility class to convert between UTF-8 and StringX
*/

class CUTF8Conv
{
public:
  CUTF8Conv(bool cp_acp=false) : m_utf8(NULL), m_utf8Len(0), m_utf8MaxLen(0),
                                 m_wc(NULL), m_wcMaxLen(0), m_tmp(NULL),
                                 m_tmpMaxLen(0), m_cp_acp(cp_acp) {}
  ~CUTF8Conv();
  // In following, char * is managed internally. Caller must NOT
  // allocate or deallocate it!
  bool ToUTF8(const StringX &data, const unsigned char *&utf8, size_t &utf8Len);
  // In following, char * is managed by caller.
  bool FromUTF8(const unsigned char *utf8, size_t utf8Len, StringX &data);

private:
  CUTF8Conv(const CUTF8Conv &); // not supported
  CUTF8Conv &operator=(const CUTF8Conv &); // ditto
  // following pointers allocated dynamically and monotically increase in size
  // for efficiency w/o arbitrary restrictions
  // deallocated by d'tor
  unsigned char *m_utf8;
  size_t m_utf8Len;
  size_t m_utf8MaxLen;
  wchar_t *m_wc;
  size_t m_wcMaxLen;
  unsigned char *m_tmp;
  size_t m_tmpMaxLen;
  bool m_cp_acp; // if set, FromUTF8 uses CP_ACP, instead UTF8 encoding
};

       /* __UTF8CONV_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 22

                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/debug.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                  
                  

                     
             
                   
      

                  
                                                                 
                                      
                                  

                                                    
                                             
                  
                                                                  

    
                                                            

               
                                             
                                                  
                                            
                                                        
    
                                                         
                                                                          
 

       /* _OSDEBUG_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 24
                          
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 25
                     
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/mem.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
               
               
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\..\os\typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\../os/mem.h" 12

namespace pws_os {
  /**
   * platform-indepenedent functions to lock and unlock memory
   * in RAM. Useful to prevent sensitive stuff from being swapped
   * to a snoopable swap file/device
   */
  extern bool mlock(void *p, size_t size);
  extern bool munlock(void *p, size_t size);

  /**
   * Following are wrappers for Window's 'protect memory' functions,
   * that use an unspecified algorithm with an unspecified key
   * to 'protect' memory in user space. FWIW.
   */
  extern bool mcryptProtect(void *p, size_t size);
  extern bool mcryptUnprotect(void *p, size_t size);
}
       /* __MEM_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Util.h" 26

                 
                  

                     
                    

                       

//Use non-standard dash (ANSI decimal 173) for separation
                          
                              
                             

//Version defines
             
             

extern void trashMemory(void *buffer, size_t length);
extern void trashMemory(LPTSTR buffer, size_t length);
extern void burnStack(unsigned long len); // borrowed from libtomcrypt

extern void ConvertString(const StringX &text,
                          unsigned char *&txt, size_t &txtlen);

extern void GenRandhash(const StringX &passkey,
                        const unsigned char *m_randstuff,
                        unsigned char *m_randhash);

// buffer is allocated by _readcbc, *** delete[] is responsibility of caller ***
extern size_t _readcbc(FILE *fp, unsigned char * &buffer,
                       size_t &buffer_len,
                       unsigned char &type, Fish *Algorithm,
                       unsigned char *cbcbuffer,
                       const unsigned char *TERMINAL_BLOCK = NULL, 
                       size_t file_len = 0);

// _writecbc will throw(EIO) iff a write fail occurs!
extern size_t _writecbc(FILE *fp, const unsigned char *buffer, size_t length,
                        unsigned char type, Fish *Algorithm,
                        unsigned char *cbcbuffer);

/*
* Get an integer that is stored in little-endian format
*/
inline int getInt32(const unsigned char buf[4])
{
  assert(sizeof(int32) == 4);
                              
                   
                                                                                                          
   
                                                                                              
   
      
                                             
                             
                   
                                                                                     
                                   
                                                                                                          
   
                                                                                              
   
      
                                                                     
     
      
      
}

/*
* Store an integer that is stored in little-endian format
*/
inline void putInt32(unsigned char buf[4], const int val )
{
  assert(sizeof(int32) == 4);
                              
                                        
                   
                                                                                                   
   
                                                                                              
   
      
                             
                      
                             
                              
                              
                   
                                                                                  
                                   
                                                                                  
   
                                                                                              
   
      
     
      
      
}

                                         
                                                              
                                                                                             
      

namespace PWSUtil {
  // namespace of common utility functions

  // For Windows implementation, hide Unicode abstraction,
  // and use secure versions (_s) when available
  void strCopy(LPTSTR target, size_t tcount, const LPCTSTR source, size_t scount);
  size_t strLength(const LPCTSTR str);
  // Time conversion result formats:
  enum TMC {TMC_ASC_UNKNOWN, TMC_ASC_NULL, TMC_EXPORT_IMPORT, TMC_XML,
            TMC_LOCALE, TMC_LOCALE_DATE_ONLY};
  StringX ConvertToDateTimeString(const time_t &t, TMC result_format);
  stringT GetNewFileName(const stringT &oldfilename, const stringT &newExtn);
  extern const TCHAR *UNKNOWN_ASC_TIME_STR, *UNKNOWN_XML_TIME_STR;
  void GetTimeStamp(stringT &sTimeStamp, const bool bShort = false);
  stringT GetTimeStamp(const bool bShort = false);
  stringT Base64Encode(const BYTE *inData, size_t len);
  void Base64Decode(const StringX &inString, BYTE* &outData, size_t &out_len);
  StringX NormalizeTTT(const StringX &in, size_t maxlen = 64);
  bool WriteXMLField(std::ostream &os, const char *fname,
                     const StringX &value, CUTF8Conv &utf8conv,
                     const char *tabs = "\t\t");
  std::string GetXMLTime(int indent, const char *name,
                         time_t t, CUTF8Conv &utf8conv);

  StringX DeDupString(StringX &in_string);
  stringT GetSafeXMLString(const StringX &sxInString);
}

///////////////////////////////////////////////////////
// Following two templates lets us use the two types
// of iterators in a common (templatized) function when 
// all we need to do is to access the underlying value
template <typename PairAssociativeContainer>
class get_second {
  public:
    typedef typename PairAssociativeContainer::mapped_type mapped_type;
    typedef typename PairAssociativeContainer::const_iterator const_iterator;
    const mapped_type& operator()(const_iterator val) { return val->second; }
};

template <typename SequenceContainer>
class dereference {
  public:
    typedef typename SequenceContainer::value_type value_type;
    typedef typename SequenceContainer::const_iterator const_iterator;
    const value_type& operator()(const_iterator itr) { return *itr; }
};

extern int GetStringBufSize(const TCHAR *fmt, va_list args);
       /* __UTIL_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 18
                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Match.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                 
                 

// Match.h
//-----------------------------------------------------------------------------

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Match.h" 19
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\ItemData.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// ItemData.h
//-----------------------------------------------------------------------------

                    
                    

                 
                  
                      
                     
                     
                    
                    

                               
                 
                 
                 
              

                                              
                                                             

                                                                               

  
                                                                         
 
                                                                    
                                                                        
                                                                    
                                
 
                                                                         
                                                                       
                                  
 
                                                                       
                                      
  

               
              

                      
 
                                                 
                      
                               
                                                                    
  

               
 
       
                                                                          
                  
                                                                                               
                
                
                 
                 
                
                 
                    
                                           
                                                         
                                        
                                            
                                     
                                                       
                                
                  
                                                                      
                     
                  
                                               
                 
                     
                                                                  
                                                         
                                                                    
                                            
                                            
               
                                             
                                                                                    
                                     
                           

                                                                               
                                                                      

                                        

                                                  
                                               

                                   
                                       
                                        
                                                         
                                                        
                           

                                     
                                          
                                                          
                                         
                                         
                                                                                     
                                                                                     
                                                                                         
                             

                                                      
                                 
                                 
                                 
                                 
                                 
                                  

                                                           
                                      

                                                               

                                           

                
              
                                        

               

                        
                                

                                                        
                                         
                                                                    
                                            

                  
                                                                                                      
                                                           
                                                           
                                                          
                                                                        
                                              
                                            
                                                                                  
                                                           
                                                       
                                                                 
                                                                                     
                                                                                     
                                                                                     
                                                                                       
                                                                                       
                                                                                 
                                                                                 
                                                                                           
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                     
                                                                                     
                                                                                          
                                                                                          
                                                                                          
                                                                                            
                                                                                            
                                                                                
                                                                                
                                                                                
                                                                                  
                                                                                  
                                                                            
                                                             
                                                             
                                                             
                                                               
                                                               
                                             
                                     
                                       
                                        
                                                        
                                                          
                                                            
                                                  
                                                           
                                                    
                                                    
                               
                                                      
                           
                                                           
                                                              
                                               
                                

                                            

                                                                                       
                                                                              
                                                                         
                                                                               
                                                                               
                                                                        
                                                  

                                                         
                                                    
                                                            
                                                    

                                                        
                                   
                                                                                                    
                                                           
                                           
                                            
                                                                             
                                                           
                                                
                                                                     
                                             
                                         
                                                   
                                           
                                                      
                                                                                   
                                           
                                                      
                                                                                   
                                           
                                                      
                                                                                   
                                             
                                                        
                                                                                     
                                             
                                                        
                                                                                     
                                     
                                                   
                                                      
                                        
                                          
                                                   
                                                            
                                                                
                                                           
                                                                        
                                         
                                 
                                             
                                                   
                                                   
                                               

                                                         

                                                
                                                              
                                                                  
                                                                                        
               
                                                     

                                              
                                                                            

                         
                                           

                                                          
                                                    
                                                      
                                               
                                                       
                                                       
                                                    
                                                                                         
                                                                          
                                                                                

                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
    
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            

                                               
                                                                 
                                                        

                                                      

                                                            
                                                                  
                                                                        
                                                          
                                                                
                                                                 
                                                              

                                                     
                                             
                                                   
                                                         
                                           
                                                 

                                                       
                                                
                                                            

                         
                                                         

                         
                                                        


        
                                                   
                                                  
                                       

                      

                                                                      
                       

                        
                            

                                                                      
                  
                              
                                      
                  
                                   
                                                              
                                  

                                                  
                                     
                                                    
                                                                          
                                                      
                                           
                                                     
                                                                    

                                              
                                                    
                          
                                       
                                                  
                                                              
                                      

                                                    
                                                                         
                                                                 

                                                                                   

                                                           

                                                           
                                                                             
                                        
                                                                   
  

                                                   
 
           
                      
                                                                                       
                      
                                                                        
                      
               
 
       /* __ITEMDATA_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Match.h" 20
//#include "PWSFilters.h"  // For DateType

namespace PWSMatch {
  // namespace of common utility functions

  // For  any comparing functions
  // SubGroup Function - if value used is negative, string compare IS case sensitive
  enum MatchRule {
    MR_INVALID = 0,  // Not valid value
    // For string, integer & date comparisons/filtering
    MR_EQUALS, MR_NOTEQUAL,
    MR_ACTIVE, MR_INACTIVE,
    MR_PRESENT, MR_NOTPRESENT,
    MR_SET, MR_NOTSET,
    // For entrytype & DCA & Attributes comparisons/filters
    MR_IS, MR_ISNOT,
    // For string comparisons/filters
    MR_BEGINS, MR_NOTBEGIN,
    MR_ENDS, MR_NOTEND,
    MR_CONTAINS, MR_NOTCONTAIN,
    MR_CNTNANY, MR_NOTCNTNANY,
    MR_CNTNALL, MR_NOTCNTNALL,
    // For integer and date comparisons/filtering
    MR_BETWEEN,
    // For integer comparisons/filtering
    MR_LT, MR_LE, MR_GT, MR_GE,
    // For date comparisons/filtering
    MR_BEFORE, MR_AFTER,
    // Special rules for Passwords
    MR_EXPIRED, MR_WILLEXPIRE,
    MR_LAST // MUST be last entry
  };

  enum MatchType {MT_INVALID = 0,
                  MT_STRING, MT_PASSWORD, MT_INTEGER, MT_DATE,
                  MT_BOOL, MT_PWHIST, MT_POLICY, MT_ENTRYTYPE,
                  MT_DCA, MT_SHIFTDCA, MT_ENTRYSTATUS, MT_ENTRYSIZE};

  // Generalised checking
  bool Match(const StringX &stValue, StringX sx_Object, const int &iFunction);

  template<typename T> bool Match(T v1, T v2, T value, int iFunction)
  {
    switch (iFunction) {
      case MR_EQUALS: return value == v1;
      case MR_NOTEQUAL: return value != v1;
      case MR_BETWEEN: return value >= v1 && value <= v2;
      case MR_LT: return value < v1;
      case MR_LE: return value <= v1;
      case MR_GT: return value > v1;
      case MR_GE: return value >= v1;
      case MR_BEFORE: return value < v1;
      case MR_AFTER: return value > v1;
      default: assert(0);
    }
    return false; // keep compiler happy
  }

  bool Match(bool bValue, int iFunction);  // bool - if field present or not

  UINT GetRule(MatchRule rule);
  MatchRule GetRule(const StringX &sx_mnemonic);
  const char *GetRuleString(const MatchRule rule);
  void GetMatchType(MatchType mtype,
                    int fnum1, int fnum2,
                    time_t fdate1, time_t fdate2, int fdatetype,
                    const stringT &fstring, bool fcase,
                    short fdca, int etype, int estatus, int funit,
                    bool bBetween, stringT &cs1, stringT &cs2);
}
       /* __MATCH_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 19
                     
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\ItemField.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// ItemField.h
//-----------------------------------------------------------------------------

                     
                     

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\ItemField.h" 18

//-----------------------------------------------------------------------------

/*
* CItemField contains the data for a given CItemData field in encrypted
* form.
* Set() encrypts, Get() decrypts
*/

class Fish;

class CItemField
{
public:
  explicit CItemField(unsigned char type = 0xff): m_Type(type), m_Length(0), m_Data(NULL)
  {}
  CItemField(const CItemField &that); // copy ctor
  ~CItemField() {if (m_Length > 0) delete[] m_Data;}

  CItemField &operator=(const CItemField &that);

  void Set(const StringX &value, Fish *bf, unsigned char type = 0xff);
  void Set(const unsigned char* value, size_t length, Fish *bf, unsigned char type = 0xff);

  void Get(StringX &value, Fish *bf) const;
  void Get(unsigned char *value, size_t &length, Fish *bf) const;
  unsigned char GetType() const {return m_Type;}
  size_t GetLength() const {return m_Length;}
  bool IsEmpty() const {return m_Length == 0;}
  void Empty();

private:
  //Number of 8 byte blocks needed for size
  size_t GetBlockSize(size_t size) const;

  unsigned char m_Type; // almost const
  size_t m_Length;
  unsigned char *m_Data;
};

       /* __ITEMFIELD_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 20
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWSprefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                    
                    

// PWSprefs.h
//-----------------------------------------------------------------------------

/*
* A class to abstract away the persistent storage mechanism used to store and
* retrieve user preferences. Pre-2.03 implementations used the Windows 
* registry. People have asked for preferences to be stored along with the 
* database, so that the same preferences can be shared across computers
* (e.g., using disk-on-key).
*
* Starting with v3.05, preferences have been partitioned into two types:
* per-database and 'application'. Per-database preferences,
* as the name implies, are stored in the database. 'Application' preferences
* are stored in a separate configuration file.
* For more details, see 'config.txt' in the docs subdirectory.
*
* IMPORTANT: When adding a new preference, the new enum MUST be before last,
* that is, right before the Num*Prefs enum. This is because the prefs are
* identified in storage by their type and index.
*/

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWSprefs.h" 36
                 
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\Proxy.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                 
                 

/**
 * Abstract base classes used by core to interface with the user.
 * UI-specific code should derive concrete classes and pass pointers
 * to objects of derived class for use by core.
 */

// abstract base class for asking user a question
// and getting a yes/no reply
class Asker {
public:
  virtual bool operator()(const stringT &question) = 0;
  virtual bool operator()(const stringT &title, const stringT &question) = 0;
  virtual ~Asker() {} // keep compiler happy
};

// abstract base class for reporting something of
// interest to the user
class Reporter {
public:
  virtual void operator()(const stringT &title, const stringT &message) = 0;
  virtual void operator()(const stringT &message) = 0;
  virtual ~Reporter() {} // keep compiler happy
};

       /* __PROXY_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWSprefs.h" 37
                       
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os/typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWSprefs.h" 38

                

extern HANDLE s_cfglockFileHandle;
extern int s_cfgLockCount;

struct st_prefShortcut {
  unsigned int id;
  unsigned short int siVirtKey;
  unsigned char cModifier;
};

// Bool preferences unknown to this version
struct st_BP {
  int index;
  bool bValue;
};

// Integer preferences unknown to this version
struct st_IP {
  int index;
  int iValue;
};

// String preferences unknown to this version
struct st_SP {
  int index;
  TCHAR delim;
  StringX sValue;
};

class CXMLprefs;
struct PWPolicy;

class PWSprefs
{
public:
  enum ConfigOption {CF_NONE = 0, CF_REGISTRY,
                     CF_FILE_RO, CF_FILE_RW, CF_FILE_RW_NEW};

  static const stringT cfgFileName; // one place for the config filename
  
  static PWSprefs *GetInstance(); // singleton
  static void DeleteInstance();
  static bool SetConfigFile(const stringT &fn);
  static stringT GetConfigFile(ConfigOption &configoption)
  {configoption = m_ConfigOption; return m_configfilename;}
  static void SetReporter(Reporter *pReporter) {m_pReporter = pReporter;}
  static void XMLify(charT t, stringT &name);
  static bool UserSetCfgFile() {return m_userSetCfgFile;}
  ConfigOption GetConfigOption() {return m_ConfigOption;}

  // prefString is stored in database file, format described in PWSprefs.cpp
  void Load(const StringX &prefString, bool bUseCopy = false);
  StringX Store(bool bUseCopy = false); // returns string for saving in file

  void SaveApplicationPreferences();
  void SaveShortcuts();

  enum BoolPrefs {AlwaysOnTop, ShowPWDefault,
    ShowPasswordInTree,
    SortAscending,
    UseDefaultUser, SaveImmediately, PWUseLowercase, PWUseUppercase,
    PWUseDigits, PWUseSymbols, PWUseHexDigits, PWUseEasyVision,
    DontAskQuestion, DeleteQuestion, DCShowsPassword,
    DontAskMinimizeClearYesNo, // Obsoleted in 3.13 - replaced by 2 separate
    DatabaseClear,
    DontAskSaveMinimize, // Obsoleted in 3.02
    QuerySetDef, UseNewToolbar, UseSystemTray, 
    LockOnWindowLock, 
    LockOnIdleTimeout, // Obsoleted in 3.19 - replaced by Database equivalent
    EscExits, IsUTF8, HotKeyEnabled, MRUOnFileMenu,
    DisplayExpandedAddEditDlg, // Obsoleted in 3.18
    MaintainDateTimeStamps,
    SavePasswordHistory, 
    FindWraps, // Obsoleted in 3.11
    ShowNotesDefault,
    BackupBeforeEverySave, PreExpiryWarn,
    ExplorerTypeTree, ListViewGridLines, MinimizeOnAutotype,
    ShowUsernameInTree, PWMakePronounceable,
    ClearClipoardOnMinimize, ClearClipoardOneExit, // Both obsoleted in 3.14 - typos
    ShowToolbar, ShowNotesAsTooltipsInViews, DefaultOpenRO,
    MultipleInstances, ShowDragbar,
    ClearClipboardOnMinimize, ClearClipboardOnExit,
    ShowFindToolBarOnOpen, NotesWordWrap, LockDBOnIdleTimeout,
    HighlightChanges, HideSystemTray,
    UsePrimarySelectionForClipboard,  //Only under X-Windows
    CopyPasswordWhenBrowseToURL,
    NumBoolPrefs};

  enum IntPrefs {Column1Width, Column2Width, Column3Width, Column4Width,
    SortedColumn, PWDefaultLength, MaxMRUItems, IdleTimeout,
    DoubleClickAction, HotKey, MaxREItems, TreeDisplayStatusAtOpen,
    NumPWHistoryDefault, BackupSuffix, BackupMaxIncremented,
    PreExpiryWarnDays, ClosedTrayIconColour, PWDigitMinLength,
    PWLowercaseMinLength, PWSymbolMinLength, PWUppercaseMinLength,
    OptShortcutColumnWidth, ShiftDoubleClickAction,
    NumIntPrefs};

  enum StringPrefs {CurrentBackup, CurrentFile, LastView, DefaultUsername,
    TreeFont, BackupPrefixValue, BackupDir, AltBrowser, ListColumns,
    ColumnWidths, DefaultAutotypeString, AltBrowserCmdLineParms,
    MainToolBarButtons, PasswordFont, TreeListSampleText, PswdSampleText,
    LastUsedKeyboard, VKeyboardFontName, VKSampleText, AltNotesEditor,
    LanguageFile, DefaultSymbols,
    NumStringPrefs};

  // for DoubleClickAction and ShiftDoubleClickAction
  // NOTE: When adding items, update the pwsafe.xsd & pwsafe_filter.xsd schemas
  //       to increase the maximum value in "dcaType"
  enum {minDCA = 0, DoubleClickCopyPassword = 0, DoubleClickViewEdit = 1,
    DoubleClickAutoType = 2, DoubleClickBrowse = 3, 
    DoubleClickCopyNotes = 4, DoubleClickCopyUsername = 5,
    DoubleClickCopyPasswordMinimize = 6,
    DoubleClickBrowsePlus = 7, DoubleClickRun = 8,
    DoubleClickSendEmail = 9,
    maxDCA = 9};

  // for TreeDisplayStatusAtOpen
  enum {minTDS = 0, AllCollapsed = 0, AllExpanded = 1, AsPerLastSave = 2,
    maxTDS = 2};

  // for Backup Mask
  enum {minBKSFX = 0, BKSFX_None = 0, BKSFX_DateTime = 1, BKSFX_IncNumber = 2,
    maxBKSFX = 2};

  // for System Tray icon color
  enum {stiBlack = 0, stiBlue = 1, stiWhite = 2, stiYellow = 3};

  // For Password Policy
  // Preferences changed (Database or Application or Shortcuts)
  enum {DB_PREF = 0, APP_PREF = 1, SHC_PREF = 2};

  // Preference types - values are powers of 2, except ptAll = sum of previous values
  enum PrefType {ptObsolete = 0, ptDatabase = 1, ptApplication = 2, ptAll = 3};

  bool IsDBprefsChanged() const {return m_prefs_changed[DB_PREF];}
  bool IsAPPprefsChanged() const {return m_prefs_changed[APP_PREF];}
  void ClearDBprefsChanged() {m_prefs_changed[DB_PREF] = false;}
  void ClearAPPprefsChanged() {m_prefs_changed[APP_PREF] = false;}
  void SetDBprefsChanged(const bool bChanged) {m_prefs_changed[DB_PREF] = bChanged;}
  void SetDatabasePrefsToDefaults(const bool bUseCopy = false);
  void ForceWriteApplicationPreferences()
  {m_prefs_changed[APP_PREF] = true; m_prefs_changed[SHC_PREF] = true;}

  bool GetPref(BoolPrefs pref_enum, const bool bUseCopy = false) const;
  unsigned int GetPref(IntPrefs pref_enum, const bool bUseCopy = false) const;
  StringX GetPref(StringPrefs pref_enum, const bool bUseCopy = false) const;

  // Following is for case where default value is determined at runtime
  //  Note: last parameter cannot be defaulted and must be specified in any
  //  call to distinguish it from the normal integer GetPref
  unsigned int GetPref(IntPrefs pref_enum, unsigned int defVal,
                       const bool bUseCopy) const;

  bool GetPrefDefVal(BoolPrefs pref_enum) const;
  unsigned int GetPrefDefVal(IntPrefs pref_enum) const;
  StringX GetPrefDefVal(StringPrefs pref_enum) const;

  // Get all preferences for minidump user stream
  StringX GetAllBoolPrefs(const bool bUseCopy = false);
  StringX GetAllIntPrefs(const bool bUseCopy = false);
  StringX GetAllStringPrefs(const bool bUseCopy = false);

  // Special cases
  void GetPrefRect(long &top, long &bottom, long &left, long &right) const;
  void SetPrefRect(long top, long bottom, long left, long right);
  void GetPrefPSSRect(long &top, long &bottom, long &left, long &right) const;
  void SetPrefPSSRect(long top, long bottom, long left, long right);
  int GetMRUList(stringT *MRUFiles) const;
  int SetMRUList(const stringT *MRUFiles, int n, int max_MRU);
  PWPolicy GetDefaultPolicy(const bool bUseCopy = false) const;
  void SetDefaultPolicy(const PWPolicy &pol, const bool bUseCopy = false);

  void SetupCopyPrefs();
  void UpdateFromCopyPrefs(const PWSprefs::PrefType ptype);
  void SetPref(BoolPrefs pref_enum, bool value, const bool bUseCopy = false);
  void SetPref(IntPrefs pref_enum, unsigned int value, const bool bUseCopy = false);
  void SetPref(StringPrefs pref_enum, const StringX &value, const bool bUseCopy = false);

  void ResetPref(BoolPrefs pref_enum);
  void ResetPref(IntPrefs pref_enum);
  void ResetPref(StringPrefs pref_enum);

  // CPSWRecentFileList needs to know if it can use registry or not:
  bool IsUsingRegistry() const {return m_ConfigOption == CF_REGISTRY;}

  // Get database preferences in XML format for export
  stringT GetXMLPreferences();

  // for display in status bar (debug)
  int GetConfigIndicator() const;

  // Get & set vector of user shortcuts (only in XML cnfig file)
  std::vector<st_prefShortcut> GetPrefShortcuts() const {return m_vShortcuts;}
  void SetPrefShortcuts(const std::vector<st_prefShortcut> &vShortcuts);

  // for OptionSystem property sheet - support removing registry traces
  bool OfferDeleteRegistry() const;
  void DeleteRegistryEntries();

  // Default User information from supplied DB preference string
  void GetDefaultUserInfo(const StringX &sxDBPreferences,
                          bool &bIsDefUserSet, StringX &sxDefUserValue);

  static bool LockCFGFile(const stringT &filename, stringT &locker);
  static void UnlockCFGFile(const stringT &filename);
  static bool IsLockedCFGFile(const stringT &filename);

  void ClearUnknownPrefs(); // Clear unknown preferences vectors

private:
  PWSprefs();
  ~PWSprefs();

  bool WritePref(const StringX &name, bool val);
  bool WritePref(const StringX &name, unsigned int val);
  bool WritePref(const StringX &name, const StringX &val);
  void UpdateTimeStamp();
  bool DeletePref(const StringX &name);
  void InitializePreferences();
  void LoadProfileFromDefaults();
  bool LoadProfileFromFile();
  void LoadProfileFromRegistry();
  bool CheckRegistryExists() const;
  void FindConfigFile();

  // Handle old (pre-3.05 registry-based) prefs.
  void ImportOldPrefs();
  bool OldPrefsExist() const;
  void DeleteOldPrefs();

  static PWSprefs *self; // singleton
  static stringT m_configfilename; // may be set before singleton created
  static Reporter *m_pReporter; // set as soon as possible to show errors
  static bool m_userSetCfgFile;
  CXMLprefs *m_pXML_Config;

  bool m_bRegistryKeyExists;
  static ConfigOption m_ConfigOption;
  stringT m_csHKCU, m_csHKCU_MRU, m_csHKCU_POS, m_csHKCU_PREF, m_csHKCU_SHCT;

  bool m_prefs_changed[3];  // 0 - DB stored pref; 1 - App related pref; 2 - Shortcut

  static const struct boolPref {
    const TCHAR *name; bool defVal; PrefType ptype;} m_bool_prefs[NumBoolPrefs];
  static const struct intPref {
    const TCHAR *name; unsigned int defVal; PrefType ptype; int minVal; int maxVal;} m_int_prefs[NumIntPrefs];
  static const struct stringPref {
    const TCHAR *name; const TCHAR *defVal; PrefType ptype;} m_string_prefs[NumStringPrefs];

  // current values
  bool m_boolValues[NumBoolPrefs];
  unsigned int m_intValues[NumIntPrefs];
  StringX m_stringValues[NumStringPrefs];
  struct {long top, bottom, left, right; bool changed;} m_rect, m_PSSrect;
  bool m_boolChanged[NumBoolPrefs];
  bool m_intChanged[NumIntPrefs];
  bool m_stringChanged[NumStringPrefs];

  // COPIES of current values - used to generate DB preference string for database
  // without actually updating the preferences
  bool m_boolCopyValues[NumBoolPrefs];
  unsigned int m_intCopyValues[NumIntPrefs];
  StringX m_stringCopyValues[NumStringPrefs];

  stringT *m_MRUitems;
  std::vector<st_prefShortcut> m_vShortcuts;

  // Preferences we don't know in this version of PWS
  std::vector<st_BP> m_vUnknownBPrefs;
  std::vector<st_IP> m_vUnknownIPrefs;
  std::vector<st_SP> m_vUnknownSPrefs;
};
       /*  __PWSPREFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 21
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWPolicy.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// PWPolicy.h
//-----------------------------------------------------------------------------

                    
                    

                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\PWPolicy.h" 18

// Password Policy related stuff
enum {DEFAULT_POLICY = 0, NAMED_POLICY, SPECIFIC_POLICY};
enum {DEFAULT_SYMBOLS = 0, OWN_SYMBOLS = 1}; // TBD - try to eliminate, as this should be implicit

/**
 * PWPolicy is a struct encapsulating the Password generation policy:
 * The policy consists of the following attributes:
 * - The length of the password to be generated
 * - Which type of characters to use from the following: lowercase, uppercase,
 *   digits, symbols
 * - Whether or not to restrict the generated password to hexadecimal (candidate for removal?)
 * - Whether or not to use only characters that are easily distinguishable
 *   (i.e., no '1', 'l', 'I', etc.)
 * - Whether or not to make a password that's pronounceable (and hence easier to memorize)
 *
 */
struct PWPolicy {
  enum {
    UseLowercase        = 0x8000, // Can have a minimum length field
    UseUppercase        = 0x4000, // Can have a minimum length field
    UseDigits           = 0x2000, // Can have a minimum length field
    UseSymbols          = 0x1000, // Can have a minimum length field
    UseHexDigits        = 0x0800,
    UseEasyVision       = 0x0400,
    MakePronounceable   = 0x0200,
    Unused              = 0x01ff};

  unsigned short flags; // bitwise-or of the above
  int length;
  int digitminlength;
  int lowerminlength;
  int symbolminlength;
  int upperminlength;
  StringX symbols; // policy-specific set of 'symbol' characters
  size_t usecount; // how many entries use this policy?

  PWPolicy() : flags(0), length(0), 
               digitminlength(0), lowerminlength(0),
               symbolminlength(0), upperminlength(0),
               symbols(""), usecount(0) {}

  // PWPolicy has a persistent textual representation:
  PWPolicy(const StringX &str); // String2Policy
  operator StringX() const; // Policy2String
  // copy c'tor and assignment operator, standard idioms
  PWPolicy(const PWPolicy &that)
    : flags(that.flags), length(that.length),
      digitminlength(that.digitminlength),
      lowerminlength(that.lowerminlength),
      symbolminlength(that.symbolminlength),
      upperminlength(that.upperminlength),
      symbols(that.symbols), usecount(that.usecount) {}

  PWPolicy &operator=(const PWPolicy &that)
  {
    if (this != &that) {
      flags  = that.flags;
      length = that.length;
      digitminlength  = that.digitminlength;
      lowerminlength  = that.lowerminlength;
      symbolminlength = that.symbolminlength;
      upperminlength  = that.upperminlength;
      symbols = that.symbols;
      // don't care about usecount!
    }
    return *this;
  }

  bool operator==(const PWPolicy &that) const;

  bool operator!=(const PWPolicy &that) const
  {return !(*this == that);}

  void Empty()
  { 
    flags = 0; length = 0;
    digitminlength  = lowerminlength = 0;
    symbolminlength = upperminlength = 0;
    symbols = ""; usecount = 0;
  }

  // Following calls CPasswordCharPool::MakePassword()
  // with arguments matching 'this' policy, or,
  // preference-defined policy if this->flags == 0
  StringX MakeRandomPassword() const;

  // "User friendly" Display of a policy
  StringX GetDisplayString();

  typedef void (*RowPutter)(int row, const stringT &name, const stringT &value, void *table);
  void Policy2Table(RowPutter rp, void *table);

private:
  friend class PWSprefs; // PWSprefs can call Normalize()
                      
                                                                        
      
  void Normalize(); // make policy internally consistent
};

//-----------------------------------------------------------------
// Structure for maintaining history of policy changes for Undo/Redo

// Change flags
enum  CPP_FLAGS {CPP_INVALID = 0, CPP_ADD = 1, CPP_DELETE = 2, CPP_MODIFIED = 4};

struct st_PSWDPolicyChange {
  StringX name;
  PWPolicy st_pp_save;
  PWPolicy st_pp_new;
  CPP_FLAGS flags;

  st_PSWDPolicyChange()
  : name(""), flags(CPP_INVALID)
  {
    st_pp_save.Empty();
    st_pp_new.Empty();
  }

  st_PSWDPolicyChange(const StringX &in_name, CPP_FLAGS in_flags,
          const PWPolicy &in_st_pp_original,
          const PWPolicy &in_st_pp_new)
  : name(in_name), st_pp_save(in_st_pp_original),
  st_pp_new(in_st_pp_new), flags(in_flags)
  {}

  st_PSWDPolicyChange(const st_PSWDPolicyChange &that)
    : name(that.name), st_pp_save(that.st_pp_save),
    st_pp_new(that.st_pp_new), flags(that.flags)
  {}

  st_PSWDPolicyChange &operator=(const st_PSWDPolicyChange &that)
  {
    if (this != &that) {
      name = that.name;
      flags = that.flags;
      st_pp_save = that.st_pp_save;
      st_pp_new = that.st_pp_new;
    }
    return *this;
  }

  bool operator==(const st_PSWDPolicyChange &that) const
  {
    if (this != &that) {
      if (name != that.name ||
          st_pp_save != that.st_pp_save ||
          st_pp_new != that.st_pp_new)
        return false;
    }
    return true;
  }

  bool operator!=(const st_PSWDPolicyChange &that) const
  {return !(*this == that);}

  void Empty()
  { 
    name = "";
    flags = CPP_INVALID;
    st_pp_save.Empty();
    st_pp_new.Empty();
  }
};

       /* __PWPOLICY_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 22
                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os/UUID.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// UUID.h
// Wrapper class for UUIDs, generating and converting them to/from
// various representations.
// Each instance has its own unique value, 
// which can be accessed as an array of bytes or as a human-readable
// ASCII string.
//

                
                

             
                                       
     
                      // aptitude install uuid-dev
typedef uuid_t uuid_array_t;
typedef uuid_t UUID;
      

                 // for memcmp
                  
                    
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\typedefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                   
                   

   
                                                                 
                                                          
                            
 
  

                 
  
                                                                 
                                    
   

                                                                          
                                                               
                              
                              

              
                             
                      
                    
     
                            
                   
               
      

                                                                   

                                                                                  
                                                                                   
                                                                                    
                                
                                
                                
                                
 
                                           
                                                                 
                                
                                
                                

             
                  
                     
                      
                      
                      

                               
                                
                                
                                

                                 
                                 

                          

                     

                                                             
               
               
               

             
                  

                            
                         
                           
                                                              
            
              
      
             
               
      
                    

                            
                   
                      
                     
                      
                      
                      

                       
                        
                        
                        

                    

              
          
                    
      
                      
     
               
                   
                      
                    

                                        
                      
                             
                  
                           
                      
                       
                     
                              
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
                             
                             
                                                   
                                             
                                          
                                                                                        
                                                                           	
     
      
      
                       
                          
                   
                                       

                         
                           
                                                      
                           
            
                 
      
             
                   
      

                                                   
                  
                           
                   

       /* _TYPEDEFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os/UUID.h" 40
                           
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os\../core/StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\os/UUID.h" 41

                

namespace pws_os {
class CUUID
{
public:
  CUUID(); // UUID generated at creation time
  CUUID(const CUUID &uuid);
  CUUID(const uuid_array_t &ua, bool canonic = false); // for storing an existing UUID
  CUUID(const StringX &s); // s is a hex string as returned by cast to StringX
  static const CUUID &NullUUID(); // singleton all-zero
  ~CUUID();

  // Following get Array Representation of the uuid:
  void GetARep(uuid_array_t &ua) const;
  const uuid_array_t *GetARep() const; // internally allocated, deleted in d'tor
  
  CUUID &operator=(const CUUID &that);
  operator StringX() const; // GetHexStr, e.g., "204012e6600f4e01a5eb515267cb0d50"
  bool operator==(const CUUID &that) const;
  bool operator!=(const CUUID &that) const { return !(*this == that); }
  bool operator<(const CUUID &that) const;

  friend std::ostream &operator<<(std::ostream &os, const pws_os::CUUID &uuid);
  friend std::wostream &operator<<(std::wostream &os, const pws_os::CUUID &uuid);

private:
  UUID m_uuid;
  mutable uuid_array_t *m_ua; // for GetUUID();
  mutable bool m_canonic;
};

std::ostream &operator<<(std::ostream &os, const CUUID &uuid);
std::wostream &operator<<(std::wostream &os, const CUUID &uuid);
} // end of pws_os namespace

typedef std::vector<pws_os::CUUID> UUIDVector;
typedef UUIDVector::iterator UUIDVectorIter;

       /* __UUID_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 23
                   
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\..\..\core\StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 24

                 // for time_t
                
                
                
             

typedef std::vector<CItemField> UnknownFields;
typedef UnknownFields::const_iterator UnknownFieldsConstIter;

//-----------------------------------------------------------------------------

/*
* CItemData is a class that contains the data present in a password entry
*
* 'Name' is the pre-2.x field, that had both the entry title and the
* username rolled-in together, separated by SPLTCHR (defined in util.h).
* In 2.0 and later, this field is unused, and the title and username
* are stored in separate fields.
*
* What makes this class interesting is that all fields are kept encrypted
* from the moment of construction, and are decrypted by the appropriate
* accessor (Get* member function).
*
* All this is to protect the data in memory, and has nothing to do with
* how the records are written to disk.
*/

class BlowFish;
class PWSfile;

struct DisplayInfoBase
{
  // Following used by display methods of the GUI
  DisplayInfoBase() {}
  virtual ~DisplayInfoBase() {}
  virtual DisplayInfoBase *clone() const = 0; // virtual c'tor idiom
};

class CItemData
{
public:
  // field types, per formatV{2,3}.txt. Any value > 0xff is internal only!
  enum FieldType {
    START = 0x00, GROUPTITLE = 0x00 /* reusing depreciated NAME for Group.Title combination */,
    NAME = 0x00,
    UUID = 0x01,
    GROUP = 0x02,
    TITLE = 0x03,
    USER = 0x04,
    NOTES = 0x05,
    PASSWORD = 0x06,
    CTIME = 0x07,  // Entry 'C'reation time
    PMTIME = 0x08, // last 'P'assword 'M'odification time
    ATIME = 0x09,  // last 'A'ccess time
    XTIME = 0x0a,  // password e'X'piry time
    RESERVED = 0x0b /* cannot use */,
    RMTIME = 0x0c, // last 'R'ecord 'M'odification time
    URL = 0x0d, AUTOTYPE = 0x0e,
    PWHIST = 0x0f,
    POLICY = 0x10, // string encoding of item-specific password policy
    XTIME_INT = 0x11,
    RUNCMD = 0x12,
    DCA = 0x13,    // doubleclick action (enum)
    EMAIL = 0x14,
    PROTECTED = 0x15,
    SYMBOLS = 0x16,    // string of item-specific password symbols
    SHIFTDCA = 0x17,   // shift-doubleclick action (enum)
    POLICYNAME = 0x18, // named non-default password policy for item
    KBSHORTCUT = 0x19, // Keyboard shortcuts
    LAST,        // Start of unknown fields!
    END = 0xff,
    // Internal fields only - used in filters
    ENTRYSIZE = 0x100, ENTRYTYPE = 0x101, ENTRYSTATUS  = 0x102, PASSWORDLEN = 0x103,
    // 'UNKNOWNFIELDS' should be last
    UNKNOWNFIELDS = 0x104};

  // Password Policy stuff: Either PWPolicy (+ optionally symbols) is not empty
  // or PolicyName is not empty. Both cannot be set. All can be empty.

  // SubGroup Object - same as FieldType

  // Status returns from "ProcessInputRecordField"
  enum {SUCCESS = 0, FAILURE, END_OF_FILE = 8};

  // Entry type (note: powers of 2)
  enum EntryType {ET_INVALID      = -1,
                  ET_NORMAL       =  0, 
                  ET_ALIASBASE    =  1, ET_ALIAS    = 2, 
                  ET_SHORTCUTBASE =  4, ET_SHORTCUT = 8,
                  ET_LAST};

  // Entry status (note: powers of 2)
  // A status can (currently) have values:
  //   0 (normal), 1 (added), 2 (modified) or 4 (deleted).
  enum EntryStatus {ES_INVALID      = -1,
                    ES_CLEAN        =  0,
                    ES_ADDED        =  1,  // Added    but not yet saved to disk copy
                    ES_MODIFIED     =  2,  // Modified but not yet saved to disk copy
                    ES_DELETED      =  4,  // Deleted  but not yet removed from disk copy
                    ES_LAST};

  // Flags if error found during validate of the entry
  enum  {VF_OK              =  0,
         VF_BAD_UUID        =  1,
         VF_EMPTY_TITLE     =  2,
         VF_EMPTY_PASSWORD  =  4,
         VF_NOT_UNIQUE_GTU  =  8,
         VF_BAD_PSWDHISTORY = 16};

  // a bitset for indicating a subset of an item's fields: 
  typedef std::bitset<LAST> FieldBits;

  static void SetSessionKey(); // call exactly once per session

  static bool IsTextField(unsigned char t);

  //Construction
  CItemData();
  CItemData(const CItemData& stuffhere);

  ~CItemData();

  int Read(PWSfile *in);
  int Write(PWSfile *out) const;

  // Convenience: Get the name associated with FieldType
  static stringT FieldName(FieldType ft);
  // Convenience: Get the untranslated (English) name of a FieldType
  static stringT EngFieldName(FieldType ft);

  //Data retrieval
  StringX GetName() const {return GetField(NAME);} // V17 - deprecated: replaced by GetTitle & GetUser
  StringX GetTitle() const {return GetField(TITLE);} // V20
  StringX GetUser() const  {return GetField(USER);}  // V20
  StringX GetPassword() const {return GetField(PASSWORD);}
  size_t GetPasswordLength() const {return GetField(PASSWORD).length();}
  StringX GetNotes(TCHAR delimiter = 0) const;
  void GetUUID(uuid_array_t &) const; // V20
  const pws_os::CUUID GetUUID() const; // V20 - see comment in .cpp re return type
  StringX GetGroup() const {return GetField(GROUP);} // V20
  StringX GetURL() const {return GetField(URL);} // V30
  StringX GetAutoType() const {return GetField(AUTOTYPE);} // V30
  StringX GetATime() const {return GetTime(ATIME, PWSUtil::TMC_ASC_UNKNOWN);}  // V30
  StringX GetCTime() const {return GetTime(CTIME, PWSUtil::TMC_ASC_UNKNOWN);}  // V30
  StringX GetXTime() const {return GetTime(XTIME, PWSUtil::TMC_ASC_UNKNOWN);}  // V30
  StringX GetPMTime() const {return GetTime(PMTIME, PWSUtil::TMC_ASC_UNKNOWN);}  // V30
  StringX GetRMTime() const {return GetTime(RMTIME, PWSUtil::TMC_ASC_UNKNOWN);}  // V30
  StringX GetATimeL() const {return GetTime(ATIME, PWSUtil::TMC_LOCALE);}  // V30
  StringX GetCTimeL() const {return GetTime(CTIME, PWSUtil::TMC_LOCALE);}  // V30
  StringX GetXTimeL() const {return GetTime(XTIME, PWSUtil::TMC_LOCALE_DATE_ONLY);}  // V30
  StringX GetPMTimeL() const {return GetTime(PMTIME, PWSUtil::TMC_LOCALE);}  // V30
  StringX GetRMTimeL() const {return GetTime(RMTIME, PWSUtil::TMC_LOCALE);}  // V30
  StringX GetATimeN() const {return GetTime(ATIME, PWSUtil::TMC_ASC_NULL);}  // V30
  StringX GetCTimeN() const {return GetTime(CTIME, PWSUtil::TMC_ASC_NULL);}  // V30
  StringX GetXTimeN() const {return GetTime(XTIME, PWSUtil::TMC_ASC_NULL);}  // V30
  StringX GetPMTimeN() const {return GetTime(PMTIME, PWSUtil::TMC_ASC_NULL);}  // V30
  StringX GetRMTimeN() const {return GetTime(RMTIME, PWSUtil::TMC_ASC_NULL);}  // V30
  StringX GetATimeExp() const {return GetTime(ATIME, PWSUtil::TMC_EXPORT_IMPORT);}  // V30
  StringX GetCTimeExp() const {return GetTime(CTIME, PWSUtil::TMC_EXPORT_IMPORT);}  // V30
  StringX GetXTimeExp() const {return GetTime(XTIME, PWSUtil::TMC_EXPORT_IMPORT);}  // V30
  StringX GetPMTimeExp() const {return GetTime(PMTIME, PWSUtil::TMC_EXPORT_IMPORT);}  // V30
  StringX GetRMTimeExp() const {return GetTime(RMTIME, PWSUtil::TMC_EXPORT_IMPORT);}  // V30
  StringX GetATimeXML() const {return GetTime(ATIME, PWSUtil::TMC_XML);}  // V30
  StringX GetCTimeXML() const {return GetTime(CTIME, PWSUtil::TMC_XML);}  // V30
  StringX GetXTimeXML() const {return GetTime(XTIME, PWSUtil::TMC_XML);}  // V30
  StringX GetPMTimeXML() const {return GetTime(PMTIME, PWSUtil::TMC_XML);}  // V30
  StringX GetRMTimeXML() const {return GetTime(RMTIME, PWSUtil::TMC_XML);}  // V30
  //  These populate the time structure instead of giving a character string
  void GetATime(time_t &t) const {GetTime(ATIME, t);}  // V30
  void GetCTime(time_t &t) const {GetTime(CTIME, t);}  // V30
  void GetXTime(time_t &t) const {GetTime(XTIME, t);}  // V30
  void GetPMTime(time_t &t) const {GetTime(PMTIME, t);}  // V30
  void GetRMTime(time_t &t) const {GetTime(RMTIME, t);}  // V30
  void GetXTimeInt(int32 &xint) const; // V30
  StringX GetXTimeInt() const; // V30
  StringX GetPWHistory() const;  // V30
  void GetPWPolicy(PWPolicy &pwp) const;
  StringX GetPWPolicy() const {return GetField(POLICY);}
  StringX GetRunCommand() const {return GetField(RUNCMD);}
  void GetDCA(short &iDCA, const bool bShift = false) const;
  StringX GetDCA(const bool bShift = false) const;
  void GetShiftDCA(short &iDCA) const {GetDCA(iDCA, true);}
  StringX GetShiftDCA() const {return GetDCA(true);}
  StringX GetEmail() const {return GetField(EMAIL);}
  StringX GetProtected() const;
  void GetProtected(unsigned char &ucprotected) const;
  bool IsProtected() const;
  StringX GetSymbols() const    {return GetField(SYMBOLS);}
  StringX GetPolicyName() const {return GetField(POLICYNAME);}
  void GetKBShortcut(int32 &iKBShortcut) const;
  StringX GetKBShortcut() const;

  StringX GetFieldValue(FieldType ft) const;

  // GetPlaintext returns all fields separated by separator, if delimiter is != 0, then
  // it's used for multi-line notes and to replace '.' within the Title field.
  StringX GetPlaintext(const TCHAR &separator, const FieldBits &bsExport,
                       const TCHAR &delimiter, const CItemData *pcibase) const;
  std::string GetXML(unsigned id, const FieldBits &bsExport, TCHAR m_delimiter,
                     const CItemData *pcibase, bool bforce_normal_entry,
                     bool &bXMLErrorsFound) const;

  void SetUnknownField(unsigned char type, size_t length,
                       const unsigned char *ufield);
  size_t NumberUnknownFields() const {return m_URFL.size();}
  void ClearUnknownFields() {return m_URFL.clear();}

  void CreateUUID(); // V20 - generate UUID for new item
  void SetName(const StringX &name,
               const StringX &defaultUsername); // V17 - deprecated - replaced by SetTitle & SetUser
  void SetTitle(const StringX &title, TCHAR delimiter = 0);
  void SetUser(const StringX &user); // V20
  void SetPassword(const StringX &password);
  void UpdatePassword(const StringX &password); // use when password changed!
  void SetNotes(const StringX &notes, TCHAR delimiter = 0);
  void SetUUID(const uuid_array_t &uuid); // V20
  void SetUUID(const pws_os::CUUID &uuid) {SetUUID(*uuid.GetARep());}
  void SetGroup(const StringX &group); // V20
  void SetURL(const StringX &url); // V30
  void SetAutoType(const StringX &autotype); // V30
  void SetATime() {SetTime(ATIME);}  // V30
  void SetATime(time_t t) {SetTime(ATIME, t);}  // V30
  bool SetATime(const stringT &time_str) {return SetTime(ATIME, time_str);}  // V30
  void SetCTime() {SetTime(CTIME);}  // V30
  void SetCTime(time_t t) {SetTime(CTIME, t);}  // V30
  bool SetCTime(const stringT &time_str) {return SetTime(CTIME, time_str);}  // V30
  void SetXTime() {SetTime(XTIME);}  // V30
  void SetXTime(time_t t) {SetTime(XTIME, t);}  // V30
  bool SetXTime(const stringT &time_str) {return SetTime(XTIME, time_str);}  // V30
  void SetPMTime() {SetTime(PMTIME);}  // V30
  void SetPMTime(time_t t) {SetTime(PMTIME, t);}  // V30
  bool SetPMTime(const stringT &time_str) {return SetTime(PMTIME, time_str);}  // V30
  void SetRMTime() {SetTime(RMTIME);}  // V30
  void SetRMTime(time_t t) {SetTime(RMTIME, t);}  // V30
  bool SetRMTime(const stringT &time_str) {return SetTime(RMTIME, time_str);}  // V30
  void SetXTimeInt(int &xint); // V30
  bool SetXTimeInt(const stringT &xint_str); // V30
  void SetPWHistory(const StringX &PWHistory);  // V30
  void SetPWPolicy(const PWPolicy &pwp);
  bool SetPWPolicy(const stringT &cs_pwp);
  void SetRunCommand(const StringX &cs_RunCommand);
  void SetDCA(const short &iDCA, const bool bShift = false);
  bool SetDCA(const stringT &cs_DCA, const bool bShift = false);
  void SetShiftDCA(const short &iDCA) {SetDCA(iDCA, true);}
  bool SetShiftDCA(const stringT &cs_DCA) {return SetDCA(cs_DCA, true);}
  void SetEmail(const StringX &sx_email);
  void SetProtected(bool bOnOff);
  void SetSymbols(const StringX &sx_symbols);
  void SetPolicyName(const StringX &sx_PolicyName);
  void SetKBShortcut(const StringX &sx_KBShortcut);
  void SetKBShortcut(const int32 &iKBShortcut);

  void SetFieldValue(FieldType ft, const StringX &value);

  CItemData& operator=(const CItemData& second);
  // Following used by display methods - we just keep it handy
  DisplayInfoBase *GetDisplayInfo() const {return m_display_info;}
  void SetDisplayInfo(DisplayInfoBase *di) {delete m_display_info; m_display_info = di;}
  void Clear();
  void ClearField(FieldType ft) {m_fields.erase(ft);}

  // Check record for correct password history
  bool ValidatePWHistory(); // return true if OK, false if there's a problem

  bool IsExpired() const;
  bool WillExpire(const int numdays) const;

  // Predicate to determine if item matches given criteria
  bool Matches(const stringT &stValue, int iObject, 
               int iFunction) const;  // string values
  bool Matches(int num1, int num2, int iObject,
               int iFunction) const;  // integer values
  bool Matches(time_t time1, time_t time2, int iObject,
               int iFunction) const;  // time values
  bool Matches(short dca, int iFunction, const bool bShift = false) const;  // DCA values
  bool Matches(EntryType etype, int iFunction) const;  // Entrytype values
  bool Matches(EntryStatus estatus, int iFunction) const;  // Entrystatus values

  bool IsGroupSet() const                  { return IsFieldSet(GROUP);     }
  bool IsUserSet() const                   { return IsFieldSet(USER);      }
  bool IsNotesSet() const                  { return IsFieldSet(NOTES);     }
  bool IsURLSet() const                    { return IsFieldSet(URL);       }
  bool IsRunCommandSet() const             { return IsFieldSet(RUNCMD);    }
  bool IsEmailSet() const                  { return IsFieldSet(EMAIL);     }
  bool IsUUIDSet() const                   { return IsFieldSet(UUID);      }
  bool IsTitleSet() const                  { return IsFieldSet(TITLE);     }
  bool IsPasswordSet() const               { return IsFieldSet(PASSWORD);  }
  bool IsCreationTimeSet() const           { return IsFieldSet(CTIME);     }
  bool IsModificationTimeSet() const       { return IsFieldSet(PMTIME);    }
  bool IsLastAccessTimeSet() const         { return IsFieldSet(ATIME);     }
  bool IsExpiryDateSet() const             { return IsFieldSet(XTIME);     }
  bool IsRecordModificationTimeSet() const { return IsFieldSet(RMTIME);    }
  bool IsAutoTypeSet() const               { return IsFieldSet(AUTOTYPE);  }
  bool IsPasswordHistorySet() const        { return IsFieldSet(PWHIST);    }
  bool IsPasswordPolicySet() const         { return IsFieldSet(POLICY);    }
  bool IsPasswordExpiryIntervalSet() const { return IsFieldSet(XTIME_INT); }
  bool IsDCASet() const                    { return IsFieldSet(DCA);       }
  bool IsShiftDCASet() const               { return IsFieldSet(SHIFTDCA);  }
  bool IsProtectionSet() const             { return IsFieldSet(PROTECTED); }
  bool IsSymbolsSet() const                { return IsFieldSet(SYMBOLS);   }
  bool IsPolicyNameSet() const             { return IsFieldSet(POLICYNAME);}
  bool IsKBShortcutSet() const             { return IsFieldSet(KBSHORTCUT);}
    
  bool IsGroupEmpty() const                { return !IsGroupSet();         }
  bool IsUserEmpty() const                 { return !IsUserSet();          }
  bool IsNotesEmpty() const                { return !IsNotesSet();         }
  bool IsURLEmpty() const                  { return !IsURLSet();           }
  bool IsRunCommandEmpty() const           { return !IsRunCommandSet();    }
  bool IsEmailEmpty() const                { return !IsEmailSet();         }
  bool IsPolicyEmpty() const               { return !IsPasswordPolicySet();}

  void SerializePlainText(std::vector<char> &v,
                          const CItemData *pcibase = NULL) const;
  bool DeSerializePlainText(const std::vector<char> &v);

  EntryType GetEntryType() const {return m_entrytype;}

  bool IsNormal() const {return (m_entrytype == ET_NORMAL);}
  bool IsAliasBase() const {return (m_entrytype == ET_ALIASBASE);}
  bool IsShortcutBase() const {return (m_entrytype == ET_SHORTCUTBASE);}
  bool IsAlias() const {return (m_entrytype == ET_ALIAS);}
  bool IsShortcut() const {return (m_entrytype == ET_SHORTCUT);}
  bool IsBase() const {return IsAliasBase() || IsShortcutBase();}
  bool IsDependent() const {return IsAlias() || IsShortcut();}

  void SetEntryType(EntryType et) {m_entrytype = et;}
  void SetNormal() {m_entrytype = ET_NORMAL;}
  void SetAliasBase() {m_entrytype = ET_ALIASBASE;}
  void SetShortcutBase() {m_entrytype = ET_SHORTCUTBASE;}
  void SetAlias() {m_entrytype = ET_ALIAS;}
  void SetShortcut() {m_entrytype = ET_SHORTCUT;}

  EntryStatus GetStatus() const {return m_entrystatus;}
  void ClearStatus() {m_entrystatus = ES_CLEAN;}
  void SetStatus(const EntryStatus es) {m_entrystatus = es;}

  bool IsURLEmail() const
  {return GetURL().find("mailto:") != StringX::npos;}

  size_t GetSize() const;
  void GetSize(size_t &isize) const {isize = GetSize();}


private:
  typedef std::map<FieldType, CItemField> FieldMap;
  typedef FieldMap::const_iterator FieldConstIter;
  typedef FieldMap::iterator FieldIter;

  FieldMap   m_fields;

  // Save unknown record fields on read to put back on write unchanged
  UnknownFields m_URFL;

  EntryType m_entrytype;
  EntryStatus m_entrystatus;

  // random key for storing stuff in memory, just to remove dependence
  // on passphrase
  static bool IsSessionKeySet;
  static unsigned char SessionKey[64];
  //The salt value
  unsigned char m_salt[20];
  // Following used by display methods - we just keep it handy
  DisplayInfoBase *m_display_info;

  // move from pre-2.0 name to post-2.0 title+user
  void SplitName(const StringX &name,
                 StringX &title, StringX &username);
  StringX GetTime(int whichtime, PWSUtil::TMC result_format) const; // V30
  void GetTime(int whichtime, time_t &t) const; // V30
  void SetTime(const int whichtime); // V30
  void SetTime(const int whichtime, time_t t); // V30
  bool SetTime(const int whichtime, const stringT &time_str); // V30

  // Create local Encryption/Decryption object
  BlowFish *MakeBlowFish(bool noData = false) const;
  // Laziness is a Virtue:
  StringX GetField(FieldType ft) const;
  StringX GetField(const CItemField &field) const;
  void GetField(const CItemField &field, unsigned char *value,
                size_t &length) const;

  void SetField(FieldType ft, const StringX &value);
  void SetField(FieldType ft, const unsigned char *value, size_t length);
  bool SetField(int type, const unsigned char *data, size_t len);

  bool IsFieldSet(FieldType ft) const {return m_fields.find(ft) != m_fields.end();}

  void UpdatePasswordHistory(); // used by UpdatePassword()

  void GetUnknownField(unsigned char &type, size_t &length,
                       unsigned char * &pdata, const CItemField &item) const;
  int WriteUnknowns(PWSfile *out) const;
  size_t WriteIfSet(FieldType ft, PWSfile *out, bool isUTF8) const;
};

inline bool CItemData::IsTextField(unsigned char t)
{
  return !(
    t == UUID       ||
    t == CTIME      || t == PMTIME || t == ATIME    || t == XTIME     || t == RMTIME ||
    t == XTIME_INT  ||
    t == RESERVED   || t == DCA    || t == SHIFTDCA || t == PROTECTED ||
    t == KBSHORTCUT ||
    t >= LAST);
}
       /* __ITEMDATA_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.h" 15
                     
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\./wxutils.h" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

////////////////////////////////////////////////////////////////////
// wxutils.h - file for various wxWidgets related utility functions, 
// macros, classes, etc


                     
                     

                              
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\.\../../core/StringX.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/

                   
                   

   
                  
  
                                              
                                                
                                                      
  
   

                 
                 
                 
                                   
                                
                                

                           
                          

                 
 
                       
                     
     
           
                 
                                  
                                        
                                
                                      
                                  
                                        
                                   

           
                     
                              
                                                

                           
                                                     

                                                  
                     
       

                   
                               

                          
                                          
                    
       

                                                      
                    
       

                                  
                                                                
       

                              
                                                    
                                 
                                              
       

                             
                                     
                                   
                     
       

                                            
                           
                       
                                       
          

                            
                                                             
                                     
                                                                     
                                                                                      
                      
                                 
                 
       

                         
                                                         
                                              
                                               
                             
                                                                     
                                                                       
                        
                      
                 

                    
                                            
                                  
                                  
                                  
         
                     
       

            
                

                            

               
                                     
                                           
                                                     
                
   

                                     
                                           
                                                     
                 
   

                          

              
                                  
                                                    
                                                                  
     
                               
                                                 
                                                               
      

                                                                       
                                                                         
                                                     
  
                                                                          
                               

                                                              
                                                            
                                     
                                     
                                                              
                                                             
                                                         
                                                   
                                                          
                                                                
                                            
                                                           
                                                  
                                                 

                                                                                          
                                                                                            

       /* __STRINGX_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\./wxutils.h" 22
                               
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\.\../../core/PWSprefs.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
                    
                    

             
                                                                               

  
                                                                             
                                                                       
                                                                          
                                                                       
                            
 
                                                                        
                                                           
                                                                            
                                              
                                                              
 
                                                                            
                                                                         
                                                
  

                    
                  
                        

                 

                                  
                          

                        
                  
                               
                          
  

                                           
              
            
              
  

                                              
              
            
             
  

                                             
              
            
              
                 
  

                
                

              
 
       
                                              
                                                             

                                                                        
  
                                              
                               
                                               
                                                          
                                                           
                                                                         
                                             
                                                         
                                                         

                                                                            
                                                              
                                                                            

                                    
                       

                                             
                       
                  
                                                                    
                                                               
                                                     
                                                                            
                  
                                             
                                               
                      
                                                                             
                                                   
                                                   
                           
                         
                                   
                     
                                         
                                                            
                                            
                                                                                    
                                                           
                                   
                                                   
                                                              
                                     
                                                            
                                
                  

                                                                        
                                                            
                                                                   
                                                            
                                                              
                                                                  
                                                   
                 

                                                                          
                                                                    
                                                                
                                                                         
                                                                      
                                 
                    

                                                     
                                                                               
                                                     
                                                                         
                                                    
                                                          
                                        
                                                  
                             
                

                                
                                                                         
                

                    
                                                                              
                  

                               
                                                                

                        
                                                               
                                                 

                                                                                     
                                                                               

                                                                  
                                                                    
                                                                
                                                                  
                                                                                    
                                                               
                                         
                                                                       

                                                                       
                                                                              
                                                                            

                                                                       
                                                                           
                                                            
                                                               
                                                  

                                                
                                                       
                                                     

                                                 
                                                       
                                                      
                                                         

                  
                                                                           
                                                                 
                                                                              
                                                                    
                                          
                                                              
                                                               
                                                                          

                        
                                                           
                                                                             
                                                                                    
                                                                                         

                                      
                                     
                                        

                                                                    
                                                                      

                                                      
                              

                                      
                                 

                                                                
                                                                              
                                                                        

                                                                       
                                   
                               

                                                                
                                                         
                                                                        

                                                                    
                                                     
                                                       

                                                                

        
             
              

                                                
                                                        
                                                          
                         
                                       
                               
                                 
                             
                                 
                                   
                        

                                                
                        
                             
                        

                                     
                                                                         
                                                                         
                               
                           

                            
                                     
                                                                             

                                                                                     

                                
                                                                                
                               
                                                                                                              
                                  
                                                                                            

                   
                                  
                                        
                                         
                                                                          
                                   
                                 
                                       

                                                                                  
                                              
                                      
                                            
                                             

                      
                                            

                                                     
                                      
                                      
                                      
  
       /*  __PWSPREFS_H */

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\./wxutils.h" 23

inline wxString& operator << ( wxString& str, const wxPoint& pt) {
  return str << wxT('[') << pt.x << wxT(',') << pt.y << wxT(']');
}

inline wxString& operator << ( wxString& str, const wxSize& sz) {
  return str << wxT('[') << sz.GetWidth() << wxT(',') << sz.GetHeight() << wxT(']');
}

inline wxString towxstring(const StringX& str) {
  return wxString(str.data(), str.size());
}

inline wxString towxstring(const stringT& str) {
	return wxString(str.data(), str.size());
}

inline stringT tostdstring(const wxString& str) {
                          
                            
     
  return stringT(str.data(), str.size());
      
}

inline StringX tostringx(const wxString& str) {
  return StringX(str.data(), str.size());
}

inline wxString& operator<<(wxString& w, const StringX& s) {
  return w << towxstring(s);
}

inline wxString& operator<<(wxString& w, const stringT& s) {
  return w << towxstring(s);
}

inline void ApplyPasswordFont(wxWindow* win)
{
  wxFont passwordFont(towxstring(PWSprefs::GetInstance()->GetPref(PWSprefs::PasswordFont)));
  if (passwordFont.IsOk()) {
    win->SetFont(passwordFont);
  }
}

//
// Macro to add RTTI to class templates that use DECLARE_CLASS macro
//
//This is required because these are really just specializations of templates
//and therefore we need to specify the template parameters (the "template <>" part)
//
// Used by help subsystem to figure out class names from the template specializations
//
//Copied (and modified) from <wx/object.h>
//












enum {
      TopMargin     = 20,
      BottomMargin  = 20,
      SideMargin    = 30,
      RowSeparation = 10,
      ColSeparation = 20
};

extern bool MergeSyncGTUCompare(const StringX &elem1, const StringX &elem2);

class EventHandlerDisabler {
  wxEvtHandler* m_handler;
  bool m_enabled;
public:
  EventHandlerDisabler(wxEvtHandler* h): m_handler(h), m_enabled(h->GetEvtHandlerEnabled()){
    if (m_enabled)
      h->SetEvtHandlerEnabled(false);
  }
  ~EventHandlerDisabler() {
    if (m_enabled)
      m_handler->SetEvtHandlerEnabled(true);
  }
};

class PWScore;
int ReadCore(PWScore& othercore, const wxString& file, const StringX& combination, 
                bool showMsgbox = true, wxWindow* msgboxParent = NULL, bool setupCopy = false);

inline const wxChar* ToStr(const wxString& s) {
  if (s == wxEmptyString) {
    return wxT("wxEmptyString");
  }
  else {
    return s.GetData();
  }
}

inline const wxChar* ToStr(bool b) {
  return b? wxT("True"): wxT("False");
}

void HideWindowRecursively(wxTopLevelWindow* win, wxWindowList& hiddenWindows);
void ShowWindowRecursively(wxWindowList& hiddenWindows);

// Workaround for wxTE_PASSWORD being immutable:
void ShowHideText(wxTextCtrl *&txtCtrl, const wxString &text,
                  wxSizer *sizer, bool show);

//ensures at least one of the checkboxes are selected
class MultiCheckboxValidator: public wxValidator
{
 protected:
  int* m_ids;
  size_t m_count;
  wxString m_msg, m_title;

public:
  MultiCheckboxValidator(int ids[], size_t num, const wxString& msg, const wxString& title);
  MultiCheckboxValidator(const MultiCheckboxValidator&);
  ~MultiCheckboxValidator();

  virtual wxObject* Clone() const;
  virtual bool Validate(wxWindow* parent);
  //note that you need to derive from this class if
  //the following two functions ought to do anything useful
  virtual bool TransferToWindow() { return true; }
  virtual bool TransferFromWindow() { return true; }

};

/*
 * This class injects context data into an event, to avoid having
 * to "remember" that data in member variables.  It does that by
 * hooking itself in as a dynamic event handler entry into the
 * event source, which are called before other types of handlers
 */
template <class evtClass>
class EventDataInjector: public wxEvtHandler
{
  wxEvtHandler* m_evtSource;
  void* m_clientData;
  wxEventType m_eventType;
  int m_windowId;
  bool  m_oneShot;
public:
  EventDataInjector(wxEvtHandler* evtSource, void* clientData,
                    wxEventType evtType, int winid = wxID_ANY,
                    bool oneShot = true): m_evtSource(evtSource),
                                          m_clientData(clientData),
                                          m_eventType(evtType),
                                          m_windowId(winid),
                                          m_oneShot(oneShot)
  {    
    evtSource->Connect(winid, evtType, 
                  evtType,
                  (wxObjectEventFunction)&EventDataInjector::OnHookedEvent,
                  NULL, //this is for wxWidgets' private use only
                  this);
  }

  void OnHookedEvent(evtClass& evt) {
    evt.Skip();
    wxCHECK_RET(!evt.GetClientData(), wxT("Command event already has client data"));
    evt.SetClientData(m_clientData);
    if (m_oneShot) {
      wxCHECK_RET(m_evtSource->Disconnect(m_windowId, m_eventType,
                              (wxObjectEventFunction)&EventDataInjector::OnHookedEvent,
                              NULL, this), wxT("Could not remove dynamic event parameter injection hook"));
    }
  }
};

int pless(int* first, int* second);

template <typename T>
class AutoRestore
{
  T& m_ref;
  T  m_oldVal;
public:
  AutoRestore(T& var, T newVal): m_ref(var), m_oldVal(var)
  {
    var = newVal;
  }
  ~AutoRestore()
  {
    m_ref = m_oldVal;
  }
};

      


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.h" 16


/*
 *
 * AdvancedSelectionPanel is a composite UI widget which looks like this:
 * 
 *    +----------------------------------------------------------------------------+
 *    |    +------------------------------------------------------------------+    |
 *    |    |  [x] Restrict to a subset of entries                             |    |
 *    |    |         ___________      __________                              |    |
 *    |    |  where [___________[v]  [__________[v]                           |    |
 *    |    |                                                                  |    |
 *    |    |  the following text                                              |    |
 *    |    |  _____________________________                                   |    |
 *    |    | [_____________________________]                                  |    |
 *    |    |                                                                  |    |
 *    |    |  [x] Case Sensitive                                              |    |
 *    |    +------------------------------------------------------------------+    |
 *    |                                                                            |
 *    |    Available Fields                  Selected Fields                       |
 *    |    +-----------------+               +--------------------------------+    |
 *    |    | URL             |     [  > ]    | Group [Mandatory field]        |    |
 *    |    | Password        |     [ >> ]    | Title [Mandatory field]        |    |
 *    |    | Email           |     [ <  ]    | Username [Mandatory field]     |    |
 *    |    | Notes           |     [ << ]    | Autotype                       |    |
 *    |    |    .....        |               |    ...........                 |    |
 *    |    +-----------------+               +--------------------------------+    |
 *    |                                                                            |
 *    +----------------------------------------------------------------------------+
 *
 * This widget is used in multiple situations where users need to select
 * a subset of entries in their current db for some operation, while also
 * restricting the operation to a set of fields of those entries. There
 * are at least 5 such operations: Export to Text/XML, Compare, Merge, Synchronize
 * and Search. In some situations though, the user cannot choose the individual fields,
 * e.g while Merging a DB with another.  All fields of selected entries are merged.
 *
 * For example, the user might want to export the Group, Title, Username and Autotype
 * fields a set of entries where the URL contains the word "gmail".
 *
 * Or he might want to search for some text in a set of entries where the Title contains
 * "Bank", and also restrict the search to Email and Notes fields.
 *
 * The Widget is re-usable as a stand-alone dialog (Export to Text/XML), or as an embedded
 * child element in another dialog (Compare) or wizard (Synchronize).
 *
 * It uses the SelectionCriteria class as the backing data structure.
 *
 */

struct SelectionCriteria;
 
/*!
 * AdvancedSelectionDlg class declaration
 */

class AdvancedSelectionPanel: public wxPanel
{
  DECLARE_CLASS(AdvancedSelectionPanel)
  DECLARE_EVENT_TABLE()

  DECLARE_NO_COPY_CLASS(AdvancedSelectionPanel)

public:
  AdvancedSelectionPanel(wxWindow* wnd, SelectionCriteria* existingCriteria, bool autoValidate);

  bool Validate();               //overriden from wxWindow
  bool TransferDataToWindow();   //overriden from wxWindow
  bool TransferDataFromWindow(); //overriden from wxWindow
  void OnSelectSome( wxCommandEvent& evt );
  void OnSelectAll( wxCommandEvent& evt );
  void OnRemoveSome( wxCommandEvent& evt );
  void OnRemoveAll( wxCommandEvent& evt );
  void OnRestrictSearchItems(wxCommandEvent& evt);

  void CreateControls(wxWindow* parentWnd);
  bool DoValidation();               //actual validator

protected:
  virtual bool IsMandatoryField(CItemData::FieldType field) const = 0;
  virtual bool IsPreselectedField(CItemData::FieldType field) const = 0;
  virtual bool IsUsableField(CItemData::FieldType field) const = 0;
  virtual bool ShowFieldSelection() const = 0;
  virtual wxString GetTaskWord() const = 0;
  
public:
  SelectionCriteria* m_criteria;
  bool m_autoValidate;
};

template <class DlgType>
class AdvancedSelectionImpl: public AdvancedSelectionPanel
{
public:
  AdvancedSelectionImpl(wxWindow* wnd, SelectionCriteria* existingCriteria, bool autoValidate):
    AdvancedSelectionPanel(wnd, existingCriteria, autoValidate)
  {}

  virtual bool IsMandatoryField(CItemData::FieldType field) const {
    return DlgType::IsMandatoryField(field);
  }
  
  virtual bool IsPreselectedField(CItemData::FieldType field) const {
    return DlgType::IsPreselectedField(field);
  }

  virtual bool IsUsableField(CItemData::FieldType field) const {
    return DlgType::IsUsableField(field);
  }

  virtual bool ShowFieldSelection() const {
    return DlgType::ShowFieldSelection();
  }
  
  virtual wxString GetTaskWord() const {
    return DlgType::GetTaskWord();
  }
};

template <class DlgType>
class AdvancedSelectionDlg : public wxDialog
{
  DECLARE_CLASS(AdvancedSelectionDlg)

  typedef AdvancedSelectionImpl<DlgType> PanelType;
  PanelType* m_panel;

public:
  AdvancedSelectionDlg(wxWindow* parent, SelectionCriteria* existingCriteria): m_panel(0)
  {
    wxDialog::Create(parent, wxID_ANY, wxEmptyString, wxDefaultPosition, 
                            wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
  

    wxBoxSizer* sizer = new wxBoxSizer(wxVERTICAL);
    sizer->AddSpacer(TopMargin);

    m_panel = new PanelType(this, existingCriteria, true);
    m_panel->CreateControls(this);
    sizer->Add(m_panel, wxSizerFlags().Expand().Proportion(1));
    
    sizer->AddSpacer(RowSeparation);
    sizer->Add(CreateSeparatedButtonSizer(wxOK|wxCANCEL|wxHELP), 
                      wxSizerFlags().Border(wxLEFT|wxRIGHT, SideMargin).Expand());
    sizer->AddSpacer(BottomMargin);
    
    SetTitle(DlgType::GetAdvancedSelectionTitle());
    
    SetSizerAndFit(sizer);
  }
};


      

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.cpp" 26
                             
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\SelectionCriteria.h" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

                               
                               

                               
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\../../core/ItemData.h" 0
/*
* Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
* All rights reserved. Use of the code is allowed under the
* Artistic License 2.0 terms, as specified in the LICENSE file
* distributed with this code, or available from
* http://www.opensource.org/licenses/artistic-license-2.0.php
*/
// ItemData.h
//-----------------------------------------------------------------------------

                    
                    

                 
                  
                      
                     
                     
                    
                    

                               
                 
                 
                 
              

                                              
                                                             

                                                                               

  
                                                                         
 
                                                                    
                                                                        
                                                                    
                                
 
                                                                         
                                                                       
                                  
 
                                                                       
                                      
  

               
              

                      
 
                                                 
                      
                               
                                                                    
  

               
 
       
                                                                          
                  
                                                                                               
                
                
                 
                 
                
                 
                    
                                           
                                                         
                                        
                                            
                                     
                                                       
                                
                  
                                                                      
                     
                  
                                               
                 
                     
                                                                  
                                                         
                                                                    
                                            
                                            
               
                                             
                                                                                    
                                     
                           

                                                                               
                                                                      

                                        

                                                  
                                               

                                   
                                       
                                        
                                                         
                                                        
                           

                                     
                                          
                                                          
                                         
                                         
                                                                                     
                                                                                     
                                                                                         
                             

                                                      
                                 
                                 
                                 
                                 
                                 
                                  

                                                           
                                      

                                                               

                                           

                
              
                                        

               

                        
                                

                                                        
                                         
                                                                    
                                            

                  
                                                                                                      
                                                           
                                                           
                                                          
                                                                        
                                              
                                            
                                                                                  
                                                           
                                                       
                                                                 
                                                                                     
                                                                                     
                                                                                     
                                                                                       
                                                                                       
                                                                                 
                                                                                 
                                                                                           
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                   
                                                                                     
                                                                                     
                                                                                          
                                                                                          
                                                                                          
                                                                                            
                                                                                            
                                                                                
                                                                                
                                                                                
                                                                                  
                                                                                  
                                                                            
                                                             
                                                             
                                                             
                                                               
                                                               
                                             
                                     
                                       
                                        
                                                        
                                                          
                                                            
                                                  
                                                           
                                                    
                                                    
                               
                                                      
                           
                                                           
                                                              
                                               
                                

                                            

                                                                                       
                                                                              
                                                                         
                                                                               
                                                                               
                                                                        
                                                  

                                                         
                                                    
                                                            
                                                    

                                                        
                                   
                                                                                                    
                                                           
                                           
                                            
                                                                             
                                                           
                                                
                                                                     
                                             
                                         
                                                   
                                           
                                                      
                                                                                   
                                           
                                                      
                                                                                   
                                           
                                                      
                                                                                   
                                             
                                                        
                                                                                     
                                             
                                                        
                                                                                     
                                     
                                                   
                                                      
                                        
                                          
                                                   
                                                            
                                                                
                                                           
                                                                        
                                         
                                 
                                             
                                                   
                                                   
                                               

                                                         

                                                
                                                              
                                                                  
                                                                                        
               
                                                     

                                              
                                                                            

                         
                                           

                                                          
                                                    
                                                      
                                               
                                                       
                                                       
                                                    
                                                                                         
                                                                          
                                                                                

                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
    
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            
                                                                            

                                               
                                                                 
                                                        

                                                      

                                                            
                                                                  
                                                                        
                                                          
                                                                
                                                                 
                                                              

                                                     
                                             
                                                   
                                                         
                                           
                                                 

                                                       
                                                
                                                            

                         
                                                         

                         
                                                        


        
                                                   
                                                  
                                       

                      

                                                                      
                       

                        
                            

                                                                      
                  
                              
                                      
                  
                                   
                                                              
                                  

                                                  
                                     
                                                    
                                                                          
                                                      
                                           
                                                     
                                                                    

                                              
                                                    
                          
                                       
                                                  
                                                              
                                      

                                                    
                                                                         
                                                                 

                                                                                   

                                                           

                                                           
                                                                             
                                        
                                                                   
  

                                                   
 
           
                      
                                                                                       
                      
                                                                        
                      
               
 
       /* __ITEMDATA_H */
//-----------------------------------------------------------------------------
// Local variables:
// mode: c++
// End:

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\SelectionCriteria.h" 14
                     
#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\./wxutils.h" 0
/*
 * Copyright (c) 2003-2013 Rony Shapiro <ronys@users.sourceforge.net>.
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

////////////////////////////////////////////////////////////////////
// wxutils.h - file for various wxWidgets related utility functions, 
// macros, classes, etc


                     
                     

                               
                                

                                                                  
                                                                 
 

                                                                 
                                                                                    
 

                                                
                                          
 

                                                
	                                        
 

                                                 
                          
                            
     
                                         
      
 

                                               
                                         
 

                                                            
                            
 

                                                            
                            
 

                                            
 
                                                                                            
                            
                               
   
 

  
                                                                    
  
                                                                             
                                                                                   
  
                                                                                     
  
                                          
  












      
                         
                         
                         
                         
                        
  

                                                                            

                            
                          
                 
       
                                                                                            
                  
                                     
   
                           
                  
                                            
   
  

              
                                                                                   
                                                                                               

                                               
                           
                                
   
        
                       
   
 

                                    
                                      
 

                                                                               
                                                        

                                                
                                                             
                                             

                                                     
                                                
 
           
             
                 
                          

       
                                                                                            
                                                        
                            

                                  
                                          
                                                   
                                                           
                                                  
                                                    

  

  
                                                                 
                                                                
                                                              
                                                                
   
                         
                                            
 
                            
                     
                          
                 
                  
       
                                                              
                                                              
                                                                 
                                                                   
                                                               
                                                            
                                                            
       
                                       
                          
                                                                           
                                                                 
                        
   

                                     
               
                                                                                    
                                    
                    
                                                                  
                                                                                       
                                                                                                           
     
   
  

                                   

                     
                 
 
           
              
       
                                                          
   
                 
   
                
   
                     
   
  

      


#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\SelectionCriteria.h" 15


/*
 * SelectionCriteria data structure backs the AdvancedSelectionPanel widget
 * 
 */

struct SelectionCriteria 
{
  SelectionCriteria() : m_fCaseSensitive(false),
                        m_fUseSubgroups(false),
                        m_subgroupObject(0),            // index into subgroups array defined in .cpp
                        m_subgroupFunction(0),          // index into subgroupFunctions array defined in .cpp
                        m_fDirty(false)
  {
    SelectAllFields();
  }
  
  SelectionCriteria(const SelectionCriteria& other):  m_fCaseSensitive(other.m_fCaseSensitive),
                                                      m_bsFields(other.m_bsFields),
                                                      m_subgroupText(other.m_subgroupText),
                                                      m_fUseSubgroups(other.m_fUseSubgroups),
                                                      m_subgroupObject(other.m_subgroupObject),
                                                      m_subgroupFunction(other.m_subgroupFunction),
                                                      m_fDirty(false)
  {}

private:
  bool                  m_fCaseSensitive;
  CItemData::FieldBits  m_bsFields;
  wxString              m_subgroupText;
  bool                  m_fUseSubgroups;
  int                   m_subgroupObject;
  int                   m_subgroupFunction;
  bool                  m_fDirty;

public:
  bool IsDirty(void) const { return m_fDirty; }
  void Clean(void) { m_fDirty = false; }
  
  bool HasSubgroupRestriction() const             { return m_fUseSubgroups; }
  CItemData::FieldBits GetSelectedFields() const  { return m_bsFields; }
  size_t GetNumSelectedFields() const             { return m_bsFields.count(); }
  wxString SubgroupSearchText() const             { return m_subgroupText; }
  bool CaseSensitive() const                      { return m_fCaseSensitive; }
  CItemData::FieldType SubgroupObject() const     { return GetSubgroup(m_subgroupObject);}
  PWSMatch::MatchRule  SubgroupFunction() const   { return GetSubgroupFunction(m_subgroupFunction); }
  int  SubgroupFunctionWithCase() const           { return m_fCaseSensitive? -SubgroupFunction(): SubgroupFunction(); }
  void SelectAllFields()                          { for(size_t idx = 0; idx < GetNumFieldsSelectable(); ++idx) 
                                                      m_bsFields.set(GetSelectableField(idx));
                                                  }
  void SelectField(CItemData::FieldType ft)       { m_bsFields.set(ft); }
  void ResetField(CItemData::FieldType ft)        { m_bsFields.reset(ft); }
  size_t SelectedFieldsCount() const              { return m_bsFields.count(); }
  size_t TotalFieldsCount() const                 { return m_bsFields.size(); }
  bool IsFieldSelected(CItemData::FieldType ft) const { return m_bsFields.test(ft); }

  bool MatchesSubgroupText(const CItemData& item) const {
    //could be very inefficient in a loop across the entire DB
    return !m_fUseSubgroups || item.Matches(tostdstring(m_subgroupText), SubgroupObject(), SubgroupFunction());
  }
  
  wxString GetGroupSelectionDescription() const;
  //returns true if all fields have been selected
  bool GetFieldSelection(wxArrayString& selectedFields, wxArrayString& unselectedFields);

SelectionCriteria& operator=(const SelectionCriteria& data) {
    m_fCaseSensitive    = data.m_fCaseSensitive;
    m_bsFields          = data.m_bsFields;
    m_subgroupText      = data.m_subgroupText;
    m_fUseSubgroups     = data.m_fUseSubgroups;
    m_subgroupObject    = data.m_subgroupObject;
    m_subgroupFunction  = data.m_subgroupFunction;
    
    m_fDirty = true;
    
    return *this;
  }
  friend class AdvancedSelectionPanel;
  friend bool operator!=(const SelectionCriteria& a, const SelectionCriteria& b);

  // static helpers for outsiders
  static size_t GetNumSubgroups(void);
  static CItemData::FieldType GetSubgroup(size_t idx);
  static size_t GetNumFieldsSelectable();
  static CItemData::FieldType GetSelectableField(size_t idx);
  static wxString GetSelectableFieldName(CItemData::FieldType ft);
  static size_t GetNumSubgroupFunctions();
  static wxString GetSubgroupFunctionName(size_t idx);
  static PWSMatch::MatchRule GetSubgroupFunction(size_t idx);

};

inline bool operator!=(const SelectionCriteria& a, const SelectionCriteria& b)
{
  return a.m_bsFields         != b.m_bsFields         || 
         a.m_fCaseSensitive   != b.m_fCaseSensitive   ||
         a.m_fUseSubgroups    != b.m_fUseSubgroups    ||
         a.m_subgroupFunction != b.m_subgroupFunction ||
         a.m_subgroupText     != b.m_subgroupText     ||
         a.m_subgroupObject   != b.m_subgroupObject; 
}

      

#__FILE__ _"C:\Users\Billy\Dropbox\Thesis\Projects\pwsafe-3.32-src\src\ui\wxWidgets\AdvancedSelectionDlg.cpp" 27

                
                          
      

void EnableSizerElements(wxSizer* sizer, wxWindow* ignore, bool enable);

////////////////////////////////////////////////////////////////////////////
// AdvancedSelectionPanel implementation

IMPLEMENT_CLASS( AdvancedSelectionPanel, wxPanel )

enum {ID_SELECT_SOME = 101, ID_SELECT_ALL, ID_REMOVE_SOME, ID_REMOVE_ALL, ID_LB_AVAILABLE_FIELDS, ID_LB_SELECTED_FIELDS };

BEGIN_EVENT_TABLE( AdvancedSelectionPanel, wxPanel )
  EVT_BUTTON( ID_SELECT_SOME, AdvancedSelectionPanel::OnSelectSome )
  EVT_BUTTON( ID_SELECT_ALL, AdvancedSelectionPanel::OnSelectAll )
  EVT_BUTTON( ID_REMOVE_SOME, AdvancedSelectionPanel::OnRemoveSome )
  EVT_BUTTON( ID_REMOVE_ALL, AdvancedSelectionPanel::OnRemoveAll )
END_EVENT_TABLE()


AdvancedSelectionPanel::AdvancedSelectionPanel(wxWindow* parentWnd,
                                               SelectionCriteria* existingCriteria,
                                               bool autoValidate):
                                                  m_criteria(existingCriteria),
                                                  m_autoValidate(autoValidate)
{
  (void)(parentWnd);
  parentWnd->SetExtraStyle(wxWS_EX_VALIDATE_RECURSIVELY);
}

void AdvancedSelectionPanel::CreateControls(wxWindow* parentWnd)
{
  wxPanel::Create(parentWnd);

  wxBoxSizer* dlgSizer = new wxBoxSizer(wxVERTICAL);

  //Subset entries
  {
    wxStaticBoxSizer* sizer = new wxStaticBoxSizer(wxVERTICAL, this);

    wxCheckBox* check = new wxCheckBox(this, wxID_ANY, _("&Restrict to a subset of entries:"));
    check->SetValidator(wxGenericValidator(&m_criteria->m_fUseSubgroups));
    sizer->Add(check, wxSizerFlags().Border());
    check->Connect(wxEVT_COMMAND_CHECKBOX_CLICKED,
                    wxCommandEventHandler(AdvancedSelectionPanel::OnRestrictSearchItems));

    wxBoxSizer* hbox = new wxBoxSizer(wxHORIZONTAL);
    hbox->Add(new wxStaticText(this, wxID_ANY, _("&Where")), wxSizerFlags(0));
    hbox->AddSpacer(ColSeparation);

    wxComboBox* comboSubgroup = new wxComboBox(this, wxID_ANY);
    for (size_t idx = 0 ; idx < SelectionCriteria::GetNumSubgroups(); ++idx) comboSubgroup->AppendString(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSubgroup(idx)));
    comboSubgroup->SetValidator(wxGenericValidator(&m_criteria->m_subgroupObject));
    hbox->Add(comboSubgroup, wxSizerFlags(1).Expand());

    hbox->AddSpacer(ColSeparation);

    wxComboBox* comboFunctions = new wxComboBox(this, wxID_ANY);
    for( size_t idx = 0; idx < SelectionCriteria::GetNumSubgroupFunctions(); ++idx) comboFunctions->AppendString(SelectionCriteria::GetSubgroupFunctionName(idx));
    comboFunctions->SetValidator(wxGenericValidator(&m_criteria->m_subgroupFunction));
    hbox->Add(comboFunctions, wxSizerFlags(1).Expand());

    sizer->Add(hbox, wxSizerFlags().Border().Expand());

    sizer->Add( new wxStaticText(this, wxID_ANY, _("the &following text:")), wxSizerFlags().Border());

    wxTextCtrl* txtCtrl = new wxTextCtrl(this, wxID_ANY, _("*"), wxDefaultPosition, wxSize(200, -1));
    txtCtrl->SetValidator(wxGenericValidator(&m_criteria->m_subgroupText));
    sizer->Add(txtCtrl, wxSizerFlags().Border().Expand().FixedMinSize());

    wxCheckBox* checkCaseSensitivity = new wxCheckBox(this, wxID_ANY, _("&Case Sensitive"));
    checkCaseSensitivity->SetValidator(wxGenericValidator(&m_criteria->m_fCaseSensitive));
    sizer->Add( checkCaseSensitivity, wxSizerFlags().Border() );

    dlgSizer->Add(sizer, wxSizerFlags().Border(wxLEFT|wxRIGHT, SideMargin).Expand());

    EnableSizerElements(sizer, check, m_criteria->HasSubgroupRestriction());
  }

  if (ShowFieldSelection()) {

    dlgSizer->AddSpacer(RowSeparation);

    {
      wxFlexGridSizer* grid = new wxFlexGridSizer(3, RowSeparation, ColSeparation);

      //first and third columns are growable
      grid->AddGrowableCol(0, 1);
      grid->AddGrowableCol(2, 1);
      grid->AddGrowableRow(1, 1);
      grid->SetFlexibleDirection(wxBOTH);

      //first row is labels, with a spacer in between
      grid->Add(new wxStaticText(this, wxID_ANY, _("&Available Fields:")));
      grid->AddSpacer(0);
      grid->Add(new wxStaticText(this, wxID_ANY, _("&Selected Fields:")));

      //second row is the listboxes, with buttons in between

      wxListBox* lbAvailable = new wxListBox(this, ID_LB_AVAILABLE_FIELDS, wxDefaultPosition,
                                             wxDefaultSize, 0, NULL, wxLB_EXTENDED);
      grid->Add(lbAvailable, wxSizerFlags().Expand());

      wxBoxSizer* buttonBox = new wxBoxSizer(wxVERTICAL);
      buttonBox->AddStretchSpacer();
      buttonBox->Add( new wxButton(this, ID_SELECT_SOME, wxT(">")) );
      buttonBox->AddSpacer(RowSeparation);
      buttonBox->Add( new wxButton(this, ID_SELECT_ALL, wxT(">>")) );
      buttonBox->AddSpacer(RowSeparation*2);
      buttonBox->Add( new wxButton(this, ID_REMOVE_SOME, wxT("<")) );
      buttonBox->AddSpacer(RowSeparation);
      buttonBox->Add( new wxButton(this, ID_REMOVE_ALL, wxT("<<")) );
      buttonBox->AddStretchSpacer();

      grid->Add(buttonBox, wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));

      wxListBox* lbSelected = new wxListBox(this, ID_LB_SELECTED_FIELDS, wxDefaultPosition,
                                            wxDefaultSize, 0, NULL, wxLB_EXTENDED);
      grid->Add(lbSelected, wxSizerFlags().Expand());

      dlgSizer->Add(grid, wxSizerFlags(1).Expand().Border(wxLEFT | wxRIGHT, SideMargin));

      //add all the field names to both listboxes to size the dialog/wizard page correctly
      //These are anyway removed in TransferDataToWindow below before doing anything else
      for (size_t idx=0; idx < SelectionCriteria::GetNumFieldsSelectable(); ++idx) {
        lbAvailable->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(idx)), reinterpret_cast<void *>(idx));
        lbSelected->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(idx)), reinterpret_cast<void *>(idx));
      }
    }
  }

  SetSizerAndFit(dlgSizer);
}

bool AdvancedSelectionPanel::TransferDataToWindow()
{
  if (wxPanel::TransferDataToWindow()) {
    if (ShowFieldSelection()) {
      // Temporary hack until I can write a proper validator for SelectionCriteria class
      // which would set its dirty flag automatically
      const bool criteriaChanged = (*m_criteria != SelectionCriteria());
      wxListBox* lbAvailable  = wxDynamicCast(FindWindow(ID_LB_AVAILABLE_FIELDS), wxListBox);
      wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);
      lbAvailable->Clear();
      lbSelected->Clear();

      for (size_t idx = 0; idx < SelectionCriteria::GetNumFieldsSelectable(); ++idx) {
        const CItemData::FieldType ft = SelectionCriteria::GetSelectableField(idx);
        if (IsUsableField(ft)) {
          if ( (criteriaChanged && m_criteria->IsFieldSelected(ft)) ||
                              (!criteriaChanged && IsPreselectedField(ft)) ) {
            const wxString title = SelectionCriteria::GetSelectableFieldName(ft) + (IsMandatoryField(ft)? _(" [Mandatory Field]"): wxEmptyString);
            lbSelected->Append(title, reinterpret_cast<void *>(idx));
          }
          else {
            lbAvailable->Append(SelectionCriteria::GetSelectableFieldName(ft), reinterpret_cast<void *>(idx));
          }
        }
      }
    }
    return true;
  }
  return false;
}

bool AdvancedSelectionPanel::DoValidation()
{
  if (ShowFieldSelection()) {
    wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);
    wxASSERT(lbSelected);
    if (lbSelected->GetCount() == 0) {
      wxMessageBox(wxString(_("You must select some of the fields to ")) << GetTaskWord(),
                        _("No fields selected"), wxOK|wxICON_INFORMATION, this);
      return false;
    }
  }
  return true;
}

bool AdvancedSelectionPanel::Validate()
{
  return !m_autoValidate || DoValidation();
}

bool AdvancedSelectionPanel::TransferDataFromWindow()
{
  if ( wxPanel::TransferDataFromWindow()) {
    if (ShowFieldSelection()) {
      wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);
      wxASSERT(lbSelected);

      //reset the selected field bits
      m_criteria->m_bsFields.reset();
      const size_t count = lbSelected->GetCount();

      for (size_t idx = 0; idx < count; ++idx) {
          const size_t which = reinterpret_cast<size_t>(lbSelected->GetClientData(static_cast<unsigned int>(idx)));
          m_criteria->SelectField(SelectionCriteria::GetSelectableField(which));
      }
    }
    return true;
  }
  return false;
}

void AdvancedSelectionPanel::OnSelectSome( wxCommandEvent& /* evt */ )
{
  wxListBox* lbAvailable = wxDynamicCast(FindWindow(ID_LB_AVAILABLE_FIELDS), wxListBox);
  wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);

  wxASSERT(lbAvailable);
  wxASSERT(lbSelected);

  wxArrayInt aSelected;
  if (lbAvailable->GetSelections(aSelected)) {
    aSelected.Sort(pless);
    for (size_t idx = 0; idx < aSelected.GetCount(); ++idx) {
      size_t which = reinterpret_cast<size_t>(lbAvailable->GetClientData(static_cast<unsigned int>(aSelected[idx] - idx)));
      wxASSERT(which < SelectionCriteria::GetNumFieldsSelectable());
      lbAvailable->Delete(static_cast<unsigned int>(aSelected[idx] - idx));
      lbSelected->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(which)), reinterpret_cast<void *>(which));
    }
  }
}

void AdvancedSelectionPanel::OnSelectAll( wxCommandEvent& /* evt */ )
{
  wxListBox* lbAvailable = wxDynamicCast(FindWindow(ID_LB_AVAILABLE_FIELDS), wxListBox);
  wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);

  wxASSERT(lbAvailable);
  wxASSERT(lbSelected);

  while (lbAvailable->GetCount()) {
      size_t which = reinterpret_cast<size_t>(lbAvailable->GetClientData(0));
      lbAvailable->Delete(0);
      lbSelected->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(which)), reinterpret_cast<void *>(which));
  }
}

void AdvancedSelectionPanel::OnRemoveSome( wxCommandEvent& /* evt */ )
{
  wxListBox* lbAvailable = wxDynamicCast(FindWindow(ID_LB_AVAILABLE_FIELDS), wxListBox);
  wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);

  wxASSERT(lbAvailable);
  wxASSERT(lbSelected);

  wxArrayInt aSelected;
  if (lbSelected->GetSelections(aSelected)) {
    aSelected.Sort(pless);
    for (size_t idx = 0, nRemoved = 0; idx < aSelected.GetCount(); ++idx) {
      size_t which = reinterpret_cast<size_t>(lbSelected->GetClientData(static_cast<unsigned int>(aSelected[idx] - nRemoved)));
      wxASSERT(which < SelectionCriteria::GetNumFieldsSelectable());
      if (!IsMandatoryField(SelectionCriteria::GetSelectableField(which))) {
        lbSelected->Delete(static_cast<unsigned int>(aSelected[idx] - nRemoved++));
        lbAvailable->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(which)), reinterpret_cast<void *>(which));
      }
    }
  }
}

void AdvancedSelectionPanel::OnRemoveAll( wxCommandEvent& /* evt */ )
{
  wxListBox* lbAvailable = wxDynamicCast(FindWindow(ID_LB_AVAILABLE_FIELDS), wxListBox);
  wxListBox* lbSelected  = wxDynamicCast(FindWindow(ID_LB_SELECTED_FIELDS), wxListBox);

  wxASSERT(lbAvailable);
  wxASSERT(lbSelected);

  for(size_t itemsLeft = lbSelected->GetCount(), idx = 0; idx < itemsLeft; ) {
      size_t which = reinterpret_cast<size_t>(lbSelected->GetClientData(reinterpret_cast<unsigned int &>(idx)));
      if (!IsMandatoryField(SelectionCriteria::GetSelectableField(which))) {
        lbSelected->Delete(reinterpret_cast<unsigned int &>(idx));
        lbAvailable->Append(SelectionCriteria::GetSelectableFieldName(SelectionCriteria::GetSelectableField(which)), reinterpret_cast<void *>(which));
        --itemsLeft;
      }
      else
        ++idx;
  }
}

/*
 * Recursively enables/disables all sizer elements.  The <ignore> window
 * is not disabled
 */
void EnableSizerElements(wxSizer* sizer, wxWindow* ignore, bool enable)
{
  wxCHECK_RET(sizer, wxT("Null sizer passed to EnableSizerElements"));

  wxSizerItemList& items = sizer->GetChildren();
  for (wxSizerItemList::iterator itr = items.begin(); itr != items.end(); ++itr) {
    wxSizerItem* item = *itr;
    if (item->IsWindow() && item->GetWindow() != ignore)
      item->GetWindow()->Enable(enable);
    else if (item->IsSizer())
      EnableSizerElements(item->GetSizer(), ignore, enable);
  }
}

void AdvancedSelectionPanel::OnRestrictSearchItems(wxCommandEvent& evt)
{
  wxWindow* checkbox = wxDynamicCast(evt.GetEventObject(), wxWindow);
  wxCHECK_RET(checkbox, wxT("Could not get checkbox from check event object"));
  wxSizer* sizer = checkbox->GetContainingSizer();
  wxCHECK_RET(sizer, wxT("Could not get the sizer owning the checkbox"));
  EnableSizerElements(sizer, checkbox, evt.IsChecked());
}
